


@using EvictionFiler.Application.DTOs.ApartmentDto
@using EvictionFiler.Application.DTOs.ClientDto
@using EvictionFiler.Application.DTOs.LandLordDto
@using EvictionFiler.Application.DTOs.TenantDto
@using EvictionFiler.Client.Services
@using EvictionFiler.Domain.Enums
@using Microsoft.AspNetCore.Components.Forms
@inject ClientService _clientService
@inject LandLordService _landlordService
@inject ApartmentService _apartmentService
@inject TenantService _tenantService
@rendermode InteractiveAuto
@inject NavigationManager Navigation


@inject IJSRuntime JS

<style>
    :root {
        --bs-primary: #1F365D;
        --bs-warning: #D4A844;
        --bs-light: #F7F6F3;
    }

    body {
        background-color: var(--bs-light);
    }

    .offcanvas.show {
        transform: translateX(0%);
    }

    .offcanvas {
        transform: translateX(100%);
        width: 900px !important;
        transition: transform 0.5s ease-in-out;
    }

    .color-text {
        color: var(--bs-primary);
    }

    .form-control::placeholder {
        font-size: 0.9rem;
    }

    .input-group-text {
        background-color: var(--bs-light);
        color: var(--bs-primary);
        font-weight: 500;
    }

    .form-wrapper {
        transition: transform 0.5s ease, opacity 0.5s ease;
        will-change: transform, opacity;
    }

    /* .form-wrapper.hidden {
                transform: translateX(-100%);
                opacity: 0;
                pointer-events: none;
            } */

    .overlay-form {
        animation: slideIn 0.5s ease forwards;
        background-color: white;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }

    @@keyframes slideIn {
        from {
            opacity: 0;
            transform: translateX(100%);
        }

        to {
            opacity: 1;
            transform: translateX(0%);
        }
    }

    .form-wrapper.hidden {
        display: none !important;
    }

    .vertical-buttons button {
        /*  min-width: 100px; */
        text-align: center;
    }

    .vertical-tab-button {
        writing-mode: vertical-rl; /* vertical top-to-bottom */
        text-orientation: upright;
        background-color: #f0f2f5;
        color: #1F365D;
        font-weight: 700;
        font-size: 14px;
        border: none;
        padding: 12px 8px;
        border-radius: 10px;
        margin-bottom: 12px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    }

        .vertical-tab-button:hover {
            background-color: #1F365D;
            color: white;
            transform: translateY(-2px);
        }

    .active-vertical {
        background: linear-gradient(135deg, #1F365D, #2F4F7F);
        color: white;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }


       .tab-button {
            background: transparent;
            color: #1F365D;
            border: 2px solid transparent;
            padding: 0.6rem 1rem;
            min-width: 120px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border-radius: 8px;
            transition: all 0.3s ease-in-out;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
        }

            .tab-button:hover {
                background: #1F365D;
                color: white;
                border-color: #1F365D;
                transform: translateY(-2px);
            }

        .active-tab {
            background: linear-gradient(135deg, #1F365D, #2F4F7F);
            color: white !important;
            border-color: #1F365D;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        } */
    .required-label::after {
        content: " *";
        color: red;
    }

  
    .status-active {
        background-color: rgba(25,135,84,1);
        color: #fff;
        padding: 2px 7px;
        border-radius: 1rem;
        font-size: 12px;
    }

    .container {
        /* background-color: #F2F0EC; */
        border: solid 1px #F2F0EC;
        box-shadow: 0 15px 20px #F2F0EC !important;
    }

    .btn-primary {
        background-color: #1F365D;
        border-color: #1F365D;
    }

        .btn-primary:hover {
            background-color: #162646;
            border-color: #162646;
        }

    .page-link {
        color: #1F365D;
    }

        .page-link.active,
        .page-item.active .page-link {
            background-color: #1F365D;
            border-color: #1F365D;
            color: #F2F0EC;
        }

    table.table thead th {
        color: #1F365D;
        background: #F2F0EC;
        margin-bottom: 0px !important;
    }

    h5, p, small {
        color: #1F365D;
    }

    .adv-btn {
        color: #1F365D;
        background: #FFF;
    }

        .adv-btn:hover {
            color: #FFF;
            background: #1F365D;
        }

        .adv-btn.active-adv-btn {
            background-color: #1F365D !important;
            color: #F2F0EC !important;
            border-color: #1F365D !important;
        }


    .table-responsive {
        overflow-x: auto; /* Enable horizontal scroll */
        position: relative;
    }

    table th, table td {
        white-space: nowrap;
    }

    th.sticky, td.sticky {
        position: sticky;
        right: 0;
        background: #F2F0EC; /* Same as container background */
        z-index: 2;
        text-align: center;
    }

    /* Make sure header sticky stays above other cells */
    th.sticky {
        z-index: 3;
    }


</style>
@using System.Collections.Generic
@using EvictionFiler.Client.Services

<div class="offcanvas offcanvas-end show border-start shadow bg-white"
     tabindex="-1" id="editClient"
     style="visibility:@(IsVisible ? "visible" : "hidden");"
     aria-labelledby="createUserLabel">

    <div class="offcanvas-header border-bottom">
        <h5 class="offcanvas-title fw-bold color-text" id="createUserLabel">Edit Client - @editClient.ClientCode </h5>
        <button type="button" class="btn-close" @onclick="HideAsync" aria-label="Close"></button>
    </div>

    <div class="offcanvas-body p-0">
        <div class="d-flex align-items-center position-relative">
            <!-- CLIENT FORM -->
            <div class="form-wrapper @(activeTab != string.Empty ? "hidden" : "") flex-grow-1 p-3 pe-5">

                <EditForm Model="@editClient">
                    <DataAnnotationsValidator />

                    <div class="row">
                      
                          @*   <div class="col-md-3 mb-3">
                                <label class="form-label color-text required-label">Client Code</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="bi bi-code-slash"></i>
                                    </span>
                                    <InputText class="form-control" maxlength="10" @bind-Value="editClient.ClientCode" placeholder="Enter up to 10 digits" readonly />
                                </div>
                            </div> *@
                          
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text required-label">First Name</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                <InputText class="form-control" @bind-Value="editClient.FirstName" placeholder="Enter First Name" />
                            </div>

                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">Last Name</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                <InputText class="form-control" @bind-Value="editClient.LastName" placeholder="Enter Last Name" />
                            </div>
                        </div>

                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text required-label">Email</label>
                            <div class="input-group">
                                <span class="input-group-text">@@</span>
                                <InputText class="form-control" @bind-Value="editClient.Email" placeholder="Enter Email" />
                            </div>
                        </div>
                    </div>

                    <div class="row">

                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">Phone</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                                <InputText class="form-control" @bind-Value="editClient.Phone" />
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">Cell Phone</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-phone"></i></span>
                                <InputText class="form-control" @bind-Value="editClient.CellPhone" />
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text ">Fax</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-printer"></i></span>
                                <InputText class="form-control" @bind-Value="editClient.Fax" placeholder="Fax Number" />
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label color-text ">Address Line 1</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                <InputText class="form-control" @bind-Value="editClient.Address_1" placeholder="Enter First Address" />
                            </div>

                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label color-text">Address Line 2</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                <InputText class="form-control" @bind-Value="editClient.Address_2" placeholder="Enter Second Address" />
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text ">State</label>
                            <InputSelect class="form-select" @bind-Value="editClient.State">
                                <option value="">-- Select State --</option>
                                <option>Georgia</option>
                                <option>California</option>
                                <option>Florida</option>
                            </InputSelect>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">City</label>
                            <!-- City -->
                            <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                <InputText class="form-control" @bind-Value="editClient.City" placeholder="Enter City" />
                            </div>


                        </div>

                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text ">Zip Code</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-geo"></i></span>
                                <InputNumber class="form-control" @bind-Value="editClient.ZipCode" />
                            </div>
                        </div>

                    </div>


                </EditForm>

            </div>

            <!-- Vertical Overlay Buttons -->
            <div class="vertical-buttons d-flex flex-column align-items-center position-absolute end-0 top-50 translate-middle-y @(IsVisible ? "" : "d-none")">
                <button class="vertical-tab-button @(activeTab == "landlord" ? "active-vertical" : "")" @onclick="@(() => SetActiveTab("landlord"))">LANDLORD</button>
            </div>
        </div>

        @if (activeTab == "landlord")
        {
            <div class="overlay-form overlay-landlord">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="color-text fw-bold mb-0">
                        @(
                           showLandlordForm && landlord != null && landlord.Id != Guid.Empty
                           ? $"LandLord - {landlord.FirstName} {landlord.LastName} / {landlord.LandLordCode}"
                           : "LANDLORD"
                           )
                </h5>


                    <button class="btn btn-outline-secondary fw-semibold me-2"
                            @onclick="@BackToLandlordList">
                        ←
                    </button>

                </div>

                @if (showLandlordForm)
                {
                    <EditForm Model="@landlord" OnValidSubmit="SaveLandlordAsync">

                        <DataAnnotationsValidator />

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="required-label">First Name</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.FirstName" placeholder="Enter First Name" />
                                </div>
                                <ValidationMessage For="@(() => landlord.FirstName)" />

                            </div>
                            <div class="col-md-4">
                                <label>Last Name</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.LastName" placeholder="Enter Last Name" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="required-label">Email</label>

                                <div class="input-group">
                                    <span class="input-group-text">@@</span>
                                    <InputText class="form-control" @bind-Value="landlord.Email" placeholder="Enter Email" />

                                </div>
                                <ValidationMessage For="@(() => landlord.Email)" />

                            </div>

                        </div>

                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label>Phone</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-phone"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.Phone" placeholder="Enter Phone " />
                                </div>

                            </div>
                           

                            <div class="col-md-3">
                                <label>Contact Person Name</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.ContactPersonName" placeholder="Enter  Name " />
                                </div>

                            </div>
                                <div class="col-md-3">
                                    <label>EIN/SSN</label>
                                    <div class="input-group mb-3">
                                        <span class="input-group-text">
                                            <i class="bi bi-person-vcard"></i> <!-- You can replace with bi-shield-lock too -->
                                        </span>
                                        <InputText class="form-control" @bind-Value="landlord.EINorSSN" placeholder="Enter EIN " />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <label class="required-label">Type of Owner</label>
                                    <select class="form-select" @bind="landlord.TypeOfOwner">
                                        <option selected disabled>Select Type</option>
                                        <option value="Corporation">Corporation</option>
                                        <option value="LLC">LLC</option>
                                        <option value="Individual">Individual</option>
                                        <option value="Other">Other</option>
                                    </select>
                                </div>


                        </div>
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label>List Other Properties</label>
                                <InputTextArea class="form-control"
                                               @bind-Value="landlord.OtherProperties"
                                               placeholder="Enter Other Properties"
                                               rows="4" />
                            </div>
                        </div>


                        <div class="row mb-3">
                            <div class="col">
                                <label >Address Line 1</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.Address1" placeholder="Enter First Address " />
                                </div>

                            </div>
                            <div class="col">
                                <label>Address Line 2</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.Address2" placeholder="Enter Second Address " />
                                </div>

                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label >State</label>
                                <InputSelect class="form-select" @bind-Value="landlord.State">
                                    <option value="">-- Select State --</option>
                                    <option>Georgia</option>
                                    <option>California</option>
                                    <option>Florida</option>
                                </InputSelect>
                            </div>

                            <div class="col">
                                <label>City</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.City" placeholder="Enter City " />
                                </div>


                            </div>

                            <div class="col">
                                <label>Zip Code</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-geo"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.Zipcode" placeholder="Enter Zip Code " />
                                </div>

                            </div>
                        </div>


                        <button type="submit" class="btn bg-navy text-white mt-3">Save </button>
                    </EditForm>
                    <div class="vertical-buttons d-flex flex-column align-items-center position-absolute end-0 top-50 translate-middle-y @(IsVisible ? "" : "d-none")">
                        <button class="vertical-tab-button @(activeTab == "building" ? "active-vertical" : "")" @onclick="@(() => SetActiveTab("building"))">BUILDING</button>


                    </div>
                }

                @if (!showLandlordForm)
                {
                <div style="max-height: 400px; overflow-y: auto; overflow-x: auto;">
                    <table class="table table-hover align-middle text-center" style="min-width: 1000px;">
                       <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>EIN</th>
                        <th>Contact Person Name</th>
                                <th>Type of Owner</th>
                                <th>Other Properties</th>
                        <th>Address</th>
                                <th>Status</th>
                        <th class="sticky">Actions</th>
                    </tr>
                </thead>
                <tbody>
                            @if (Landlords != null && Landlords.Any())
                    {
                        @foreach (var l in Landlords)
                        {
                                    <tr>
                                        <td>@(string.IsNullOrWhiteSpace(l.FirstName + l.LastName) ? "-" : l.FirstName + " " + l.LastName)</td>
                                        <td>@(string.IsNullOrWhiteSpace(l.Email) ? "-" : l.Email)</td>
                                        <td>@(string.IsNullOrWhiteSpace(l.Phone) ? "-" : l.Phone)</td>
                                        <td>@(string.IsNullOrWhiteSpace(l.EINorSSN) ? "-" : l.EINorSSN)</td>
                                        <td>@(string.IsNullOrWhiteSpace(l.ContactPersonName) ? "-" : l.ContactPersonName)</td>
                                        <td>@(string.IsNullOrWhiteSpace(l.TypeOfOwner) ? "-" : l.TypeOfOwner)</td>
                                        <td>@(string.IsNullOrWhiteSpace(l.OtherProperties) ? "-" : l.OtherProperties)</td>

                                     
                                        <td>
                                            @(
                                               string.IsNullOrWhiteSpace($"{l.Address1}{l.Address2}{l.City}{l.State}{l.Zipcode}")
                                                ? "-" : $"{l.Address1}, {l.Address2}, {l.City}, {l.State} - {l.Zipcode}")
                                    </td>

                                        <td>Active</td>

                                        <td class="sticky">
                                            <i class="fa-solid fa-pen-to-square text-navy me-3" style="cursor:pointer"
                                               @onclick="@(() => EditLandlord(l.Id))"
                                               title="Edit"></i>
                                        </td>
                                    </tr>

                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-muted text-center">No landlords available.</td>
                        </tr>
                    }
                </tbody>
           
                    </table>
                </div>
                }

            </div>
        }


        @if (activeTab == "building")
        {
            <div class="overlay-form overlay-building">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="color-text fw-bold mb-0">
                        @(
                                            showBuildingForm && building != null && building.Id != Guid.Empty
                                            ? $"Building - {building.BuildingCode}"
                                            : "Building"
                                            )
                </h5>

                <button class="btn btn-outline-secondary fw-semibold me-2"
                        @onclick="@BackToBuildingList">
                    ←
                </button>
                </div>

                @if (showBuildingForm)
                {

                    <EditForm Model="@building" OnValidSubmit="SaveBuildingAsync">
                        <DataAnnotationsValidator />

                        <div class="row mb-3">
                           @*  <div class="col-md-3">
                                <label class="required-label">Landlord</label>
                                <InputSelect class="form-select" @bind-Value="building.LandlordId">
                                    <option value="">-- Select Landlord --</option>
                                    @foreach (var landlord in savelandlordList)
                                    {
                                        <option value="@landlord.Id">@landlord.FirstName</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => building.LandlordId)" />
                            </div> *@
                            <div class="col-md-2">
                                <label class="required-label">Apt Code</label>
                                <InputText class="form-control" @bind-Value="building.ApartmentCode" placeholder="Enter Code" />
                                <ValidationMessage For="@(() => building.ApartmentCode)" />
                            </div>

                            <div class="col-md-3">
                                <label>MDR Number</label>
                                <InputText class="form-control" @bind-Value="building.MDR_Number" Placeholder="Enter Number" />
                            </div>
                            <div class="col-md-3">
                                <label for="BuildingUnit"> Building Units(No.)</label>
                                <InputNumber class="form-control" id="BuildingUnit" @bind-Value="building.BuildingUnits" placeholder="Enter Building Units" />
                            </div>
                            <div class="col-md-4">
                                <label>Petitioner Interest</label>
                                <InputText class="form-control" @bind-Value="building.PetitionerInterest" placeholder="Enter Intrest" />
                            </div>


                        </div>
                        <div class="row mb-3">

                            <div class="col-md-6">
                                <label for="BuildingUnit" class="required-label">Premise Type</label>
                                <InputSelect class="form-select" @bind-Value="building.PremiseType">
                                    <option value="">-- Select Type --</option>
                                    <option value="Residential">Residential</option>
                                    <option value="Commercial">Commercial</option>
                                    <option value="Industrial">Industrial</option>
                                    <option value="MixedUse">Mixed Use</option>
                                    <option value="Retail">Retail</option>
                                    <option value="Office">Office</option>
                                    <option value="Warehouse">Warehouse</option>
                                    <option value="VacantLand">Vacant Land</option>
                                </InputSelect>
                                <ValidationMessage For="@(() => building.PremiseType)" />
                            </div>
                            <div class="col-md-6">
                                <label class="required-label" for="RentStatus required-label">Rent Regulation Status</label>
                                <select class="form-select" id="RentStatus" @bind="building.TypeOfRentRegulation">
                                    <option disabled value="">Select Type</option>
                                    <option value="Rent_Stabilised">Rent Stabilised</option>
                                    <option value="Controlled">Controlled</option>
                                    <option value="Market">Market</option>
                                    <option value="Section_8">Section 8</option>
                                    <option value="FHEPS">FHEPS</option>
                                    <option value="Other">Other</option>
                                </select>
                                <ValidationMessage For="@(() => building.TypeOfRentRegulation)" />
                            </div>

                        
                        </div>


                        <!-- Address Line 1 & 2 -->
                        <div class="row mb-3">
                            <div class="col">
                                <label>Address Line 1</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="building.Address_1" placeholder="Enter First Address" />
                                </div>

                            </div>
                            <div class="col">
                                <label>Address Line 2</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="building.Address_2" placeholder="Enter Second Address" />
                                </div>

                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col">
                                <label>State</label>
                                <InputSelect class="form-select" @bind-Value="building.State">
                                    <option value="">-- Select State --</option>
                                    <option>Georgia</option>
                                    <option>California</option>
                                    <option>Florida</option>
                                </InputSelect>
                            </div>
                            <div class="col">
                                <label>City</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="building.City" placeholder="Enter City " />
                                </div>


                            </div>


                            <div class="col">
                                <label>Zip Code</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-geo"></i></span>
                                    <InputText class="form-control" @bind-Value="building.Zipcode" placeholder="Enter Zip Code " />
                                </div>

                            </div>
                        </div>

                        <div class="row mb-3 d-flex align-items-center">
                            <div class="col-lg-6">
                                <label>If purchased at foreclosure: Date of Referee Deed</label>

                            </div>
                            <div class="col-lg-3">
                                <InputDate class="form-control"
                                           @bind-Value="building.DateOfRefreeDeed"
                                           id="dateRefereeDeed"
                                           placeholder="Select date" />
                            </div>
                        </div>
                        <InputRadioGroup @bind-Value="building.LandlordType" class="mb-3 required-label">
                            <div class="row align-items-center">
                                <div class="col-auto">
                                    <label class="form-label mb-0" style="margin-top:5px">Are You the:</label>
                                </div>

                                <div class="col">
                                    <div class="d-flex flex-wrap align-items-center gap-4">
                                        @foreach (LandLordRole role in Enum.GetValues(typeof(LandLordRole)))
                                        {
                                            <div class="d-flex align-items-center gap-2">
                                                <div class="form-check d-flex align-items-center m-0">
                                                    <InputRadio Value="@role" class="form-check-input me-1" />
                                                    <label class="form-check-label ms-1" style="margin-top:5px">
                                                        @(role.ToString()
                                                                                                    .Replace("OwnerOfRecord", "Owner of Record")
                                                                                                    .Replace("RefereeOwner", "Referee Owner"))
                                        </label>
                                    </div>

                                    @if (role == LandLordRole.Other && building.LandlordType == LandLordRole.Other)
                                                {
                                                    <InputText class="form-control"
                                                               placeholder="Please specify"
                                                               style="max-width: 200px; height: 36px;"
                                                               @bind-Value="landlord.OtherLandlordTypeDescription" />
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </InputRadioGroup>


                        <!-- Submit Button -->
                        <button type="submit" class="btn bg-navy text-white mt-2">Save</button>
                    </EditForm>

                    <div class="vertical-buttons d-flex flex-column align-items-center position-absolute end-0 top-0 translate-middle-y @(IsVisible ? "" : "d-none")">
                        <button class="vertical-tab-button @(activeTab == "tanent" ? "active-vertical" : "")" @onclick="@(() => SetActiveTab("tanent"))" style="position:relative ; top:15rem">Tanent</button>

                    </div>

                }

                @if (!showBuildingForm)
                {
                    <div style="max-height: 400px; overflow-y: auto; overflow-x: auto;">
                        <table class="table table-bordered mt-4" style="min-width: 1000px;">
                            <thead>
                                <tr>
                                    <th>Code</th>
                                    <th>Premise</th>
                                    <th>Address</th>
                                    <th>MDR</th>
                                    <th>Interest</th>
                                    <th>Rent Regulation</th>
                                    <th>Building Units</th>
                                    <th>Date Of Refree</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Buildings != null && Buildings.Any())
                                {
                                    @foreach (var b in Buildings)
                                    {
                                        <tr>
                                            <td>@(string.IsNullOrWhiteSpace(b.ApartmentCode) ? "-" : b.ApartmentCode)</td>
                                            <td>@(string.IsNullOrWhiteSpace(b.PremiseType) ? "-" : b.PremiseType)</td>
                                            <td>
                                                @(
                                                                                string.IsNullOrWhiteSpace($"{b.Address_1}{b.Address_2}{b.City}{b.State}{b.Zipcode}")
                                                                                ? "-"
                                                                                : $"{b.Address_1}, {b.Address_2}, {b.City}, {b.State} - {b.Zipcode}"
                                                                                )
                                        </td>
                                        <td>@(string.IsNullOrWhiteSpace(b.MDR_Number) ? "-" : b.MDR_Number)</td>
                                        <td>@(string.IsNullOrWhiteSpace(b.PetitionerInterest) ? "-" : b.PetitionerInterest)</td>
                                        <td>@(string.IsNullOrWhiteSpace(b.TypeOfRentRegulation) ? "-" : b.TypeOfRentRegulation)</td>
                                        <td>@(b.BuildingUnits.HasValue? b.BuildingUnits.ToString() : "-")</td>
                                        <td>@(b.DateOfRefreeDeed == DateOnly.MinValue ? "-" : b.DateOfRefreeDeed.ToString("MM/dd/yyyy"))</td>

                                        <td>Active</td>
                                        <td class="sticky">
                                            <i class="fa-solid fa-pen-to-square text-navy me-3"
                                               style="cursor:pointer"
                                               @onclick="@(() => EditBuilding(b.Id))"
                                               title="Edit"></i>
                                        </td>
                                    </tr>
                                                }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="10" class="text-muted">No buildings added yet.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                }
            </div>
        }

        @if (activeTab == "tanent")
        {
            <div class="overlay-form overlay-landlord">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="color-text fw-bold mb-0">
                        @(
                                            showTanentForm && tenant != null && tenant.Id != Guid.Empty
                                            ? $"Tenant - {tenant.FirstName} {tenant.LastName} / {tenant.TenantCode}"
                                            : "Tenant"
                                            )
                </h5>
                    <button class="btn btn-outline-secondary fw-semibold me-2"
                            @onclick="@BackToTenantList">
                        ←
                    </button>
                </div>
                @if (showTanentForm)
                {
                    <EditForm Model="@tenant" OnValidSubmit="SavetenantAsync">
                        <DataAnnotationsValidator />
                        <!-- Row 1: Apartment Selection -->
                        <div class="row mb-3">
     
                            <div class="col-md-2">
                                <label class="required-label">Apartment</label>
                                <InputSelect class="form-select" @bind-Value="tenant.ApartmentId">
                                    <option value="">-- Select Apartment --</option>
                                    @foreach (var apartment in apartmentList)
                                    {
                                        <option value="@apartment.Id">@apartment.ApartmentCode</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => tenant.ApartmentId)" />
                            </div>
                            <div class="col-md-4">
                                <label class="required-label">First Name</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <InputText class="form-control" @bind-Value="tenant.FirstName" placeholder="Enter First Name" />
                                </div>
                                <ValidationMessage For="@(() => tenant.FirstName)" />
                            </div>
                            <div class="col-md-3">
                                <label>Last Name</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <InputText class="form-control" @bind-Value="tenant.LastName" placeholder="Enter Last Name" />
                                </div>

                            </div>
                            <div class="col-md-3">
                                <label>EIN/SSN</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text">
                                        <i class="bi bi-person-vcard"></i> <!-- You can replace with bi-shield-lock too -->
                                    </span>
                                    <InputText class="form-control" @bind-Value="tenant.SSN" placeholder="Enter EIN " />
                                </div>
                            </div>


                        </div>


                        <!-- Row 4: Email, Language -->
                        <div class="row mb-4">
                            <div class="col-md-4">
                                <label class="required-label">Email</label>
                                <div class="input-group">
                                    <span class="input-group-text">@@</span>
                                    <InputText class="form-control" @bind-Value="tenant.Email" placeholder="Enter Email" />

                                </div>

                            </div>

                            <div class="col-md-3">
                                <label>Phone</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-phone"></i></span>
                                    <InputText class="form-control" @bind-Value="tenant.Phone" placeholder="Enter Phone " />
                                </div>

                            </div>
                          
                            <div class="col-md-3">
                                <label>Registration No.</label>
                                <InputText class="form-control" @bind-Value="tenant.Registration_No" placeholder="Enter Registration No." />
                            </div>

                            <div class="col-md-2">
                                <label class="required-label">Language</label>
                                <InputSelect class="form-select" @bind-Value="tenant.Language">
                                    <option value="">-- Select --</option>
                                    <option value="English">English</option>
                                    <option value="Spanish">Spanish</option>
                                    <option value="Hindi">Hindi</option>
                                    <option value="Chinese">Chinese</option>
                                    <option value="French">French</option>
                                    <option value="Arabic">Arabic</option>
                                    <option value="Other">Other</option>
                                </InputSelect>
                            </div>

                        </div>

                        <div class="row mb-3">
                            <div class="col-md-2">
                                <label>Rent</label>
                                <InputNumber class="form-control" @bind-Value="tenant.Rent" />
                            </div>
                            <div class="col-md-2">
                                <label>Lease Status</label>
                                <InputText class="form-control" @bind-Value="tenant.LeaseStatus" placeholder="Enter Status" />
                            </div>

                            <div class="col-md-2">
                                <label>Apt</label>
                                <InputText class="form-control" @bind-Value="tenant.Apt" placeholder="Enter Apt" />
                            </div>

                            <div class="col-md-3">
                                <label>Borough</label>
                                <InputText class="form-control" @bind-Value="tenant.Borough" placeholder="Enter Borough" />
                            </div>
                            <div class="col-md-3">
                                <label>Name & Relations</label>
                                <InputTextArea class="form-control"
                                               @bind-Value="tenant.Name_Relation"
                                               placeholder="Enter Name & Relation"
                                               rows="3" />
                            </div>


                        </div>

                        <div class="row mb-3">
                            <div class="col">
                                <label>Address Line 1</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="tenant.Address_1" placeholder="Enter First Address " />
                                </div>

                            </div>
                            <div class="col">
                                <label>Address Line 2</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="tenant.Address_2" placeholder="Enter Second Address " />
                                </div>

                            </div>
                           
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label>State</label>
                                <InputSelect class="form-select" @bind-Value="tenant.State">
                                    <option value="">-- Select State --</option>
                                    <option>Georgia</option>
                                    <option>California</option>
                                    <option>Florida</option>
                                </InputSelect>
                            </div>

                            <div class="col">
                                <label>City</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="tenant.City" placeholder="Enter City " />
                                </div>


                            </div>

                            <div class="col">
                                <label>Zip Code</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-geo"></i></span>
                                    <InputText class="form-control" @bind-Value="tenant.Zipcode" placeholder="Enter Zip Code " />
                                </div>

                            </div>

                            <div class="col">
                                <label>Date of Birth</label>
                                <InputDate class="form-control" @bind-Value="tenant.DOB" />
                            </div>
                        </div>
                    
                        <div class="row mb-3">
                            <!-- Tenant of Record -->
                            <div class="col-md-6">
                                <InputRadioGroup @bind-Value="tenant.TenantRecord">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Tenant of Record:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>
                            </div>

                            <!-- Still in Possession -->
                            <div class="col-md-6">
                                <InputRadioGroup @bind-Value="tenant.HasPossession">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Still in Possession:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>
                            </div>
                        </div>

                        <div class="row align-items-center mb-3">

                            <div class="col-md-6">

                                <InputRadioGroup @bind-Value="tenant.HasRegulatedTenancy">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Is this a rent regulated tenancy:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>
                            </div>
                            <div class="col-md-6">
                                <InputRadioGroup @bind-Value="tenant.OtherOccupants">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Other Occupants:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>

                            </div>

                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <InputRadioGroup @bind-Value="tenant.HasPriorCase">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Any prior housing Court Case:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>

                            </div>
                        </div>

                        <!-- Submit Button -->
                        <div class="row">
                            <div class="col">
                                <button type="submit" class="btn bg-navy text-white mt-2">Save </button>
                            </div>
                        </div>
                    </EditForm>
                }

                @if (!showTanentForm){
                <div style="max-height: 400px; overflow-y: auto; overflow-x: auto;">
                    <table class="table table-bordered mt-4" style="min-width: 1200px;">
                        <thead class="table-light">
                            <tr>
                                    <th>Tenant Code</th>
                                <th>Name</th>
                                <th>DOB</th>
                                <th>SSN</th>
                                <th>Phone</th>
                                <th>Email</th>
                                <th>Language</th>
                                <th>Address</th>
                                <th>Apt</th>
                                <th>Borough</th>
                                <th>Rent</th>
                                <th>Lease Status</th>
                               
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Tenants.Any())
                            {
                                @foreach (var t in Tenants)
                                {
                                    <tr>
                                        <td>@t.TenantCode</td>
                                        <td>@t.FirstName</td>
                                        <td>@t.DOB.ToString("yyyy-MM-dd")</td>
                                        <td>@t.SSN</td>
                                        <td>@t.Phone</td>
                                        <td>@t.Email</td>
                                        <td>@t.Language</td>
                                            <td>
                                                @(
                                                                                string.IsNullOrWhiteSpace($"{t.Address_1}{t.Address_2}{t.City}{t.State}{t.Zipcode}")
                                                                                ? "-"
                                                                                : $"{t.Address_1}, {t.Address_2}, {t.City}, {t.State} - {t.Zipcode}"
                                                                                )
                                        </td>
                                        <td>@t.Apt</td>
                                        <td>@t.Borough</td>
                                        <td>@t.Rent</td>
                                        <td>@t.LeaseStatus</td>
                                        
                                        <td class="sticky">
                                            <i class="fa-solid fa-pen-to-square text-navy me-3" @onclick="@(() => EditTenant(t.Id))" style="cursor:pointer" title="Edit"></i>
                                            @* <i class="fa-solid fa-trash-can text-danger" @onclick=" ()=>DeleteClient(client.Id)" title="Delete"></i> *@
                                        </td>

                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="12" class="text-muted">No tenants added yet.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                }
            </div>
        }


    </div>


    <div class="sticky-footer bg-white border-top p-3 d-flex justify-content-between gap-2">
        @if (!IsClientFormValid())
        {
            <div class="text-danger mt-2">Please fill all required client fields to enable Submit.</div>
        }
        <div class="d-flex gap-2 ">
            <button class="btn btn-outline-secondary px-4 fw-semibold" @onclick="HideAsync">Cancel</button>
            <button class="btn bg-navy text-white px-4 fw-semibold" disabled="@(!IsClientFormValid())" @onclick="SubmitUpdateClientAsync">Submit</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public EditClientDto editClient { get; set; } = new();
    [Parameter] public EventCallback<EditClientDto> Submit { get; set; }
    [Parameter]
    public List<EditLandlordDto> Landlords { get; set; } = new();
    private EditLandlordDto landlord = new();
    [Parameter]
    public List<EditApartmentDto> Buildings { get; set; } = new();
    private EditApartmentDto building = new();
    [Parameter]
    public List<EditTenantDto> Tenants { get; set; } = new();
    private EditTenantDto tenant = new();


    private bool IsVisible { get; set; }
    private string activeTab = string.Empty;
    private bool showLandlordForm = false;
    private bool showBuildingForm = false;
    private bool showTanentForm = false;


    private List<EditLandlordDto> savelandlordList = new();

    private List<EditApartmentDto> apartmentList = new();
    private List<CreateTenantDto> saveTanentList = new();
    private List<EditLandlordDto> saveEditlandlordList = new();

    private Guid selectedLandlordId = Guid.Empty;

    private Guid selectedBuildingId = Guid.Empty;
    private Guid selectedTenantId = Guid.Empty;

    public void Show(EditClientDto model)
    {
        editClient = model;
        IsVisible = true;
        StateHasChanged();
    }

    private void BackToLandlordList()
    {
        showLandlordForm = false;
        landlord = new(); // optional: reset form
    }

    private void BackToBuildingList()
    {
        showBuildingForm = false;
        building = new(); // optional: reset form
    }
    private void BackToTenantList()
    {
        showTanentForm = false;
        tenant = new(); // optional: reset form
    }

    private Task SaveLandlordAsync()
    {
        if (landlord.Id == Guid.Empty || !Landlords.Any(x => x.Id == landlord.Id))
        {

            landlord.Id = Guid.NewGuid();
            Landlords.Add(landlord);
        }
        else
        {

            var existing = Landlords.FirstOrDefault(x => x.Id == landlord.Id);
            if (existing != null)
            {
                existing.FirstName = landlord.FirstName;
                existing.LastName = landlord.LastName;
                existing.Phone = landlord.Phone;
                existing.Email = landlord.Email;
                existing.EINorSSN = landlord.EINorSSN;
                existing.Address1 = landlord.Address1;
                existing.Address2 = landlord.Address2;

                existing.ContactPersonName = landlord.ContactPersonName;
                existing.TypeOfOwner = landlord.TypeOfOwner;
                existing.City = landlord.City;
                existing.State = landlord.State;
                existing.Zipcode = landlord.Zipcode;
                existing.OtherProperties = landlord.OtherProperties;
            }
        }

        // 🔄 Reset the form
        landlord = new();
        showLandlordForm = false;
        StateHasChanged(); 

        return Task.CompletedTask;
    }

    private Task SaveBuildingAsync()
    {
        if (building.Id == Guid.Empty || !Buildings.Any(x => x.Id == building.Id))
        {

            building.Id = Guid.NewGuid();
            Buildings.Add(building);
        }
        else
        {

            var existing = Buildings.FirstOrDefault(x => x.Id == building.Id);
            if (existing != null)
            {

                existing.ApartmentCode = building.ApartmentCode;
                existing.City = building.City;
                existing.State = building.State;
                existing.PremiseType = building.PremiseType;
                existing.Address_1 = building.Address_1;
                existing.Address_2 = building.Address_2;
                existing.Zipcode = building.Zipcode;
                existing.MDR_Number = building.MDR_Number;
                existing.PetitionerInterest = building.PetitionerInterest;
                existing.TypeOfRentRegulation = building.TypeOfRentRegulation;
                existing.BuildingUnits = building.BuildingUnits;
                existing.DateOfRefreeDeed = building.DateOfRefreeDeed;
                existing.LandlordType = building.LandlordType;
                existing.LandlordId = building.LandlordId;
            }
        }

    
        building = new();
        showBuildingForm = false;
        StateHasChanged();

        return Task.CompletedTask;
    }

    private Task SavetenantAsync()
    {
        if (tenant.Id == Guid.Empty || !Tenants.Any(x => x.Id == tenant.Id))
        {

            tenant.Id = Guid.NewGuid();
            Tenants.Add(tenant);
        }
        else
        {

            var existing = Tenants.FirstOrDefault(x => x.Id == tenant.Id);
            if (existing != null)
            {
                existing.FirstName = tenant.FirstName;
                existing.LastName = tenant.LastName;
                existing.DOB = tenant.DOB;
                existing.SSN = tenant.SSN;
                existing.Phone = tenant.Phone;
                existing.Email = tenant.Email;
                existing.Language = tenant.Language;
                existing.Address_1 = tenant.Address_1;
                existing.Address_2 = tenant.Address_2;
                existing.State = tenant.State;
                existing.City = tenant.City;
                existing.Zipcode = tenant.Zipcode;
                existing.Apt = tenant.Apt;
                existing.Borough = tenant.Borough;
                existing.Rent = tenant.Rent;
                existing.LeaseStatus = tenant.LeaseStatus;
                existing.HasPossession = tenant.HasPossession;
                existing.HasRegulatedTenancy = tenant.HasRegulatedTenancy;
                existing.Name_Relation = tenant.Name_Relation;
                existing.OtherOccupants = tenant.OtherOccupants;
                existing.Registration_No = tenant.Registration_No;
                existing.TenantRecord = tenant.TenantRecord;
                existing.HasPriorCase = tenant.HasPriorCase;
            }
        }

        // 🔄 Reset the form
        tenant = new();
        showTanentForm = false;
        StateHasChanged();

        return Task.CompletedTask;
    }

    private async Task EditTenant(Guid TenantId)
    {
        selectedTenantId = TenantId;
        showTanentForm = true;
        activeTab = "tanent";

        if (apartmentList == null || !apartmentList.Any())
        {
            // ✅ Load apartments of client landlords
            var landlords = await _landlordService.GetLandlordsByClientIdAsync(editClient.Id);
            apartmentList = new();

            foreach (var l in landlords)
            {
                var buildings = await _apartmentService.GetBuildingsByLandlordIdAsync(l.Id);
                apartmentList.AddRange(buildings);
            }
        }

        tenant = Tenants.FirstOrDefault(l => l.Id == TenantId) ?? new();

        IsVisible = true;
        StateHasChanged();
    }


    private async Task EditBuilding(Guid  BuildingId)
    {
        selectedBuildingId = BuildingId;
        showBuildingForm = true;
        activeTab = "building"; // 👈 set tab

        if (savelandlordList == null || !savelandlordList.Any())
        {
            savelandlordList = await _landlordService.GetLandlordsByClientIdAsync(editClient.Id);
        }
        // Get selected landlord from list
        building = Buildings.FirstOrDefault(l => l.Id == BuildingId) ?? new();

        // Show vertical buttons
        IsVisible = true;

        StateHasChanged();

 
        StateHasChanged();       // ✅ Refresh UI
    }
 
    private async Task EditLandlord(Guid landlordId)
    {
        selectedLandlordId = landlordId;
        showLandlordForm = true;
        activeTab = "landlord"; // 👈 set tab

        // Get selected landlord from list
        landlord = Landlords.FirstOrDefault(l => l.Id == landlordId) ?? new();

        // Show vertical buttons
        IsVisible = true;

        StateHasChanged();
    }

    private bool IsClientFormValid()
    {
        return
         !string.IsNullOrWhiteSpace(editClient.ClientCode)
         && !string.IsNullOrWhiteSpace(editClient.FirstName)
                   && !string.IsNullOrWhiteSpace(editClient.Fax)
        && !string.IsNullOrWhiteSpace(editClient.Email)
        && !string.IsNullOrWhiteSpace(editClient.Phone)
        && !string.IsNullOrWhiteSpace(editClient.ClientCode)
        && !string.IsNullOrWhiteSpace(editClient.Address_1)
        && !string.IsNullOrWhiteSpace(editClient.City)
        && !string.IsNullOrWhiteSpace(editClient.State)
          && editClient.ZipCode.HasValue;
    }
    private void ToggleBuildingForm() => showBuildingForm = !showBuildingForm;
    private void ToggleLandlordForm() => showLandlordForm = !showLandlordForm;
    private void ToggleTanentForm() => showTanentForm = !showTanentForm;
  
    public async Task HideAsync()
    {
        IsVisible = false;
        activeTab = string.Empty;
        StateHasChanged();
    }

    private async Task SubmitUpdateClientAsync()
    {
        if (editClient == null || editClient.Id == Guid.Empty)
            return;

        // Step 1: Update Client
        var isClientUpdated = await _clientService.UpdateClientAsync(editClient);
        if (!isClientUpdated)
            return;

        // Step 2: Update/Add Landlords
        if (Landlords.Count > 0)
        {
            foreach (var val in Landlords)
            {
                val.ClientId = editClient.Id;
                if (val.Id == Guid.Empty)
                    val.Id = Guid.NewGuid();
            }

            var isLandlordSaved = await _landlordService.UpdateLandLordsAsync(Landlords);
            if (!isLandlordSaved)
                return;
        }

        // // Step 3: Update/Add Apartments
        if (Buildings.Count > 0)
        {
            foreach (var val in Buildings)
            {
                if (val.Id == Guid.Empty)
                    val.Id = Guid.NewGuid();

                // you may link landlordid if needed
            }

            var isapartmentsaved = await _apartmentService.UpdateBuildingAsync(Buildings);
            if (!isapartmentsaved)
                return;
        }

        // Step 4: Update/Add Tenants
        if (Tenants.Count > 0)
        {
            foreach (var val in Tenants)
            {
                if (val.Id == Guid.Empty)
                    val.Id = Guid.NewGuid();

                // Link ApartmentId if needed
            }

            var isTenantSaved = await _tenantService.UpdateTenantAsync(Tenants);
            if (!isTenantSaved)
                return;
        }

        Navigation.NavigateTo("/clients?edit=true", true);
    }


    private void SetActiveTab(string tab) => activeTab = tab;


}


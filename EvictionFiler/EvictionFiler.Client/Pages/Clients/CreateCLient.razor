@using EvictionFiler.Application.DTOs.ApartmentDto
@using EvictionFiler.Application.DTOs.ClientDto
@using EvictionFiler.Application.DTOs.LandLordDto
@inject IJSRuntime JS

<style>
    :root {
        --bs-primary: #1F365D;
        --bs-warning: #D4A844;
        --bs-light: #F7F6F3;
    }

    body {
        background-color: var(--bs-light);
    }

    .offcanvas.show {
        transform: translateX(0%);
    }

    .offcanvas {
        transform: translateX(100%);
        width: 900px !important;
        transition: transform 0.5s ease-in-out;
    }

    .color-text {
        color: var(--bs-primary);
    }

    .form-control::placeholder {
        font-size: 0.9rem;
    }

    .input-group-text {
        background-color: var(--bs-light);
        color: var(--bs-primary);
        font-weight: 500;
    }

    .form-wrapper {
        transition: transform 0.5s ease, opacity 0.5s ease;
        will-change: transform, opacity;
    }

        .form-wrapper.hidden {
            transform: translateX(-100%);
            opacity: 0;
            pointer-events: none;
        }

    .overlay-form {
        animation: slideIn 0.5s ease forwards;
        background-color: white;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }

    @@keyframes slideIn {
        from

    {
        opacity: 0;
        transform: translateX(100%);
    }

    to {
        opacity: 1;
        transform: translateX(0%);
    }

    }

    .form-wrapper.hidden {
        display: none !important;
    }
    .vertical-buttons button {
       /*  min-width: 100px; */
        text-align: center;
    }

    .vertical-tab-button {
        writing-mode: vertical-rl; /* vertical top-to-bottom */
        text-orientation: upright;
        background-color: #f0f2f5;
        color: #1F365D;
        font-weight: 700;
        font-size: 14px;
        border: none;
        padding: 12px 8px;
        border-radius: 10px;
        margin-bottom: 12px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    }

        .vertical-tab-button:hover {
            background-color: #1F365D;
            color: white;
            transform: translateY(-2px);
        }

    .active-vertical {
        background: linear-gradient(135deg, #1F365D, #2F4F7F);
        color: white;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }


  /*   .tab-button {
        background: transparent;
        color: #1F365D;
        border: 2px solid transparent;
        padding: 0.6rem 1rem;
        min-width: 120px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border-radius: 8px;
        transition: all 0.3s ease-in-out;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    }

        .tab-button:hover {
            background: #1F365D;
            color: white;
            border-color: #1F365D;
            transform: translateY(-2px);
        }

    .active-tab {
        background: linear-gradient(135deg, #1F365D, #2F4F7F);
        color: white !important;
        border-color: #1F365D;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    } */

</style>

<div class="offcanvas offcanvas-end show border-start shadow bg-white"
     tabindex="-1" id="createClient"
     style="visibility:@(IsVisible ? "visible" : "hidden");"
     aria-labelledby="createUserLabel">

    <div class="offcanvas-header border-bottom">
        <h5 class="offcanvas-title fw-bold color-text" id="createUserLabel">Add New Client</h5>
        <button type="button" class="btn-close" @onclick="Hide" aria-label="Close"></button>
    </div>

    <div class="offcanvas-body p-0">
        <div class="d-flex align-items-center position-relative">
            <div class="form-wrapper @(activeTab != string.Empty ? "hidden" : "") flex-grow-1 p-3 pe-5">
                <!-- Existing EditForm here -->
                <EditForm Model="@createClient" OnValidSubmit="SubmitUser">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <!-- Client Code (max 10 digits) -->
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">Client Code</label>
                            <InputText class="form-control"
                                       maxlength="10"
                                       @bind-Value="createClient.ClientCode"
                                       placeholder="Enter up to 10 digits" />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">First Name</label>
                            <InputText class="form-control" @bind-Value="createClient.Name" placeholder="Enter FirstName" />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">Last Name</label>
                            <InputText class="form-control" @bind-Value="createClient.Name" placeholder="Enter LastName" />
                        </div>
                    </div>


                    <!-- Email -->
                    <div class="row">
                        <div class="col-md-8 mb-3">
                            <label class="form-label color-text">Email</label>
                            <div class="input-group">
                                <span class="input-group-text">@@</span>
                                <InputText class="form-control" @bind-Value="createClient.Email" placeholder="Enter Email" />
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">Fax</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-printer"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.Fax" placeholder="Fax Number" />
                            </div>
                        </div>
                    </div>
                    <!-- Address Line 1 & 2 -->
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label color-text">Address Line 1 </label>
                            <InputText class="form-control" @bind-Value="createClient.Address_1" placeholder="Address Line 1" />

                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label color-text">Address Line 2</label>
                            <InputText class="form-control" @bind-Value="createClient.Address_2" placeholder="Address Line 2" />
                        </div>
                    </div>
                    <!-- City & State -->
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">City</label>
                            <InputText class="form-control" @bind-Value="createClient.City" placeholder="City" />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">State</label>
                            <div class="input-group">
                                <InputSelect class="form-select" @bind-Value="createClient.State">
                                    <option value="">-- Select State --</option>
                                    <option>Georgia</option>
                                    <option>California</option>
                                    <option>Florida</option>
                                </InputSelect>
                            </div>
                        </div>


                        <!-- Zipcode & Fax (with Input Group) -->

                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">Zip Code</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-geo"></i></span>
                                <InputNumber class="form-control" @bind-Value="createClient.ZipCode" placeholder="Zip" />
                            </div>
                        </div>

                    </div>

                    <!-- Phone & Cell Phone (with Input Group) -->
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label color-text">Phone</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.Phone" placeholder="Phone" />
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label color-text">Cell Phone</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-phone"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.CellPhone" placeholder="Mobile" />
                            </div>
                        </div>
                    </div>

                    <!-- Submit Button -->
                  @*   <div class="d-flex justify-content-end mt-4 gap-2">
                        <button type="button" class="btn btn-outline-secondary px-4 fw-semibold" @onclick="Hide">
                            Cancel
                        </button>
                        <button type="submit" class="btn px-4 fw-semibold"
                                style="background-color: var(--bs-primary); color: white; border: none;">
                            Submit
                        </button>
                    </div> *@

                </EditForm>
            </div>

            <div class="vertical-buttons d-flex flex-column align-items-center position-absolute end-0 top-50 translate-middle-y">
                <button class="vertical-tab-button @(activeTab == "landlord" ? "active-vertical" : "")"
                        @onclick="@(() => SetActiveTab("landlord"))">
                    LANDLORD
                </button>
                <button class="vertical-tab-button @(activeTab == "building" ? "active-vertical" : "")"
                        @onclick="@(() => SetActiveTab("building"))">
                    BUILDING
                </button>
            </div>


            </div>
        <!-- 🚧 Overlay Forms -->
        @if (activeTab == "landlord" || activeTab == "building")
        {
            <div class="overlay-form @(activeTab == "landlord" ? "overlay-landlord" : "overlay-building")">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="color-text fw-bold mb-0">
                        @(activeTab == "landlord" ? "LANDLORD INFORMATION" : "BUILDING INFORMATION")
                    </h5>
                    <div class="d-flex justify-content-center align-items-center ">
                        <button type="button" class="btn btn-outline-secondary fw-semibold me-2"
                                @onclick="() => SetActiveTab(string.Empty)">
                            ← Back
                        </button>
                        <!-- Landlord -->
                        <button class="btn bg-navy text-white" @onclick="ToggleActiveForm">
                            @GetToggleButtonText()
                        </button>



                   </div>
                </div>

                @if (activeTab == "landlord")
                {
                    <div class="mt-3">
                        @* 🔹 Form only when flag true *@
                        @if (showLandlordForm)
                        {
                            <EditForm Model="@landlord" OnValidSubmit="HandleLandlordSubmit">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <!-- Name (with icon) -->
                                <div class="mb-3">
                                    <label class="form-label color-text">Name</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-user"></i></span>
                                        <InputText class="form-control" @bind-Value="landlord.Name" placeholder="Enter Name" />
                                    </div>
                                </div>

                                <!-- EIN/SSN (with icon) -->
                                <div class="mb-3">
                                    <label class="form-label color-text">EIN / SSN</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-id-card"></i></span>
                                        <InputText class="form-control" @bind-Value="landlord.EINorSSN" placeholder="Enter EIN or SSN" />
                                    </div>
                                </div>

                                <!-- Phone (with icon), Email (normal) -->
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label color-text">Phone</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                            <InputText class="form-control" @bind-Value="landlord.Phone" placeholder="Phone" />
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label color-text">Email</label>
                                        <InputText class="form-control" @bind-Value="landlord.Email" placeholder="Email" />
                                    </div>
                                </div>

                                <!-- Mailing Address (normal) -->
                                <div class="mb-3">
                                    <label class="form-label color-text"> Address</label>
                                    <InputText class="form-control" @bind-Value="landlord.MaillingAddress" placeholder="Mailing Address" />
                                </div>

                                <!-- Attorney (normal), Firm (normal) -->
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label color-text">Attorney</label>
                                        <InputText class="form-control" @bind-Value="landlord.Attorney" placeholder="Attorney" />
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label color-text">Firm</label>
                                        <InputText class="form-control" @bind-Value="landlord.Firm" placeholder="Firm" />
                                    </div>
                                </div>

                                <!-- Buttons -->
                                <div class="d-flex justify-content-end mt-4 gap-2">
                                   
                                    <button type="submit" class="btn px-4 fw-semibold" @onclick="SaveChanges"
                                            style="background-color: var(--bs-primary); color: white; border: none;">
                                        Save Landlord Info
                                    </button>
                                </div>
                            </EditForm>
                        }

                        @* 🔹 Grid Always Visible *@
                        <div class="table-responsive mt-4" style="overflow-x: auto; white-space: nowrap;">
                            <table class="table table-bordered" style="min-width: 1000px;">
                                <thead class="table-light">
                                    <tr>
                                        <th>Name</th>
                                        <th>EIN / SSN</th>
                                        <th>Phone</th>
                                        <th>Email</th>
                                        <th>Address</th>
                                        <th>Attorney</th>
                                        <th>Firm</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (landlordList.Any())
                                    {
                                        @foreach (var item in landlordList)
                                        {
                                            <tr>
                                                <td>@item.Name</td>
                                                <td>@item.EINorSSN</td>
                                                <td>@item.Phone</td>
                                                <td>@item.Email</td>
                                                <td>@item.MaillingAddress</td>
                                                <td>@item.Attorney</td>
                                                <td>@item.Firm</td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="7" class="text-muted">No landlords added yet.</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                    </div>

                }
                else if (activeTab == "building")
                {
                    if (showBuildingForm)
                    {
                        <EditForm Model="@building" OnValidSubmit="HandleBuildingSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <!-- Apartment Code (with icon) -->
                            <div class="mb-3">
                                <label class="form-label color-text">Apartment Code</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-building"></i></span>
                                    <InputText class="form-control" @bind-Value="building.ApartmentCode" placeholder="Enter Apartment Code" />
                                </div>
                            </div>

                            <!-- Premise Type (normal) -->
                            <div class="mb-3">
                                <label class="form-label color-text">Premise Type</label>
                                <InputText class="form-control" @bind-Value="building.PremiseType" placeholder="Enter Premise Type" />
                            </div>

                            <!-- Address Line 1 (with icon) -->
                            <div class="mb-3">
                                <label class="form-label color-text">Address Line 1</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="building.Address_1" placeholder="Address Line 1" />
                                </div>
                            </div>

                            <!-- Address Line 2 (normal) -->
                            <div class="mb-3">
                                <label class="form-label color-text">Address Line 2</label>
                                <InputText class="form-control" @bind-Value="building.Address_2" placeholder="Address Line 2" />
                            </div>

                            <!-- City & State -->
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label color-text">City</label>
                                    <InputText class="form-control" @bind-Value="building.City" placeholder="City" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label color-text">State</label>
                                    <InputText class="form-control" @bind-Value="building.State" placeholder="State" />
                                </div>
                            </div>

                            <!-- Country (with icon) & Zipcode -->
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label color-text">Country</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-globe"></i></span>
                                        <InputText class="form-control" @bind-Value="building.Country" placeholder="Country" />
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label color-text">Zipcode</label>
                                    <InputText class="form-control" @bind-Value="building.Zipcode" placeholder="Zipcode" />
                                </div>
                            </div>

                            <!-- MDR Number (normal) -->
                            <div class="mb-3">
                                <label class="form-label color-text">MDR Number</label>
                                <InputText class="form-control" @bind-Value="building.MDR_Number" placeholder="MDR Number" />
                            </div>

                            <!-- Petitioner Interest (normal) -->
                            <div class="mb-3">
                                <label class="form-label color-text">Petitioner Interest</label>
                                <InputText class="form-control" @bind-Value="building.PetitionerInterest" placeholder="Petitioner Interest" />
                            </div>

                            <!-- Buttons -->
                            <div class="d-flex justify-content-end mt-4 gap-2">
                                <button type="button" class="btn btn-outline-secondary fw-semibold px-4"
                                        @onclick="() => SetActiveTab(string.Empty)">
                                    ← Back
                                </button>
                                <button type="submit" class="btn px-4 fw-semibold" @onclick="SaveChanges"
                                        style="background-color: var(--bs-primary); color: white; border: none;">
                                    Save Building Info
                                </button>
                            </div>
                        </EditForm>
                    }
                    @* 🔹 Grid Always Visible *@
                    <div class="table-responsive mt-4" style="overflow-x: auto; white-space: nowrap;">
                        <table class="table table-bordered" style="min-width: 1000px;">
                            <thead class="table-light">
                                <tr>
                                    <th>Appartment Code</th>
                                    <th>Premise Type</th>
                                    <th>Address Line 1</th>
                                    <th>Address Line 2</th>
                                    <th> City</th>
                                    <th>State</th>
                                    <th>Country</th>
                                    <th> Zip Code</th>
                                    <th>MDR Number</th>
                                    <th>Petitioner Interest</th>
                                </tr>
                            </thead>
                            <tbody>
                               @*  @if (buildingList.Any())
                                {
                                    @foreach (var item in buildingList)
                                    {
                                        <tr>
                                            <td>@item.Appartmentcode</td>
                                            <td>@item.EINorSSN</td>
                                            <td>@item.Phone</td>
                                            <td>@item.Email</td>
                                            <td>@item.MaillingAddress</td>
                                            <td>@item.Attorney</td>
                                            <td>@item.Firm</td> 
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7" class="text-muted">No landlords added yet.</td>
                                    </tr>
                                } *@
                            </tbody>
                        </table>
                    </div>
                   


                }
            </div>
        }
       
      
</div>
    <!-- Sticky Footer Buttons -->
    <div class="sticky-footer bg-white border-top p-3 d-flex justify-content-end gap-2">
        <button type="button" class="btn btn-outline-secondary px-4 fw-semibold" @onclick="Hide">
            Cancel
        </button>
        <button type="button" class="btn px-4 fw-semibold"
                @onclick="SubmitUser"
                style="background-color: var(--bs-primary); color: white; border: none;">
            Submit
        </button>
    </div>
</div>


@code {
    [Parameter] public CreateClientDto createClient { get; set; } = new CreateClientDto();
    [Parameter] public EventCallback<CreateClientDto> Submit { get; set; }

    private bool IsVisible { get; set; } = false;

    // Added flags
    private bool showLandlordForm = false;
    private bool showBuildingForm = false;

    private CreateLandLordDto landlord { get; set; } = new CreateLandLordDto();
    // private CreateBuildingDto building { get; set; } = new CreateBuildingDto();
    private AddApartment building { get; set; } = new AddApartment();
    private string activeTab = string.Empty;
    private List<CreateLandLordDto> landlordList = new();  // ✅ Add this list
    // private List<CreateLandLordDto> buildingList = new();
    public void Show(CreateClientDto model)
    {
        createClient = model;
        IsVisible = true;
        StateHasChanged();
    }

    private async void SaveChanges()
    {
        if (showLandlordForm)
        {
            landlordList.Add(landlord);
            landlord = new CreateLandLordDto();

            await SaveToLocalStorage();
        } else
        {
            landlordList.Add(landlord);
            landlord = new CreateLandLordDto();
            await SaveToLocalStorage();
        }
    }

    private async Task SaveToLocalStorage()
    {
            await JS.InvokeVoidAsync("saveLandlordList", "landlordList", landlordList);
      
    }

    private async Task LoadFromLocalStorage()
    {
            landlordList = await JS.InvokeAsync<List<CreateLandLordDto>>("loadLandlordList", "landlordList");
    

    }


    protected override async Task OnInitializedAsync()
    {
        await LoadFromLocalStorage();
    }

    public void Hide()
    {
        IsVisible = false;
        activeTab = string.Empty;
        StateHasChanged();
    }

    private void ToggleActiveForm()
    {
        if (activeTab == "landlord")
        {
            showLandlordForm = !showLandlordForm;
            showBuildingForm = false;
        }
        else if (activeTab == "building")
        {
            showBuildingForm = !showBuildingForm;
            showLandlordForm = false;
        }
    }

    private string GetToggleButtonText()
    {
        if (activeTab == "landlord")
        {
            return "Add Landlord";
        }
        else if (activeTab == "building")
        {
            return "Add Building";
        }

        return "Add Info";
    }




    private void SetActiveTab(string tab)
    {
        activeTab = tab;

        // Default view: grid only
        showLandlordForm = false;
        showBuildingForm = false;
    }

    private void ShowLandlordForm()
    {
        showLandlordForm = true;
    }

    private void HideLandlordForm()
    {
        showLandlordForm = false;
    }

    private void ShowBuildingForm()
    {
        showBuildingForm = true;
    }

    private void HideBuildingForm()
    {
        showBuildingForm = false;
    }

    private async Task HandleLandlordSubmit()
    {
        await JS.InvokeVoidAsync("console.log", "Landlord Info Submitted", landlord);
        // showLandlordForm = false; 
        // You can also add landlord to list here
    }

    private async Task HandleBuildingSubmit()
    {
        await JS.InvokeVoidAsync("console.log", "Building Info Submitted", building);
        showBuildingForm = false;
    }

    public async Task SubmitUser()
    {
        await Submit.InvokeAsync(createClient);
        Hide();
    }
}

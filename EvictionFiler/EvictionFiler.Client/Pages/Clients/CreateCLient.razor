@using EvictionFiler.Application.DTOs.ClientDto
@inject IJSRuntime JS

<style>
    :root {
        --bs-primary: #1F365D;
        --bs-warning: #D4A844;
        --bs-light: #F7F6F3;
    }

    body {
        background-color: var(--bs-light);
    }
    .offcanvas.show {
        transform: translateX(0%);
    }

    .offcanvas {
        transform: translateX(100%);
        width: 600px !important;
        transition: transform 0.5s ease-in-out;
    }

    .color-text {
        color: var(--bs-primary);
    }
</style>

<div class="offcanvas offcanvas-end show border-start shadow bg-white" tabindex="-1" id="createClient"
     style="visibility:@(IsVisible ? "visible" : "hidden");"
     aria-labelledby="createUserLabel">

    <!-- Header -->
    <div class="offcanvas-header border-bottom">
        <h5 class="offcanvas-title fw-bold color-text" id="createUserLabel">Add New Client</h5>
        <button type="button" class="btn-close" @onclick="Hide" aria-label="Close"></button>
    </div>

    <!-- Body -->
    <div class="offcanvas-body">
        <EditForm Model="@createClient" OnValidSubmit="SubmitUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            @* Client Code *@
            <div class="mb-3">
                <label class="form-label color-text">Client Code</label>
                <InputText class="form-control" @bind-Value="createClient.ClientCode" placeholder="Enter Client Code" />
            </div>

            @* Name *@
            <div class="mb-3">
                <label class="form-label color-text">Name</label>
                <InputText class="form-control" @bind-Value="createClient.Name" placeholder="Enter Client Name" />
            </div>

            @* Email *@
            <div class="mb-3">
                <label class="form-label color-text">Email</label>
                <InputText class="form-control" @bind-Value="createClient.Email" placeholder="Enter Email" />
            </div>

            @* Address 1 & 2 *@
            <div class="mb-3">
                <label class="form-label color-text">Address Line 1</label>
                <InputText class="form-control" @bind-Value="createClient.Address_1" placeholder="Address Line 1" />
            </div>
            <div class="mb-3">
                <label class="form-label color-text">Address Line 2</label>
                <InputText class="form-control" @bind-Value="createClient.Address_2" placeholder="Address Line 2" />
            </div>

            @* City + State *@
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label color-text">City</label>
                    <InputText class="form-control" @bind-Value="createClient.City" placeholder="City" />
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label color-text">State</label>
                    <InputNumber class="form-control" @bind-Value="createClient.State" placeholder="State ID" />
                </div>
            </div>

            @* Zip + Fax *@
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label color-text">Zipcode</label>
                    <InputNumber class="form-control" @bind-Value="createClient.ZipCode" placeholder="Zipcode" />
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label color-text">Fax</label>
                    <InputText class="form-control" @bind-Value="createClient.Fax" placeholder="Fax" />
                </div>
            </div>

            @* Phone + Cell *@
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label color-text">Phone</label>
                    <InputText class="form-control" @bind-Value="createClient.Phone" placeholder="Phone" />
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label color-text">Cell Phone</label>
                    <InputText class="form-control" @bind-Value="createClient.CellPhone" placeholder="Cell Phone" />
                </div>
            </div>

            @* Optional Checkbox Block (Uncomment if needed) *@
            @* <div class="form-check mb-3">
                <InputCheckbox class="form-check-input" @bind-Value="createClient.GenarateOwnRd" id="generateOwnRdCheckbox" />
                <label class="form-check-label color-text" for="generateOwnRdCheckbox">
                    Generate Own Rd
                </label>
            </div> *@

            <!-- Submit -->
            <div class="d-flex justify-content-end mt-4">
                <button type="submit" class="btn px-4 fw-semibold"
                        style="background-color: #1F365D;; color: white; border: none;">
                    Submit
                </button>
            </div>

        </EditForm>
    </div>
</div>

@code {
    [Parameter] public CreateClientDto createClient { get; set; } = new CreateClientDto();
    [Parameter] public EventCallback<CreateClientDto> Submit { get; set; }

    private bool IsVisible { get; set; } = false;

    public void Show(CreateClientDto model)
    {
        createClient = model;
        IsVisible = true;
        StateHasChanged();
    }

    public void Hide()
    {
        IsVisible = false;
        StateHasChanged();
    }

    public async Task SubmitUser()
    {
        await Submit.InvokeAsync(createClient);
        Hide();
    }
}

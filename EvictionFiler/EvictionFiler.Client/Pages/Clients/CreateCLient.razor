@using EvictionFiler.Application.DTOs.ApartmentDto
@using EvictionFiler.Application.DTOs.ClientDto
@using EvictionFiler.Application.DTOs.LandLordDto
@using EvictionFiler.Application.DTOs.OccupantDto
@using EvictionFiler.Application.DTOs.TenantDto
@using EvictionFiler.Application.Interfaces.IRepository
@using EvictionFiler.Application.Interfaces.IServices
@using EvictionFiler.Application.Services
@using EvictionFiler.Domain.Entities.Master
@using Microsoft.AspNetCore.Components.Forms
@using EvictionFiler.Client.SpinnerService
@inject SpinnerService spinnerservice

@inject IClientService _clientService
@inject ILandlordSevice _landlordService
@inject IBuildingService _apartmentService
@inject ITenantService _tenantService
@inject IStateRepository StateRepository
@inject IPremiseTypeRepository PremiseTypeRepository
@inject ITypeOwnerRepository TypeOwnerRepository
@inject IRegulationStatusRepository RegulationStatusRepository
@inject ILanguageRepository LanguageRepository
@inject IUnitIllegalRepository UnitIllegalRepository
@inject ITenancyTypeRepository TenancyTypeRepository
@inject ILandlordTypeRepository LandlordTypeRepository


@rendermode InteractiveAuto
@inject NavigationManager Navigation
@inject IJSRuntime JS

<style>
    :root {
    --bs-primary: #1F365D;
    --bs-warning: #D4A844;
    --bs-light: #F7F6F3;
    }

    body {
    background-color: var(--bs-light);
    }

    .offcanvas.show {
    transform: translateX(0%);
    }

    .offcanvas {
    transform: translateX(100%);
    width: 900px !important;
    transition: transform 0.5s ease-in-out;
    }

    .color-text {
    color: var(--bs-primary);
    }

    .form-control::placeholder {
    font-size: 0.9rem;
    }

    .input-group-text {
    background-color: var(--bs-light);
    color: var(--bs-primary);
    font-weight: 500;
    }

    .form-wrapper {
    transition: transform 0.5s ease, opacity 0.5s ease;
    will-change: transform, opacity;
    }

    /* .form-wrapper.hidden {
    transform: translateX(-100%);
    opacity: 0;
    pointer-events: none;
    } */

    .overlay-form {
    animation: slideIn 0.5s ease forwards;
    background-color: white;
    padding: 1rem;
    border-radius: 0.5rem;
    box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }

    @@keyframes slideIn {
    from {
    opacity: 0;
    transform: translateX(100%);
    }

    to {
    opacity: 1;
    transform: translateX(0%);
    }
    }

    .form-wrapper.hidden {
    display: none !important;
    }

    .vertical-buttons button {
    /*  min-width: 100px; */
    text-align: center;
    }

    .vertical-tab-button {
    writing-mode: vertical-rl; /* vertical top-to-bottom */
    text-orientation: upright;
    background-color: #f0f2f5;
    color: #1F365D;
    font-weight: 700;
    font-size: 14px;
    border: none;
    padding: 12px 8px;
    border-radius: 10px;
    margin-bottom: 12px;
    transition: all 0.3s ease;
    box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    }

    .vertical-tab-button:hover {
    background-color: #1F365D;
    color: white;
    transform: translateY(-2px);
    }

    .active-vertical {
    background: linear-gradient(135deg, #1F365D, #2F4F7F);
    color: white;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }


    /*   .tab-button {
    background: transparent;
    color: #1F365D;
    border: 2px solid transparent;
    padding: 0.6rem 1rem;
    min-width: 120px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    border-radius: 8px;
    transition: all 0.3s ease-in-out;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    }

    .tab-button:hover {
    background: #1F365D;
    color: white;
    border-color: #1F365D;
    transform: translateY(-2px);
    }

    .active-tab {
    background: linear-gradient(135deg, #1F365D, #2F4F7F);
    color: white !important;
    border-color: #1F365D;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    } */
    .required-label::after {
    content: " *";
    color: red;
    }

</style>
@using System.Collections.Generic


<div class="offcanvas offcanvas-end show border-start shadow bg-white"
tabindex="-1" id="createClient"
aria-labelledby="createUserLabel">

    <div class="offcanvas-header border-bottom">

        <h5 class="offcanvas-title fw-bold color-text" id="createUserLabel">Add Client</h5>

        <button type="button" class="btn-close" @onclick="HideAsync" aria-label="Close"></button>
    </div>

    <div class="offcanvas-body p-0">
        <div class="d-flex align-items-center position-relative">
            <!-- CLIENT FORM -->
            <div class="form-wrapper @(activeTab != string.Empty ? "hidden" : "") flex-grow-1 p-3 pe-5">

                <EditForm Model="@createClient" OnValidSubmit="SubmitClientAsync">
                    <DataAnnotationsValidator />

                    <div class="row">

                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text required-label">First Name</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.FirstName" placeholder="Enter First Name" />
                            </div>

                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label color-text">Last Name</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.LastName" placeholder="Enter Last Name" />
                            </div>
                        </div>

                        <div class="col-md-5 mb-3">
                            <label class="form-label color-text required-label">Email</label>
                            <div class="input-group">
                                <span class="input-group-text">@@</span>
                                <InputText class="form-control" @bind-Value="createClient.Email" placeholder="Enter Email" />
                            </div>
                        </div>
                    </div>

                    <div class="row">

                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">Phone</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.Phone" />
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">Cell Phone</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-phone"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.CellPhone" />
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text ">Fax</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-printer"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.Fax" placeholder="Fax Number" />
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label color-text ">Address Line 1</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.Address1" placeholder="Enter First Address" />
                            </div>

                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label color-text">Address Line 2</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.Address2" placeholder="Enter Second Address" />
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text ">State</label>
                            <InputSelect class="form-select" @bind-Value="createClient.StateId">
                                <option value="">-- Select State --</option>
                                @foreach (var state in StatesList)
                                {
                                    <option value="@state.Id">@state.Name</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text">City</label>
                            <!-- City -->
                            <div class="input-group mb-3">
                                <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.City" placeholder="Enter City" />
                            </div>


                        </div>

                        <div class="col-md-4 mb-3">
                            <label class="form-label color-text ">Zip Code</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-geo"></i></span>
                                <InputText class="form-control" @bind-Value="createClient.ZipCode" />
                            </div>
                        </div>

                    </div>


                </EditForm>

            </div>

            <!-- Vertical Overlay Buttons -->
            <div class="vertical-buttons d-flex flex-column align-items-center position-absolute end-0 top-50 translate-middle-y ">
                <button class="vertical-tab-button @(activeTab == "landlord" ? "active-vertical" : "")" @onclick="@(() => SetActiveTab("landlord"))">LANDLORD</button>

            </div>
        </div>

        <!-- LANDLORD Overlay -->
        @if (activeTab == "landlord")
        {
            <div class="overlay-form overlay-landlord">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="color-text fw-bold mb-0">LANDLORD INFORMATION</h5>
                    <div>
                        <button class="btn btn-outline-secondary fw-semibold me-2"
                        @onclick="@BackToPreviousTab">
                            ←
                        </button>
                        @*  <button class="btn btn-outline-secondary fw-semibold me-2" @onclick="@(() => SetActiveTab(string.Empty))">←</button> *@
                        <button class="btn bg-navy text-white" @onclick="ToggleLandlordForm">@GetToggleButtonText()</button>
                        @if (showLandlordForm)
                        {
                            <button type="submit" form="landlordForm" class="btn bg-navy text-white me-2" style="margin-left:10px">Save</button>
                        }
                    </div>
                </div>

                @if (showLandlordForm)
                {
                    <EditForm Id="landlordForm" Model="@landlord" OnValidSubmit="SaveLandlordAsync">

                        <DataAnnotationsValidator />

                        <div class="row mb-3">

                            <div class="col-md-3">
                                <label class="required-label">First Name</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.FirstName" placeholder="Enter First Name" />
                                </div>
                                <ValidationMessage For="@(() => landlord.FirstName)" />

                            </div>
                            <div class="col-md-3">
                                <label>Last Name</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.LastName" placeholder="Enter Last Name" />
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label>EIN/SSN</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text">
                                        <i class="bi bi-person-vcard"></i> <!-- You can replace with bi-shield-lock too -->
                                    </span>
                                    <InputText class="form-control" @bind-Value="landlord.EINorSSN" placeholder="Enter EIN " />
                                </div>


                            </div>

                            <div class="col-md-3">
                                <label class="required-label">Type of Owner</label>
                                <InputSelect class="form-select" @bind-Value="landlord.TypeOwnerId">
                                    <option value="">-- Select Type --</option>
                                    @foreach (var Own in TypeOwnerList)
                                    {
                                        <option value="@Own.Id">@Own.Name</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => landlord.TypeOwnerId)" />
                            </div>

                        </div>


                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label>Phone</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-phone"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.Phone" placeholder="Enter Phone " />
                                </div>

                            </div>
                            <div class="col-md-4">
                                <label class="required-label">Email</label>

                                <div class="input-group">
                                    <span class="input-group-text">@@</span>
                                    <InputText class="form-control" @bind-Value="landlord.Email" placeholder="Enter Email" />

                                </div>
                                <ValidationMessage For="@(() => landlord.Email)" />

                            </div>

                            <div class="col-md-4">
                                <label>Contact Person Name</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.ContactPersonName" placeholder="Enter  Name " />
                                </div>

                            </div>

                        </div>


                        <div class="row mb-3">
                            <div class="col">
                                <label>Address Line 1</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.Address1" placeholder="Enter First Address " />
                                </div>
                                <ValidationMessage For="@(() => landlord.Address1)" />

                            </div>
                            <div class="col">
                                <label>Address Line 2</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.Address2" placeholder="Enter Second Address " />
                                </div>

                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label>State</label>
                                <InputSelect class="form-select" @bind-Value="landlord.StateId">
                                    <option value="">-- Select State --</option>
                                    @foreach (var s in StatesList)
                                    {
                                        <option value="@s.Id">@s.Name</option>
                                    }
                                </InputSelect>
                            </div>

                            <div class="col">
                                <label>City</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.City" placeholder="Enter City " />
                                </div>


                            </div>

                            <div class="col">
                                <label>Zip Code</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-geo"></i></span>
                                    <InputText class="form-control" @bind-Value="landlord.Zipcode" placeholder="Enter Zip Code " />
                                </div>

                            </div>
                        </div>
                        <div class="row mb-3 d-flex align-items-center">
                            <div class="col-lg-6">
                                <label>If purchased at foreclosure: Date of Referee Deed</label>

                            </div>
                            <div class="col-lg-3">
                                <InputDate class="form-control"
                                @bind-Value="landlord.DateOfRefreeDeed"
                                id="dateRefereeDeed"
                                placeholder="Select date" />
                            </div>
                        </div>
                        <InputRadioGroup @bind-Value="landlord.LandlordTypeId" class="mb-3 required-label">
                            <div class="row align-items-center">
                                <div class="col-auto">
                                    <label class="form-label mb-0 required-label" style="margin-top:5px">Are You the:</label>
                                </div>
                                <div class="col">
                                    <div class="d-flex flex-wrap align-items-center gap-4">
                                        @foreach (var role in LandLordTypeList)
                                        {
                                            <div class="d-flex align-items-center gap-2">
                                                <div class="form-check d-flex align-items-center m-0">
                                                    <InputRadio Value="@role.Id" class="form-check-input me-1" />
                                                    <label class="form-check-label ms-1" style="margin-top:5px">
                                                        @role.Name
                                                    </label>
                                                </div>

                                                @if (role.Name == "Other" && landlord.LandlordTypeId == role.Id)
                                                {
                                                    <InputText class="form-control"
                                                    placeholder="Please specify"
                                                    style="max-width: 200px; height: 36px;"
                                                    @bind-Value="landlord.OtherLandlordTypeDescription" />
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </InputRadioGroup>
                        <ValidationMessage For="@(() => landlord.LandlordTypeId)" />
                        @* <button type="submit" class="btn bg-navy text-white mt-3">Save </button> *@
                    </EditForm>

                }

                @if (!showLandlordForm)
                {
                    <div style="max-height: 400px; overflow-y: auto; overflow-x: auto;">
                        <table class="table table-bordered mt-4" style="min-width: 1000px;">
                            <thead class="table-light">
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Phone</th>
                                    <th>EIN</th>
                                    <th>Contact Person Name</th>
                                    <th>Type of Owner</th>
                                    <th>Date of Refree</th>
                                    <th>Address</th>
                                    <th>Status</th>
                                    <th class="sticky">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (savelandlordList.Any())
                                {
                                    @foreach (var l in savelandlordList)
                                    {
                                        <tr>
                                            <td>@(string.IsNullOrWhiteSpace(l.FirstName + l.LastName) ? "-" : l.FirstName + " " + l.LastName)</td>
                                            <td>@(string.IsNullOrWhiteSpace(l.Email) ? "-" : l.Email)</td>
                                            <td>@(string.IsNullOrWhiteSpace(l.Phone) ? "-" : l.Phone)</td>
                                            <td>@(string.IsNullOrWhiteSpace(l.EINorSSN) ? "-" : l.EINorSSN)</td>
                                            <td>@(string.IsNullOrWhiteSpace(l.ContactPersonName) ? "-" : l.ContactPersonName)</td>
                                            <td>@(string.IsNullOrWhiteSpace(l.TypeOwnerName) ? "-" : l.TypeOwnerName)</td>
                                            <td>@(l.DateOfRefreeDeed == DateOnly.MinValue ? "-" : l.DateOfRefreeDeed.ToString("MM/dd/yyyy"))</td>
                                            <td>
                                                @(string.IsNullOrWhiteSpace($"{l.Address1}{l.Address2}{l.City}{l.StateName}{l.Zipcode}")
                                                        ? "-" : $"{l.Address1}, {l.Address2}, {l.City}, {l.StateName} - {l.Zipcode}")
                                            </td>
                                            <td>Active</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7" class="text-muted">No landlords added yet.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="vertical-buttons d-flex flex-column align-items-center position-absolute end-0 top-0 translate-middle-y ">
                        <button class="vertical-tab-button @(activeTab == "building" ? "active-vertical" : "")" @onclick="@(() => SetActiveTab("building"))" style="position:relative ; top:15rem">BUILDING</button>
                    </div>
                }
            </div>
        }

        <!-- BUILDING Overlay -->
        @if (activeTab == "building")
        {
            <div class="overlay-form overlay-building">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="color-text fw-bold mb-0">BUILDING INFORMATION</h5>
                    <div>
                        @* <button class="btn btn-outline-secondary fw-semibold me-2" @onclick="@(() => SetActiveTab(string.Empty))">←</button> *@
                        <button class="btn btn-outline-secondary fw-semibold me-2"
                        @onclick="@BackToPreviousTab">
                            ←
                        </button>
                        <button class="btn bg-navy text-white" @onclick="ToggleBuildingForm">@GetToggleButtonText()</button>
                        @if (showBuildingForm)
                        {
                            <button type="submit" form="buildingForm" class="btn bg-navy text-white me-2" style="margin-left:10px">Save</button>
                        }
                    </div>
                </div>

                @if (showBuildingForm)
                {

                    <EditForm id="buildingForm" Model="@building" OnValidSubmit="SaveBuildingAsync">
                        <DataAnnotationsValidator />

                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label class="required-label">Landlord</label>
                                <InputSelect class="form-select" @bind-Value="building.LandlordId">
                                    <option value="">-- Select Landlord --</option>
                                    @foreach (var landlord in savelandlordList)
                                    {
                                        <option value="@landlord.Id">@landlord.FirstName</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => building.LandlordId)" />
                            </div>
                            <div class="col-md-2">
                                <label class="required-label">Apt Code</label>
                                <InputText class="form-control" @bind-Value="building.ApartmentCode" placeholder="Enter Code" />
                                <ValidationMessage For="@(() => building.ApartmentCode)" />
                            </div>

                            <div class="col-md-4">
                                <label>MDR Number</label>
                                <InputText class="form-control" @bind-Value="building.MDRNumber" Placeholder="Enter Number" />
                            </div>
                            <div class="col-md-3">
                                <label for="BuildingUnit"> Building Units(No.)</label>
                                <InputText class="form-control" id="BuildingUnit" @bind-Value="building.BuildingUnits" placeholder="Enter Building Units" />
                            </div>
                        </div>

                        <!-- Premise Type & MDR Number -->
                        <div class="row mb-3">

                            <div class="col-md-4">
                                <label for="BuildingUnit" class="required-label">Premise Type</label>
                                <InputSelect class="form-select" @bind-Value="building.PremiseTypeId">
                                    <option value="">-- Select Type --</option>
                                    @foreach (var p in premiseTypesList)
                                    {
                                        <option value="@p.Id">@p.Name</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => building.PremiseTypeId)" />
                            </div>
                            <div class="col-md-4">
                                <label class="required-label" for="RentStatus required-label">Rent Regulation Status</label>
                                <InputSelect class="form-select" @bind-Value="building.RegulationStatusId">
                                    <option value="">-- Select Regulation --</option>
                                    @foreach (var r in RegulationList)
                                    {
                                        <option value="@r.Id">@r.Name</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => building.RegulationStatusId)" />
                            </div>

                            <div class="col-md-4">
                                <label>Petitioner Interest</label>
                                <InputText class="form-control" @bind-Value="building.PetitionerInterest" placeholder="Enter Intrest" />
                            </div>

                        </div>

                        <div class="row mb-3">
                            <div class="col">
                                <label class="required-label">Address Line 1</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="building.Address1" placeholder="Enter First Address" />
                                </div>
                                <ValidationMessage For="@(() => building.Address1)" />

                            </div>
                            <div class="col">
                                <label>Address Line 2</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="building.Address2" placeholder="Enter Second Address" />
                                </div>

                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col">
                                <label>State</label>
                                <InputSelect class="form-select" @bind-Value="building.StateId">
                                    <option value="">-- Select State --</option>
                                    @foreach (var s in StatesList)
                                    {
                                        <option value="@s.Id">@s.Name</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="col">
                                <label>City</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    <InputText class="form-control" @bind-Value="building.City" placeholder="Enter City " />
                                </div>
                            </div>


                            <div class="col">
                                <label>Zip Code</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-geo"></i></span>
                                    <InputText class="form-control" @bind-Value="building.Zipcode" placeholder="Enter Zip Code " />
                                </div>

                            </div>
                        </div>





                        <!-- Submit Button -->
                        @* <button type="submit" class="btn bg-navy text-white mt-2">Save</button> *@
                    </EditForm>
                }

                @if (!showBuildingForm)
                {
                    <div style="max-height: 400px; overflow-y: auto; overflow-x: auto;">
                        <table class="table table-bordered mt-4" style="min-width: 1000px;">
                            <thead>
                                <tr>
                                    <th>Code</th>
                                    <th>Premise</th>
                                    <th>Address</th>
                                    <th>MDR</th>
                                    <th>Interest</th>
                                    <th>Rent Regulation</th>
                                    <th>Building Units</th>
                                    <th>Date Of Refree</th>
                                    <th>Status</th>

                                </tr>
                            </thead>
                            <tbody>
                                @if (apartmentList.Any())
                                {
                                    @foreach (var b in apartmentList)
                                    {
                                        <tr>
                                            <td>@(string.IsNullOrWhiteSpace(b.ApartmentCode) ? "-" : b.ApartmentCode)</td>
                                            <td>@(string.IsNullOrWhiteSpace(b.PremiseTypeName) ? "-" : b.PremiseTypeName)</td>
                                            <td>
                                                @(string.IsNullOrWhiteSpace($"{b.Address1}{b.Address2}{b.City}{b.StateName}{b.StateName}")
                                                        ? "-"
                                                        : $"{b.Address1}, {b.Address2}, {b.City}, {b.StateName} - {b.Zipcode}"
                                                        )
                                            </td>
                                            <td>@(string.IsNullOrWhiteSpace(b.MDRNumber) ? "-" : b.MDRNumber)</td>
                                            <td>@(string.IsNullOrWhiteSpace(b.PetitionerInterest) ? "-" : b.PetitionerInterest)</td>
                                            <td>@(string.IsNullOrWhiteSpace(b.RegulationStatusName) ? "-" : b.RegulationStatusName)</td>
                                            <td>@(string.IsNullOrWhiteSpace(b.BuildingUnits) ? "-" : b.BuildingUnits))</td>

                                            <td>Active</td>

                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr><td colspan="10" class="text-muted">No buildings added yet.</td></tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="vertical-buttons d-flex flex-column align-items-center position-absolute end-0 top-0 translate-middle-y ">
                        <button class="vertical-tab-button @(activeTab == "tanent" ? "active-vertical" : "")" @onclick="@(() => SetActiveTab("tanent"))" style="position:relative ; top:15rem">Tanent</button>

                    </div>
                }
            </div>
        }


        @if (activeTab == "tanent")
        {
            <div class="overlay-form overlay-landlord">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="color-text fw-bold mb-0">TENANT INFORMATION</h5>
                    <div>
                        <button class="btn btn-outline-secondary fw-semibold me-2"
                        @onclick="@BackToPreviousTab">
                            ←
                        </button>
                        @* <button class="btn btn-outline-secondary fw-semibold me-2" @onclick="@(() => SetActiveTab(string.Empty))">←</button> *@
                        <button class="btn bg-navy text-white" @onclick="ToggleTanentForm">@GetToggleButtonText()</button>
                        @if (showTanentForm)
                        {
                            <button type="submit" form="tenantForm" class="btn bg-navy text-white me-2" style="margin-left:10px">Save</button>
                        }
                    </div>
                </div>

                @if (showTanentForm)
                {
                    <EditForm id="tenantForm" Model="@tenant" OnValidSubmit="SaveTenantAsync">
                        <DataAnnotationsValidator />
                        <!-- Row 1: Apartment Selection -->
                        <div class="row mb-3">

                            <div class="col-md-3">
                                <label class="required-label">Building</label>
                                <InputSelect class="form-select" @bind-Value="tenant.BuildingId">
                                    <option value="">-- Select Building --</option>
                                    @foreach (var apartment in apartmentList)
                                    {
                                        <option value="@apartment.Id">@apartment.ApartmentCode</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => tenant.BuildingId)" />
                            </div>
                            <div class="col-md-4">
                                <label class="required-label">First Name</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <InputText class="form-control" @bind-Value="tenant.FirstName" placeholder="Enter First Name" />
                                </div>
                                <ValidationMessage For="@(() => tenant.FirstName)" />
                            </div>
                            <div class="col-md-3">
                                <label>Last Name</label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <InputText class="form-control" @bind-Value="tenant.LastName" placeholder="Enter Last Name" />
                                </div>

                            </div>


                            <div class="col-md-2">
                                <label>Unit/AptNumber</label>
                                <InputText class="form-control" @bind-Value="tenant.UnitOrApartmentNumber" placeholder="Enter Unit or Apt No." />
                            </div>
                        </div>


                        <!-- Row 2: Email, Phone language  , ein -->
                        <div class="row mb-4">
                            <div class="col-md-4">
                                <label class="required-label">Email</label>
                                <div class="input-group">
                                    <span class="input-group-text">@@</span>
                                    <InputText class="form-control" @bind-Value="tenant.Email" placeholder="Enter Email" />
                                </div>
                                <ValidationMessage For="@(() => tenant.Email)" />

                            </div>

                            <div class="col-md-3">
                                <label>Phone</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-phone"></i></span>
                                    <InputText class="form-control" @bind-Value="tenant.Phone" placeholder="Enter Phone " />
                                </div>

                            </div>

                            <div class="col-md-3">
                                <label>EIN/SSN</label>

                                <div class="input-group mb-3">
                                    <span class="input-group-text">
                                        <i class="bi bi-person-vcard"></i> <!-- You can replace with bi-shield-lock too -->
                                    </span>
                                    <InputText class="form-control" @bind-Value="tenant.SSN" placeholder="Enter EIN " />
                                </div>
                            </div>

                            <div class="col-md-2">
                                <label class="required-label">Language</label>
                                <InputSelect class="form-select" @bind-Value="tenant.LanguageId">
                                    <option value="">-- Select Language --</option>
                                    @foreach (var l in LangList)
                                    {
                                        <option value="@l.Id">@l.Name</option>
                                    }
                                </InputSelect>
                            </div>

                        </div>
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label>Date Rent (Month/Week)</label>
                                <InputText class="form-control" @bind-Value="tenant.RentDueEachMonthOrWeek" placeholder="e.g. 1st, Monday" />
                            </div>

                            <div class="col-md-2">
                                <label>Monthly Rent</label>
                                <InputNumber class="form-control" @bind-Value="tenant.MonthlyRent" placeholder="Enter Monthly Rent" />
                            </div>

                            <div class="col-md-2">
                                <label>Tenant's Share</label>
                                <InputNumber class="form-control" @bind-Value="tenant.TenantShare" placeholder="Enter Tenant Share" />
                            </div>
                            <div class="col-md-2">
                                <label>Borough</label>
                                <InputText class="form-control" @bind-Value="tenant.Borough" placeholder="Enter Borough" />
                            </div>
                            <div class="col-md-2">
                                <label>Social Services</label>
                                <InputText class="form-control" @bind-Value="tenant.SocialServices" placeholder="Enter Social Service Info" />
                            </div>

                        </div>

                        <div class="row mb-3">

                            <div class="col-md-4">
                                <label>Last Rent Paid</label>
                                <InputText class="form-control" @bind-Value="tenant.LastMonthWeekRentPaid" placeholder="Enter Last Paid Info" />
                            </div>

                            <div class="col-md-4">
                                <label>Total Rent Owed</label>
                                <InputNumber class="form-control" @bind-Value="tenant.TotalRentOwed" placeholder="Enter Total Owed" />
                            </div>
                            <div class="col-md-4">
                                <label>Reg. No.</label>
                                <InputText class="form-control" @bind-Value="tenant.Registration_No" placeholder="Enter Registration No." />
                            </div>
                           @*  <div class="col-md-3">
                                <label>Name & Relations</label>
                                <InputTextArea class="form-control"
                                @bind-Value="tenant.Name_Relation"
                                placeholder="Enter Name & Relation"
                                rows="3" />
                            </div> *@
                        </div>

                        <div class="row mb-3">
                            <div class="col-auto">
                                <label class="me-2">Additional Occupants</label>
                            </div>

                            <div class="col">
                                @for (int i = 0; i < occupants.Count; i++)
                                {
                                    var index = i;

                                    <div class="row mb-2">
                                        <div class="col-auto">
                                            <div class="form-check">
                                                <input type="checkbox"
                                                       class="form-check-input"
                                                       @bind="occupants[index].IsChecked" />
                                            </div>
                                        </div>

                                        <div class="col">
                                            @if (occupants[index].IsChecked)
                                            {
                                                <div class="row">
                                                    <div class="col-auto">
                                                        <InputText class="form-control" placeholder="Name"
                                                                   @bind-Value="occupants[index].Name" />
                                                    </div>
                                                    <div class="col">
                                                        <InputText class="form-control" placeholder="Relation"
                                                                   @bind-Value="occupants[index].Relation" />
                                                    </div>
                                                </div>

                                                @* ✅ Add new only if this is last item and has data *@
                                                @if (index == occupants.Count - 1 && !string.IsNullOrWhiteSpace(occupants[index].Name))
                                                {
                                                    occupants.Add(new AdditionalOccupantDto());
                                                }
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>





                        <div class="row mb-3">

                            <InputRadioGroup @bind-Value="tenant.IsUnitIllegalId" class="mb-3">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <label class="form-label mb-0 required-lebel" style="margin-top:5px">Is the Unit Illegal:</label>
                                    </div>
                                    <div class="col">
                                        <div class="d-flex flex-wrap align-items-center gap-4">
                                            @foreach (var role in IsUnitIllegalList)
                                            {
                                                <div class="d-flex align-items-center gap-2">
                                                    <div class="form-check d-flex align-items-center m-0">
                                                        <InputRadio Value="@role.Id" class="form-check-input me-1" />
                                                        <label class="form-check-label ms-1" style="margin-top:5px">
                                                            @role.Name
                                                        </label>
                                                    </div>

                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </InputRadioGroup>
                            <ValidationMessage For="@(() => tenant.IsUnitIllegalId)" />

                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <InputRadioGroup @bind-Value="tenant.IsERAPPaymentReceived">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">ERAP Payment Received?:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>
                            </div>

                            @if (tenant.IsERAPPaymentReceived == true)
                            {
                                <div class="col-md-6 d-flex align-items-center">
                                    <label class="form-label mb-0 me-2">ERAP Received Date:</label>
                                    <InputDate class="form-control" style="max-width: 200px;" @bind-Value="tenant.ERAPPaymentReceivedDate" />
                                </div>
                            }
                        </div>

                        <div class="row mb-3">

                            <InputRadioGroup @bind-Value="tenant.TenancyTypeId" class="mb-3 required-label">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <label class="form-label mb-0 required-label" style="margin-top:5px">Tenancy Type:</label>
                                    </div>
                                    <div class="col">
                                        <div class="d-flex flex-wrap align-items-center gap-4">
                                            @foreach (var role in TenancyTypeList)
                                            {
                                                <div class="d-flex align-items-center gap-2">
                                                    <div class="form-check d-flex align-items-center m-0">
                                                        <InputRadio Value="@role.Id" class="form-check-input me-1" />
                                                        <label class="form-check-label ms-1" style="margin-top:5px">
                                                            @role.Name
                                                        </label>
                                                    </div>

                                                    @if (role.Name == "Other" && tenant.TenancyTypeId == role.Id)
                                                    {
                                                        <InputText class="form-control"
                                                        placeholder="Please specify"
                                                        style="max-width: 200px; height: 36px;"
                                                        @bind-Value="tenant.TenancyTypeDescription" />
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </InputRadioGroup>
                            <ValidationMessage For="@(() => tenant.TenancyTypeId)" />
                        </div>
                        <div class="row mb-3">
                            <!-- Tenant of Record -->
                            <div class="col-md-6">
                                <InputRadioGroup @bind-Value="tenant.TenantRecord">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Tenant of Record:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>
                            </div>

                            <!-- Still in Possession -->
                            <div class="col-md-6">
                                <InputRadioGroup @bind-Value="tenant.HasPossession">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Still in Possession:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>
                            </div>
                        </div>

                        <div class="row align-items-center mb-3">

                            <div class="col-md-6">

                                <InputRadioGroup @bind-Value="tenant.HasRegulatedTenancy">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Is this a rent regulated tenancy:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>
                            </div>
                            <div class="col-md-6">
                                <InputRadioGroup @bind-Value="tenant.OtherOccupants">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Other Occupants:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>

                            </div>

                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <InputRadioGroup @bind-Value="tenant.HasPriorCase">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Any prior housing Court Case:</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>

                            </div>
                            <div class="col-md-6">

                                <InputRadioGroup @bind-Value="tenant.RenewalOffer">
                                    <div class="d-flex align-items-center">
                                        <label class="form-label mb-0 me-2">Renewal Offer</label>

                                        <div class="form-check me-2">
                                            <InputRadio class="form-check-input" Value="true" />
                                            <label class="form-check-label">Yes</label>
                                        </div>

                                        <div class="form-check">
                                            <InputRadio class="form-check-input" Value="false" />
                                            <label class="form-check-label">No</label>
                                        </div>
                                    </div>
                                </InputRadioGroup>

                            </div>

                        </div>

                   
                    </EditForm>
                }

                @if (!showTanentForm)
                {
                    <div style="max-height: 400px; overflow-y: auto; overflow-x: auto;">
                        <table class="table table-bordered mt-4" style="min-width: 1200px;">
                            <thead class="table-light">
                                <tr>
                                    <th>First Name</th>
                                    <th>Last Name</th>
                                    <th>Unit/Apt</th>
                                    <th>Email</th>
                                    <th>Phone</th>
                                    <th>SSN</th>
                                    <th>Language</th>
                                    <th>Borough</th>
                                    <th>Monthly Rent</th>
                                    <th>Tenant's Share</th>
                                    <th>ERAP Received</th>
                                    <th>ERAP Date</th>
                                    <th>Reg. No.</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (saveTanentList.Any())
                                {
                                    @foreach (var t in saveTanentList)
                                    {
                                        <tr>
                                            <td>@t.FirstName</td>
                                            <td>@t.LastName</td>
                                            <td>@t.UnitOrApartmentNumber</td>
                                            <td>@t.Email</td>
                                            <td>@t.Phone</td>
                                            <td>@t.SSN</td>
                                            <td>@t.LanguageName</td>
                                            <td>@t.Borough</td>
                                            <td>@t.MonthlyRent</td>
                                            <td>@t.TenantShare</td>
                                            <td>@(t.IsERAPPaymentReceived == true ? "Yes" : "No")</td>
                                            <td>@(t.ERAPPaymentReceivedDate?.ToString("dd-MM-yyyy"))</td>
                                            <td>@t.Registration_No</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="14" class="text-muted text-center">No tenants added yet.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        }


    </div>


    <div class="sticky-footer bg-white border-top p-3 d-flex justify-content-between gap-2">
        @if (!IsClientFormValid())
        {
            <div class="text-danger mt-2">Please fill all required client fields to enable Submit.</div>
        }
        <div class="d-flex gap-2 ">
            <button class="btn btn-outline-secondary px-4 fw-semibold" @onclick="HideAsync">Cancel</button>
            <button class="btn bg-navy text-white px-4 fw-semibold" disabled="@(!IsClientFormValid())" @onclick="SubmitClientAsync">Submit</button>
        </div>

    </div>


</div>

@code {
    [Parameter] public EditToClientDto createClient { get; set; } = new();
    [Parameter]
    public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback<CreateToClientDto> Submit { get; set; }

    private string activeTab = string.Empty;

    private bool showLandlordForm = false;
    private bool showBuildingForm = false;
    private bool showTanentForm = false;

    private EditToLandlordDto landlord = new();
    private EditToBuildingDto building = new();
    private EditToTenantDto tenant = new();

    private List<EditToLandlordDto> savelandlordList = new();
    private List<EditToTenantDto> saveTanentList = new();
    private List<EditToBuildingDto> apartmentList = new();

    private List<State> StatesList = new();
    private List<TypeOfOwner> TypeOwnerList = new();
    private List<RegulationStatus> RegulationList = new();
    private List<PremiseType> premiseTypesList = new();
    private List<Language> LangList = new();
    private List<LandlordType> LandLordTypeList = new();
    private List<TenancyType> TenancyTypeList = new();
    private List<IsUnitIllegal> IsUnitIllegalList = new();
    private string LatestLandLordCode = "";
    private string LatestBuildingCode = "";
    private string LatestTenantCode = "";
    private Stack<string> tabHistory = new();

    private bool shouldAddNewOccupant = false;

     private List<AdditionalOccupantDto> occupants = new()
    {
        new AdditionalOccupantDto()
    };

  

    protected override async Task OnInitializedAsync()
    {

        if (createClient != null)
        {

            StatesList = await StateRepository.GetAllState();
            TypeOwnerList = await TypeOwnerRepository.GetAllOwner();
            RegulationList = await RegulationStatusRepository.GetAllRegulationStatus();
            premiseTypesList = await PremiseTypeRepository.GetAllPremiseType();
            LangList = await LanguageRepository.GetAllLanguage();
            LandLordTypeList = await LandlordTypeRepository.GetAllLandLordType();
            TenancyTypeList = await TenancyTypeRepository.GetAllTenancyType();
            IsUnitIllegalList = await UnitIllegalRepository.GetAllUnitIllegal();
            LatestLandLordCode = await _landlordService.GetLastLandLordCode();
            LatestBuildingCode = await _apartmentService.GetLastBuilding();
            LatestTenantCode = await _tenantService.GetLastTenantCode();
        }
        occupants.Add(new AdditionalOccupantDto());

    }

    private void OnCheckboxChanged(int index, ChangeEventArgs e)
    {
        occupants[index].IsChecked = (bool)e.Value!;

        // Add next checkbox if last one is checked
        if (occupants[index].IsChecked && index == occupants.Count - 1)
        {
            occupants.Add(new AdditionalOccupantDto());
        }
    }
    private void BackToLandlordList()
    {
        showLandlordForm = false;
        landlord = new();
    }

    private void BackToBuildingList()
    {
        showBuildingForm = false;
        building = new();
    }
    private void BackToTenantList()
    {
        showTanentForm = false;
        tenant = new();
    }

    private bool IsClientFormValid()
    {
        return
            !string.IsNullOrWhiteSpace(createClient.FirstName) &&
            !string.IsNullOrWhiteSpace(createClient.Email);
    }

    public async Task HideAsync()
    {
        activeTab = string.Empty;
        showLandlordForm = false;
        showBuildingForm = false;
        showTanentForm = false;
        await OnClose.InvokeAsync();
        StateHasChanged();
    }


    private async Task SetActiveTab(string tab)
    {
        // Step 1: Client tab complete hona chahiye for Landlord
        if (tab == "landlord")
        {
            if (createClient == null || string.IsNullOrWhiteSpace(createClient.FirstName) || string.IsNullOrWhiteSpace(createClient.Email))
            {
                await JS.InvokeVoidAsync("alert", "Please complete the Client form before moving to Landlord.");
                return;
            }
        }

        // Step 2: Landlord list me at least 1 item hona chahiye for Building
        if (tab == "building")
        {
            if (savelandlordList == null || !savelandlordList.Any())
            {
                await JS.InvokeVoidAsync("alert", "Please add and save at least one Landlord before moving to Building.");
                return;
            }
        }

        // Step 3: Building form filled hona chahiye before Tenant
        if (tab == "tanent")
        {
            if (apartmentList == null || !apartmentList.Any())
            {
                await JS.InvokeVoidAsync("alert", "Please complete and save Building details before moving to Tenant.");
                return;
            }
        }
        if (!string.IsNullOrEmpty(activeTab))
        {
            tabHistory.Push(activeTab);
        }
        // All checks passed: change tab
        activeTab = tab;
    }

    private void BackToPreviousTab()
    {
        if (tabHistory.Count > 0)
        {
            activeTab = tabHistory.Pop();

            showLandlordForm = false;
            showBuildingForm = false;
            showTanentForm = false;

            // Reset forms if needed
            if (activeTab == "landlord") showLandlordForm = false;
            else if (activeTab == "building") showBuildingForm = false;
            else if (activeTab == "tanent") showTanentForm = false;
        }
        else
        {
            activeTab = string.Empty;
        }

        StateHasChanged();
    }

    private void ToggleLandlordForm() => showLandlordForm = !showLandlordForm;

    private void ToggleBuildingForm() => showBuildingForm = !showBuildingForm;
    private void ToggleTanentForm() => showTanentForm = !showTanentForm;

    private string GetToggleButtonText() => (activeTab == "landlord" && showLandlordForm) || (activeTab == "building" && showBuildingForm) || (activeTab == "tanent" && showTanentForm)
        ? "Cancel"
        : "Add New";

    private Task SaveLandlordAsync()
    {
        // landlord.Id =  Guid.NewGuid();

        if (landlord.Id == Guid.Empty)
        {
            landlord.Id = Guid.NewGuid();
        }
        landlord.TypeOwnerName = TypeOwnerList
       .FirstOrDefault(x => x.Id == landlord.TypeOwnerId)?.Name ?? "";

        landlord.StateName = StatesList
            .FirstOrDefault(x => x.Id == landlord.StateId)?.Name ?? "";
        landlord.LandlordTypeName = LandLordTypeList
            .FirstOrDefault(x => x.Id == landlord.LandlordTypeId)?.Name ?? "";

        int nextNumber = 0;
        if (LatestTenantCode != null)
        {
            nextNumber = int.Parse(LatestLandLordCode[2..]) + 1;

        }
        else
        {
            nextNumber = 1;
        }
        
        LatestLandLordCode = $"LL{nextNumber.ToString().PadLeft(10, '0')}";

        landlord.LandLordCode = LatestLandLordCode;
        savelandlordList.Add(landlord);

        landlord = new();
        showLandlordForm = false;
        return Task.CompletedTask;
    }

    private Task SaveTenantAsync()
    {
        if (tenant.Id == Guid.Empty)
        {
            tenant.Id = Guid.NewGuid();
        }

        tenant.LanguageName = LangList
            .FirstOrDefault(x => x.Id == tenant.LanguageId)?.Name ?? "";

        tenant.TenancyTypeName = TenancyTypeList
      .FirstOrDefault(x => x.Id == tenant.TenancyTypeId)?.Name ?? "";

        tenant.IsUnitIllegalName = IsUnitIllegalList
    .FirstOrDefault(x => x.Id == tenant.IsUnitIllegalId)?.Name ?? "";
        int nextNumber = 0;
        if (LatestTenantCode != null)
        {
            nextNumber = int.Parse(LatestTenantCode[2..]) + 1;

        }
        else{
            nextNumber = 1;
        }
        LatestTenantCode = $"TT{nextNumber.ToString().PadLeft(10, '0')}";

        tenant.TenantCode = LatestTenantCode;
        tenant.occupants = occupants
     .Where(x => x.IsChecked && !string.IsNullOrWhiteSpace(x.Name))
     .ToList();


        saveTanentList.Add(tenant);

        tenant = new();
        showTanentForm = false;
        return Task.CompletedTask;
    }


    private Task SaveBuildingAsync()

    {
        if (building.Id == Guid.Empty)
        {
            building.Id = Guid.NewGuid();
        }

        building.PremiseTypeName = premiseTypesList
           .FirstOrDefault(x => x.Id == building.PremiseTypeId)?.Name ?? "";

        building.StateName = StatesList
            .FirstOrDefault(x => x.Id == building.StateId)?.Name ?? "";

        building.RegulationStatusName = RegulationList
       .FirstOrDefault(x => x.Id == building.RegulationStatusId)?.Name ?? "";
        int nextNumber = 0;
        if (LatestBuildingCode != null)
        {
            nextNumber = int.Parse(LatestBuildingCode[2..]) + 1;

        }
        else
        {
            nextNumber = 1;
        }
        LatestBuildingCode = $"BB{nextNumber.ToString().PadLeft(10, '0')}";

        building.BuildingCode = LatestBuildingCode;

        apartmentList.Add(building);
        building = new();
        showBuildingForm = false;
        return Task.CompletedTask;
    }


    private async Task SubmitClientAsync()
    {
        spinnerservice.Show();
        if (createClient == null)
            return;

        // Assign LandLords to Client
        createClient.editLandLords = savelandlordList;

        foreach (var landlord in createClient.editLandLords)
        {
            // Assign Buildings to each LandLord
            landlord.editBuildings = apartmentList
                .Where(b => b.LandlordId == landlord.Id)
                .ToList();

            foreach (var building in landlord.editBuildings)
            {
                // Assign Tenants to each Building
                building.editTenants = saveTanentList
                    .Where(t => t.BuildingId == building.Id)
                    .ToList();
            }
        }

        // Save the full nested object
        var isSaved = await _clientService.Create(createClient);
        if (isSaved)
        {
            Navigation.NavigateTo("/clients?success=true", true);
        }
    }
}

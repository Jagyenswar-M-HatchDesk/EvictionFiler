 @page "/EditCase/{caseId:guid}"
@using BlazorDownloadFile
@using EvictionFiler.Application.DTOs
@using EvictionFiler.Application.DTOs.ApartmentDto
@using EvictionFiler.Application.DTOs.BuildingDto
@using EvictionFiler.Application.DTOs.ClientDto
@using EvictionFiler.Application.DTOs.FormTypeDto
@using EvictionFiler.Application.DTOs.LandLordDto
@using EvictionFiler.Application.DTOs.LegalCaseDto
@using EvictionFiler.Application.DTOs.OccupantDto
@using EvictionFiler.Application.DTOs.TenantDto
@using EvictionFiler.Application.Interfaces.IRepository
@using EvictionFiler.Application.Interfaces.IRepository.MasterRepository
@using EvictionFiler.Application.Interfaces.IServices
@using EvictionFiler.Domain.Entities.Master
@inject IClientRoleRepository ClientRoleRepository
@inject ICaseTypeRepository CaseTypeRepository
@inject ICaseSubTypeRepository CaseSubTypeRepository
@inject IRegulationStatusRepository RegulationStatusRepository
@inject IReasonHoldoverRepository ReasonHoldoverRepository
@inject ILandlordTypeRepository LandlordTypeRepository
@inject ICaseFormRepository CaseFormRepository
@inject ICasesRepository CasesRepository
@inject IUnitIllegalRepository UnitIllegalRepository
@inject IFormTypesRepository FormTypesRepository
@inject IDateRentRepository DateRentRepository
@inject IRenewalStatusRepository RenewalStatusRepository
@inject ITenancyTypeRepository TenancyTypeRepository
@inject ILandlordSevice _landlordService
@inject IBuildingService _buildingService
@inject ILegalCaseService _legalCaseService
@inject ICaseFormService _CaseFormService
@inject ITenantService _tenantService
@inject IClientService _clientService
@inject NavigationManager nav
@inject NavigationDataService _dataService
@using EvictionFiler.Client.SpinnerService
@inject SpinnerService spinnerservice
@using Blazored.Typeahead
@using EvictionFiler.Domain.Entities


@inject IBlazorDownloadFileService DownloadFileService




@rendermode InteractiveAuto
<style>
    .stepper-row::-webkit-scrollbar {
        height: 3px; /* thinner scrollbar */
    }

    .stepper-row::-webkit-scrollbar-thumb {
        background-color: #888;
        border-radius: 10px;
    }

    .stepper-row::-webkit-scrollbar-track {
        background: transparent;
    }

    /* For Firefox */
    .stepper-row {
        scrollbar-width: thin;
        scrollbar-color: #888 transparent;
    }

    .stepper-container {
        /*   background-color: #F7F6F3; */
        padding: 30px 20px;
        border-radius: 6px;
        /*   box-shadow: 0 1px 3px rgba(0,0,0,0.1); */
        overflow-x: auto;
        white-space: nowrap;
    }

    .stepper-row {
        display: flex;
        align-items: center;
        gap: 5px;
        min-width: max-content;
        overflow-x: auto; /* move it here */
        white-space: nowrap;
    }


    .stepper-step {
        display: flex;
        align-items: center;
        font-size: 14px;
        font-weight: 500;
        gap: 6px;
    }

        .stepper-step .circle {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 13px;
            flex-shrink: 0;
        }

    .circle.done {
        background-color: #5cb85c;
        color: white;
    }

    .circle.active {
        background-color: #1F365D;
        color: white;
    }

    .circle.upcoming {
        background-color: #ccc;
        color: white;
    }

    .text.done,
    .text.active {
        color: #007bff;
        font-weight: 600;
    }

    .text.upcoming {
        color: #aaa;
    }

    .arrow {
        color: #ccc;
        margin: 0 8px;
    }

    .nav-buttons {
        display: flex;
        gap: 6px;
    }

    .circle.done {
        background-color: #D4A844;
        color: white;
    }

    .text.done,
    .text.active {
        color: #1F365D;
        font-weight: 600;
    }



    .custom-scroll::-webkit-scrollbar {
        width: 6px;
    }

    .custom-scroll::-webkit-scrollbar-thumb {
        background-color: #ccc;
        border-radius: 3px;
    }

    .custom-scroll {
        scrollbar-width: thin;
    }

    .required-label::after {
        content: " *";
        color: red;
    }

    .stepper-row {
        display: flex;
        justify-content: space-between; /* ✅ the magic */
        align-items: center;
        width: 100%;
        overflow-x: auto;
        white-space: nowrap;
    }

    .stepper-step {
        display: flex;
        align-items: center;
        font-size: 14px;
        font-weight: 500;
        gap: 6px;
    }

    .stepper-row {
        display: flex;
        align-items: center;
        width: 100%;
        overflow-x: auto;
    }

    .stepper-step {
        display: flex;
        align-items: center;
        gap: 6px;
        white-space: nowrap;
    }

    .step-line {
        height: 2px;
        background-color: #ccc;
        margin: 0 8px;
    }

    .btn:disabled,
    .btn[disabled] {
        pointer-events: auto !important;
        cursor: not-allowed !important;
    }

</style>

<!-- upper Step Tracker + Navigation Buttons -->
<div class="stepper-container top-0 d-flex justify-content-between align-items-center flex-wrap v-100" style="scrollbar-width: thin;">
    <!-- Stepper Tracker -->
    <div class="stepper-row d-flex align-items-center w-100">
        @for (int i = 0; i < stepTitles.Count; i++)
        {
            var isDone = i < currentStep;
            var isActive = i == currentStep;

            var circleClass = isDone ? "circle done"
            : isActive ? "circle active"
            : "circle upcoming";

            var textClass = isDone ? "text done"
            : isActive ? "text active"
            : "text upcoming";

            <div class="stepper-step d-flex align-items-center">
                <div class="@circleClass">
                    @(isDone ? "✓" : (i + 1).ToString())
                </div>
                <span class="@textClass">@stepTitles[i]</span>
            </div>

            @* Add a line connector only between steps *@
            @if (i < stepTitles.Count - 1)
            {
                <div class="step-line flex-grow-1"></div>
            }
        }
    </div>

</div>



<div class="container-fluid px-4" style="margin-top: 50px; margin-bottom: 100px;">

    <div style="height: calc(100vh - 200px); overflow-y: auto;" class="custom-scroll">

        @if (currentStep == 0)
        {
            <div class="mx-auto p-4 border rounded shadow-sm bg-white">
                <h5 class="text-center text-navy fw-bold fs-3">Case Details</h5>
                <hr class="border-gold mb-4" />

                <EditForm Model="@tenantSearchModel">
                    <div class="row mb-3 d-flex gap-2 align-items-center">
                        <div class="col-12">
                            <div class="row">
                                <div class="col-2">
                                    <label class=" col-form-label fw-semibold text-navy required-label">Case Type</label>
                                </div>
                                <div class="col-8">
                                  @*   <select class="form-select w-50" @bind="legalcaseDto.CaseTypeId" @onchange="OnCaseTypeChanged">
                                        @foreach (var caseType in CaseTypeList)
                                        {
                                            <option value="@caseType.Id">@caseType.Name</option>
                                        }
                                    </select> *@

                                    <select class="form-select w-50"
                                            value="@legalcaseDto.CaseTypeId"
                                            @onchange="OnCaseTypeChanged">
                                        @foreach (var caseType in CaseTypeList)
                                        {
                                            <option value="@caseType.Id">@caseType.Name</option>
                                        }
                                    </select>

                                </div>
                            </div>
                        </div>
                
                        <div class="col-12">
                            @if (!isTenantSelected)
                            {
                       
                                <div class="row">
                                    <div class="col-2">
                                        <label class=" col-form-label fw-semibold text-navy required-label">Tenant</label>
                                    </div>

                                    <div class="col-8">
                                        <input type="text"
                                               class="form-control"
                                               value="@searchtenantText"
                                               @oninput="HandleTenantInput"
                                               placeholder="Search tenant by name/code"
                                               style="width:50%" />

                                        @if (filteredTenantList?.Any() == true)
                                        {
                                            bool isCodeSearch = !string.IsNullOrWhiteSpace(searchtenantText) &&
                                            (char.IsDigit(searchtenantText[0]) || searchtenantText.ToLower().StartsWith("t"));

                                            <ul class="list-group position-absolute shadow-sm z-3 mt-1"
                                                style="max-height: 200px; overflow-y: auto;width:49%;">
                                                @foreach (var item in filteredTenantList)
                                                {
                                                    <li class="list-group-item list-group-item-action"
                                                        style="cursor: pointer;"
                                                        @onclick="@(() => SelectTenant(item.Id))">
                                                        @if (isCodeSearch)
                                                        {
                                                            <span>@item.TenantCode (@item.FirstName)</span>
                                                        }
                                                        else
                                                        {
                                                            <span>@item.FirstName (@item.TenantCode)</span>
                                                        }
                                                    </li>
                                                }
                                            </ul>
                                        }
                                        else if (hasSearched && !string.IsNullOrWhiteSpace(searchtenantText))
                                        {
                                            <ul class="list-group position-absolute w-100 shadow-sm z-3 mt-1">
                                                <li class="list-group-item text-muted">No matching tenants found.</li>
                                            </ul>
                                        }
                                    </div>
                                </div>

                            }
                        </div>


                    </div>
                </EditForm>

                @if (tenantDto != null)
                {
                    <div class="row mt-4">
                        <div class="col-md-12">
                            @* <div class="border rounded p-3 bg-light">

                                <div class="card shadow-sm">
                                    <div class="card-body"> *@

                            <!-- SECTION 1: TENANT DETAILS -->
                            <div class="card shadow-sm p-4 mb-4">
                                <div class=" mb-3">
                                    <h6 class="fw-bold fs-4">Tenant Information</h6>
                                    <hr>
                                </div>
                                <div class="row my-1">
                                    <!-- Left Column (Full Name) -->
                                    <div class="col-5">
                                        <div class="row">
                                         

                                            <div class="col-auto fw-semibold">Tenant's Full Name(s):</div>
                                            <div class="col">
                                                @($"{tenantDto.tenants?.FirstName} {tenantDto.tenants?.LastName}".Trim() ?? "-")
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Right Column (Building Address) -->
                                    <div class="col-6">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Unit / Apartment Number:</div>
                                            <div class="col ">@(!string.IsNullOrWhiteSpace(tenantDto.tenants.UnitOrApartmentNumber) ? tenantDto.tenants.UnitOrApartmentNumber : "N/A")</div>
                                        </div>
                                    </div>
                                </div>


                                <div class="row my-2">

                                    <div class="col-auto fw-semibold">Building Address:</div>
                                    <div class="col">
                                        @{
                                            var parts = new List<string>();

                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address1)) parts.Add(tenantDto.tenants.Building.Address1);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address2)) parts.Add(tenantDto.tenants.Building.Address2);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.City)) parts.Add(tenantDto.tenants.Building.City);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.StateName)) parts.Add(tenantDto.tenants.Building.StateName);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Zipcode)) parts.Add(tenantDto.tenants.Building.Zipcode);

                                            var fullAddress = parts.Any() ? string.Join(", ", parts) : "-";
                                        }
                                        @fullAddress
                                    </div>
                                </div>

                                @if (SelectedCaseTypeName == "NonPayment")
                                {
                                    <div class="row my-1">
                                        <!-- Left Column (Full Name) -->
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Tenant's Phone:</div>
                                                <div class="col-6">
                                                    @(!string.IsNullOrWhiteSpace(tenantDto.tenants.Phone) ? tenantDto.tenants.Phone : "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Right Column (Building Address) -->
                                        <div class="col-6">

                                            <div class="row ">
                                                <div class="col-auto fw-semibold">Tenants's Email:</div>
                                                <div class="col-4 ">@(!string.IsNullOrWhiteSpace(tenantDto.tenants.Email) ? tenantDto.tenants.Email : "N/A")</div>
                                            </div>
                                        </div>
                                    </div>
                                }


                                <div class="my-2">

                                    <div class="row my-1">
                                        <div class="col-12 fw-semibold required-label">
                                            Is the unit illegal? (check all that apply)
                                        </div>
                                    </div>

                                    <!-- Options Row -->
                                    <div class="row my-1">
                                        <div class="col-12 d-flex flex-wrap gap-3">
                                            <InputRadioGroup @bind-Value="tenantDto.IsUnitIllegalId" class="d-flex flex-wrap gap-3 ">
                                                @foreach (var option in IsUnitIllegalList)
                                                {
                                                    <div class="form-check form-check-inline">
                                                        <InputRadio class="form-check-input" Value="@option.Id" Disabled="true" />
                                                        <label class="form-check-label ms-1">@option.Name</label>
                                                    </div>
                                                }
                                            </InputRadioGroup>
                                        </div>
                                        @*  <div class="text-danger">
                                                        <ValidationMessage For="@(() => tenantDto.IsUnitIllegalId)" />
                                                    </div> *@
                                    </div>
                                </div>
                                <div class="my-2">
                                    <div class="row mb-2">
                                        <div class="col-4 fw-semibold">Tenant of record?</div>
                                        <div class="col-4 fw-semibold">Still in possession?</div>
                                        <div class="col-4 fw-semibold">Other Occupants?</div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-4 d-flex gap-3 align-items-center">
                                            <InputRadioGroup @bind-Value="tenantDto.TenantRecord">
                                                <div class="form-check">
                                                    <InputRadio class="form-check-input" Value="true" Disabled="true" />
                                                    <label class="form-check-label">Yes</label>
                                                </div>
                                                <div class="form-check">
                                                    <InputRadio class="form-check-input" Value="false" Disabled="true" />
                                                    <label class="form-check-label">No</label>
                                                </div>
                                            </InputRadioGroup>
                                        </div>

                                        <div class="col-4 d-flex gap-3 align-items-center">
                                            <InputRadioGroup @bind-Value="tenantDto.HasPossession">
                                                <div class="form-check">
                                                    <InputRadio class="form-check-input" Value="true" Disabled="true" />
                                                    <label class="form-check-label">Yes</label>
                                                </div>
                                                <div class="form-check">
                                                    <InputRadio class="form-check-input" Value="false" Disabled="true" />
                                                    <label class="form-check-label">No</label>
                                                </div>
                                            </InputRadioGroup>
                                        </div>

                                        <div class="col-4 d-flex gap-3 align-items-center">
                                            <InputRadioGroup @bind-Value="tenantDto.OtherOccupants">
                                                <div class="form-check">
                                                    <InputRadio class="form-check-input" Value="true" Disabled="true"/>
                                                    <label class="form-check-label">Yes</label>
                                                </div>
                                                <div class="form-check">
                                                    <InputRadio class="form-check-input" Value="false" Disabled="true" />
                                                    <label class="form-check-label">No</label>
                                                </div>
                                            </InputRadioGroup>
                                        </div>
                                    </div>
                                </div>
                                @if (SelectedCaseTypeName == "NonPayment")
                                {
                                    <div class="row align-items-center">
                                        <label class="col-auto fw-semibold mb-0">Does the tenant receive Scetiob 8 , Scrie/Drie Or other rental assistance ?</label>
                                        <div class="col d-flex gap-3">
                                            <InputRadioGroup @bind-Value="tenantDto.tenantReceive" class="d-flex gap-3">
                                                <div class="form-check">
                                                    <InputRadio class="form-check-input" Value="true" Disabled="true"/>
                                                    <label class="form-check-label">Yes</label>
                                                </div>
                                                <div class="form-check">
                                                    <InputRadio class="form-check-input" Value="false" Disabled="true" />
                                                    <label class="form-check-label">No</label>
                                                </div>
                                            </InputRadioGroup>
                                        </div>
                                    </div>
                                }

                            
                                    <div class="my-4">
                                        <div class="row mb-2">
                                            <div class="col-6 fw-semibold">Is there a written Lease??</div>
                                            <div class="col-6 fw-semibold">Renewal Status:</div>

                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-6 d-flex gap-3 align-items-center">
                                                <InputRadioGroup @bind-Value="tenantDto.WrittenLease" class="d-flex gap-3">
                                                    <div class="form-check">
                                                        <InputRadio class="form-check-input" Value="true" />
                                                        <label class="form-check-label">Yes</label>
                                                    </div>
                                                    <div class="form-check">
                                                        <InputRadio class="form-check-input" Value="false" />
                                                        <label class="form-check-label">No</label>
                                                    </div>
                                                </InputRadioGroup>
                                            </div>

                                            <div class="col-6 d-flex gap-3 align-items-center">
                                                <InputRadioGroup @bind-Value="tenantDto.RenewalStatusId" class="d-flex flex-wrap gap-3">
                                                    @foreach (var option in RenewalStatusList)
                                                    {
                                                        <div class="form-check form-check-inline">
                                                            <InputRadio class="form-check-input" Value="@option.Id" />
                                                            <label class="form-check-label ms-1">@option.Name</label>
                                                        </div>
                                                    }
                                                </InputRadioGroup>
                                            </div>
                                        </div>

                                    </div>
                             

                                <div class="row my-4">
                                    <!-- Monthly Rent -->
                                    <div class="col-md-4 d-flex align-items-center">
                                        <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Oral Start:</label>
                                        <InputDate class="form-control" style="width: 50%;" @bind-Value="tenantDto.OralStart" />
                                    </div>

                                    <!-- Tenant's Share -->
                                    <div class="col-md-4 d-flex align-items-center">
                                        <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Oral End:</label>
                                        <InputDate class="form-control" style="width: 50%;" @bind-Value="tenantDto.OralEnd" />
                                    </div>

                                    <!-- Social Services -->
                                    <div class="col-md-4 d-flex align-items-center">
                                        <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Date Tenant Moved:</label>
                                        <InputDate class="form-control" style="width: 50%;" @bind-Value="tenantDto.DateTenantMoved" />
                                    </div>
                                </div>
                                @if (SelectedCaseTypeName == "NonPayment")
                                {
                                <div class="row mb-3">
                                    <div class="col-auto">
                                        <label class="me-2 required-label">Additional Occupants</label>
                                    </div>

                                    <div class="col">
                                        @for (int i = 0; i < tenantDto.AdditionalOccupants.Count; i++)
                                        {
                                            var item = tenantDto.AdditionalOccupants[i];
                                            <div class="row mb-2" @key="i">

                                                <div class="col-auto">
                                                    <!-- Minus button (only when inputs visible) -->
                                                    @if (item.IsVisible)
                                                    {
                                                        <button type="button" class="btn btn-sm btn-danger"
                                                                @onclick="() => RemoveTenant(item)">
                                                            -
                                                        </button>
                                                    }
                                                </div>

                                                @if (item.IsVisible)
                                                {
                                                    <!-- Show input fields -->
                                                    <div class="col-auto">
                                                        <InputText class="form-control" placeholder="Enter Name"
                                                                   @bind-Value="item.Name" />
                                                    </div>
                                                    <div class="col-auto">
                                                        <InputText class="form-control" placeholder="Enter Relation"
                                                                   @bind-Value="item.Relation" />
                                                    </div>
                                                }
                                            </div>
                                        }

                                        <!-- Hamesha neeche + button -->
                                        <div class="row mt-2">
                                            <div class="col-auto">
                                                <button type="button" class="btn btn-sm btn-success"
                                                        @onclick="AddNewTenant">
                                                    + 
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                }
                                <div class="card p-4 mb-4 mt-2">
                                    <div class="my-3">
                                        <h5 class="fw-semibold fs-5">Rent Information</h5>
                                    </div>

                                    <div class="mx-2">

                                        <div class="row my-2 align-items-center">
                                            <div class="col-auto fw-semibold">Date rent is due each month/week:</div>
                                            <div class="col-3">
                                                <InputSelect class="form-select" @bind-Value="tenantDto.RentDueEachMonthOrWeekId">
                                                    <option value="">-- Select Date --</option>
                                                    @foreach (var l in DateRentList)
                                                    {
                                                        <option value="@l.Id">@l.Name</option>
                                                    }
                                                </InputSelect>
                                            </div>
                                        </div>

                                        <div class="row my-4">
                                            <!-- Monthly Rent -->
                                            <div class="col-md-4 d-flex align-items-center">
                                                <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Monthly Rent ($):</label>
                                                <InputNumber class="form-control" style="width: 100%;" @bind-Value="tenantDto.MonthlyRent" placeholder="Enter Rent" />
                                            </div>

                                            <!-- Tenant's Share -->
                                            <div class="col-md-4 d-flex align-items-center">
                                                <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Tenant's Share (%):</label>
                                                <InputNumber class="form-control" style="width: 100%;" @bind-Value="tenantDto.TenantShare" placeholder="Enter Share"/>
                                            </div>

                                            <!-- Social Services -->
                                            <div class="col-md-4 d-flex align-items-center">
                                                <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Social Services:</label>
                                                <InputText class="form-control" style="width: 100%;" @bind-Value="tenantDto.SocialServices" placeholder="Enter Social services"/>
                                            </div>
                                        </div>

                                        <div class="row my-4">
                                            <!-- Left Column -->
                                            <div class="col-md-6">
                                                <div class="row align-items-center">
                                                    <label class="col-auto fw-semibold mb-0">Last Month/Week Rent Paid:</label>
                                                    <div class="col">
                                                        <InputText class="form-control" @bind-Value="tenantDto.LastMonthWeekRentPaid" placeholder="Enter last paid" />
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Right Column -->
                                            <div class="col-md-6">
                                                <div class="row align-items-center">
                                                    <label class="col-auto fw-semibold mb-0">Total Rent Owed ($):</label>
                                                    <div class="col">
                                                        <InputNumber class="form-control" @bind-Value="tenantDto.TotalRentOwed" placeholder="Enter Total Rent"/>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row my-4 align-items-center">
                                            <!-- ERAP Payment Received? -->
                                            <div class="col-md-6">
                                                <div class="row align-items-center">
                                                    <label class="col-auto fw-semibold mb-0">ERAP Payment Received?</label>
                                                    <div class="col d-flex gap-3">
                                                        <InputRadioGroup @bind-Value="tenantDto.IsERAPPaymentReceived" class="d-flex gap-3">
                                                            <div class="form-check">
                                                                <InputRadio class="form-check-input" Value="true" />
                                                                <label class="form-check-label">Yes</label>
                                                            </div>
                                                            <div class="form-check">
                                                                <InputRadio class="form-check-input" Value="false" />
                                                                <label class="form-check-label">No</label>
                                                            </div>
                                                        </InputRadioGroup>
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- If yes, date received -->
                                            @if (tenantDto.IsERAPPaymentReceived == true)
                                            {
                                                <div class="col-md-6">
                                                    <div class="row align-items-center">
                                                        <label class="col-auto fw-semibold mb-0"> Date received:</label>
                                                        <div class="col">
                                                            <InputDate class="form-control" @bind-Value="tenantDto.ERAPPaymentReceivedDate" />
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>


                                        <div class="my-4">

                                            <div class="row my-1">
                                                <div class="col-12 fw-semibold required-label">
                                                    Tenancy Type
                                                </div>
                                            </div>

                                            <!-- Options Row -->
                                            <div class="row my-1">
                                                <div class="col-12 d-flex flex-wrap gap-3">
                                                    <InputRadioGroup @bind-Value="tenantDto.TenancyTypeId" class="d-flex flex-wrap gap-3">
                                                        @foreach (var option in TenancyTypeList)
                                                        {
                                                            <div class="form-check form-check-inline">
                                                                <InputRadio class="form-check-input" Value="@option.Id" />
                                                                <label class="form-check-label ms-1">@option.Name</label>
                                                            </div>
                                                        }
                                                    </InputRadioGroup>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row my-4">
                                            <!-- ERAP Payment Received? -->
                                            <div class="col-md-6">
                                                <div class="row align-items-center">
                                                    <label class="col-auto fw-semibold mb-0">Renewal Offered Or Refused</label>
                                                    <div class="col d-flex gap-3">
                                                        <InputRadioGroup @bind-Value="tenantDto.RenewalOffer" class="d-flex gap-3">
                                                            <div class="form-check">
                                                                <InputRadio class="form-check-input" Value="true" />
                                                                <label class="form-check-label">Yes</label>
                                                            </div>
                                                            <div class="form-check">
                                                                <InputRadio class="form-check-input" Value="false" />
                                                                <label class="form-check-label">No</label>
                                                            </div>
                                                        </InputRadioGroup>
                                                    </div>
                                                </div>
                                            </div>


                                        </div>
                                    </div>

                                </div>

                                </div>
                            </div>

                            <!-- SECTION 2: PROPERTY / BUILDING -->
                            @if (tenantDto.tenants.Building != null)
                            {

                                <div class="card shadow-sm p-4 mb-4">
                                    <div class="mb-3">
                                        <h6 class="fw-bold fs-4 ">Building Information</h6>
                                        <hr />
                                    </div>


                                    <div class="row my-2">
                                        <div class="col-auto fw-semibold">Building Address:</div>
                                        <div class="col">
                                        @{
                                            var partbuilding = new List<string>();

                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address1)) partbuilding.Add(tenantDto.tenants.Building.Address1);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address2)) partbuilding.Add(tenantDto.tenants.Building.Address2);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.City)) partbuilding.Add(tenantDto.tenants.Building.City);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.StateName)) partbuilding.Add(tenantDto.tenants.Building.StateName);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Zipcode)) partbuilding.Add(tenantDto.tenants.Building.Zipcode);

                                            var fullBuildingAddress = partbuilding.Any() ? string.Join(", ", partbuilding) : "-";
                                        }
                                        @fullBuildingAddress
                                        </div>
                                    </div>
                                    <div class="row my-2">
                                        <!-- MDR Number -->
                                        <div class="col-md-5">
                                            <div class="row align-items-center">
                                                <label class="col-auto fw-semibold mb-0">MDR Number:</label>
                                                <div class="col">
                                                  
                                                @(!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.MDRNumber) ? tenantDto.tenants.Building.MDRNumber : "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Number Of Units in the building -->
                                        <div class="col-md-5">
                                            <div class="row align-items-center">
                                                <label class="col-auto fw-semibold mb-0">Number Of Units in the building:</label>
                                                <div class="col">
                                                    @(!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.BuildingUnits) ? tenantDto.tenants.Building.BuildingUnits : "N/A")
                                                </div>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="row my-2">
                                        <!-- Label in full width -->
                                        <div class="col-12 fw-semibold required-label">
                                            Rent Regulation Status
                                        </div>

                                        <!-- Radio buttons in next row -->
                                        <div class="col-12">
                                            <InputRadioGroup @bind-Value="tenantDto.tenants.Building.RegulationStatusId" class="d-flex flex-wrap gap-3 required-label">
                                                @foreach (var option in RegulationList)
                                                {
                                                    <div class="form-check form-check-inline">
                                                        <InputRadio class="form-check-input" Value="@option.Id" Disabled=true />
                                                        <label class="form-check-label ms-1">@option.Name</label>
                                                    </div>
                                                }
                                            </InputRadioGroup>
                                        </div>
                                     
                                    </div>
                                @if (SelectedCaseTypeName == "NonPayment")
                                {
                                     <EditForm Model="@buildingSearchModel">
                                                  <div class="row mb-3 d-flex gap-2 align-items-center">
                                                       <div class="col-12">
                                      
                                           <div class="row">
                                               <div class="col-auto">
                                                   <label class=" col-form-label fw-semibold text-navy">List Other Properties</label>
                                               </div>
                                      
                                               <div class="col position-relative">
                                                   <input type="text"
                                                          class="form-control"
                                                          value="@searchbuildingText"
                                                          @oninput="HandleBuildingInput"
                                                          placeholder="Search another building"
                                                          style="width:50%" />
                                      
                                                   @if (filteredBuildingList?.Any() == true)
                                                   {
                                                       bool isCodeSearch = !string.IsNullOrWhiteSpace(searchbuildingText) &&
                                                                        (char.IsDigit(searchbuildingText[0]) || searchbuildingText.ToLower().StartsWith("t"));
                                      
                                                       <ul class="list-group position-absolute shadow-sm z-3 mt-1"
                                                           style="max-height: 200px; overflow-y: auto;width:49%;">
                                                                            @foreach (var item in filteredBuildingList)
                                                           {
                                                               <li class="list-group-item list-group-item-action"
                                                                   style="cursor: pointer;"
                                                                   @onclick="@(() => SelectBuilding(item.Id))">
                                                                   @if (isCodeSearch)
                                                                   {
                                                                       <span>@item.BuildingCode </span>
                                                                   }
                                                                   else
                                                                   {
                                                                      <span>(@item.BuildingCode)</span>
                                                                   }
                                                               </li>
                                                           }
                                                       </ul>
                                                   }
                                                   else if (hasSearched && !string.IsNullOrWhiteSpace(searchbuildingText))
                                                   {
                                                       <ul class="list-group position-absolute w-100 shadow-sm z-3 mt-1">
                                                           <li class="list-group-item text-muted">No matching Building found.</li>
                                                       </ul>
                                                   }
                                               </div>
                                           </div> 
                                      
                                       
                                                                  </div>
                                                             </div>
                                                     </EditForm>

                                    @if (selectedBuildings.Any())
                                    {
                                        @foreach (var b in selectedBuildings)
                                        {
                                            <div class="card shadow-sm p-4 mb-3">
                                                <div class="d-flex justify-content-between align-items-center mb-3">
                                                    <h6 class="fw-bold fs-4">Another Building Information</h6>
                                                     <button class="btn btn-sm btn-danger"
                                                            @onclick="@(() => RemoveBuilding(b.Id))">
                                                        Remove
                                                    </button>
                                                </div>
                                                <hr />

                                                <div class="mx-3">
                                                    <div class="row my-4">
                                                        <div class="col-md-5">
                                                            <div class="row align-items-center">
                                                                <label class="col-auto fw-semibold mb-0">MDR Number:</label>
                                                                <div class="col-4">@(!string.IsNullOrWhiteSpace(b.MDRNumber) ? b.MDRNumber : "N/A")</div>
                                                            </div>
                                                        </div>

                                                        <div class="col-md-7">
                                                            <div class="row align-items-center">
                                                                <label class="col-auto fw-semibold mb-0">Number Of Units:</label>
                                                                <div class="col-3">@(!string.IsNullOrWhiteSpace(b.BuildingUnits) ? b.BuildingUnits : "N/A")</div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="row my-4">
                                                        <div class="col-auto fw-semibold">Building Address:</div>
                                                        <div class="col-9">
                                                            @(string.IsNullOrWhiteSpace($"{b.Address1}{b.Address2}{b.City}{b.StateName}{b.Zipcode}")
                                                                                                ? "N/A"
                                                                                                : $"{b.Address1} {b.Address2} {b.City} {b.StateName} {b.Zipcode}")
                                </div>
                            </div>
                        </div>
                    </div>
                                        }
                                    }


                                }


                                </div>
                            }

                            <!-- SECTION 3: LANDLORD -->
                            @if (tenantDto.tenants.Landlord != null)
                            {

                                <div class="card shadow-sm p-4 mb-4">
                                    <div class="mb-3">
                                        <h6 class="fw-bold fs-4 ">LandLord  Information</h6>
                                        <hr />
                                    </div>
                                    <div class="row my-1">
                                        <!-- Full Name or Entity Name -->
                                        <div class="col-md-6">
                                            <div class="row ">
                                                <label class="col-auto fw-semibold mb-0">Full Name or Entity Name:</label>
                                                <div class="col ">
                                                    @($"{tenantDto.tenants.Landlord.FirstName} {tenantDto.tenants.Landlord.LastName}".Trim() ?? "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Mailing Address -->
                                        <div class="col-md-6">
                                            <div class="row ">
                                                <label class="col-auto fw-semibold mb-0">Mailing Address:</label>
                                                <div class="col ">
                                                @{
                                                    var partlandlord = new List<string>();

                                                    if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address1)) partlandlord.Add(tenantDto.tenants.Building.Address1);
                                                    if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address2)) partlandlord.Add(tenantDto.tenants.Building.Address2);
                                                    if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.City)) partlandlord.Add(tenantDto.tenants.Building.City);
                                                    if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.StateName)) partlandlord.Add(tenantDto.tenants.Building.StateName);
                                                    if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Zipcode)) partlandlord.Add(tenantDto.tenants.Building.Zipcode);

                                                    var fullLandlordAddress = partlandlord.Any() ? string.Join(", ", partlandlord) : "N/A";
                                                }
                                                @fullLandlordAddress
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row my-2">
                                        <!-- Phone Number -->
                                        <div class="col-md-6">
                                            <div class="row align-items-center">
                                                <label class="col-auto fw-semibold mb-0">Phone Number:</label>
                                                <div class="col ">
                                                    @(!string.IsNullOrWhiteSpace(tenantDto.tenants.Landlord.Phone) ? tenantDto.tenants.Landlord.Phone : "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Email -->
                                        <div class="col-md-6">
                                            <div class="row align-items-center">
                                                <label class="col-auto fw-semibold mb-0">Email:</label>
                                                <div class="col">
                                                    @(!string.IsNullOrWhiteSpace(tenantDto.tenants.Landlord.Email) ? tenantDto.tenants.Landlord.Email : "N/A")
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row my-2">
                                        <!-- Label full-width -->
                                        <div class="col-12 fw-semibold mb-1 required-label">Are You the:</div>

                                        <!-- Input radios in next row -->
                                        <div class="col-12 d-flex flex-wrap gap-3">
                                            <InputRadioGroup @bind-Value="tenantDto.tenants.Landlord.LandlordTypeId" class="d-flex flex-wrap gap-3 ">
                                                @foreach (var option in LandLordTypeList)
                                                {
                                                    <div class="form-check form-check-inline">
                                                        <InputRadio class="form-check-input" Value="@option.Id" Disabled=true />
                                                        <label class="form-check-label ms-1">@option.Name</label>
                                                    </div>
                                                }
                                            </InputRadioGroup>
                                        </div>
                                        @*   <div class="text-danger">
                                                        <ValidationMessage For="@(() => tenantDto.tenants.Landlord.LandlordTypeId)" />
                                                    </div> *@
                                    </div>

                                    <div class="row my-2">
                                        <div class="col-4 fw-semibold">If purchased at foreClosure : </div>
                                <div class="col-4">
                                    @(tenantDto.tenants.Landlord.DateOfRefreeDeed != default
                                                                ? tenantDto.tenants.Landlord.DateOfRefreeDeed.ToString("MM/dd/yyyy")
                                                                : "N/A")
                        </div>

                                    </div>

                                    @if (SelectedCaseTypeName == "NonPayment")
                                    {
                                        <EditForm Model="@legalcaseDto">
                                            @* <DataAnnotationsValidator /> *@


                                                     <div class="card p-4 mb-4 my-4">
                                                <div class="mb-3">
                                                    <h6 class="fw-bold fs-4 ">Attorney Information</h6>
                                                </div>
                                                <div class="mx-3">
                                                    <div class="row mb-2 my-4">
                                                        <div class="col-6">
                                                            <div class="row d-flex align-items-center">
                                                                <div class="col-auto fw-semibold">Attorney Name:</div>
                                                                <div class="col">
                                                                    <InputText class="form-control" @bind-Value="tenantDto.Attrney"  placeholder="Enter Attorney"/>
                                                                </div>
                                                            </div>
                                                            </div> 

                                                        <div class="col-6">
                                                                <div class="row d-flex align-items-center">
                                                                <div class="col-auto fw-semibold">Attorney Contact Info:</div>
                                                                <div class="col">
                                                                        <InputText class="form-control" @bind-Value="tenantDto.AttrneyContactInfo" placeholder="Enter  Contact" />
                                                                </div>
                                                            </div>
                                                        </div>

                                                       
                                                    </div>

                                                    <div class="row mb-2 my-4">
                                                            <div class="col-6">
                                                                <div class="row d-flex align-items-center">
                                                                    <div class="col-4 fw-semibold" style="margin-right:10px">Firm:</div>
                                                                    <div class="col">
                                                                <InputText class="form-control" @bind-Value="tenantDto.Firm" placeholder="Enter Firm" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                    </div>
                                                </div>
                                            </div>

                                            @* <button type="submit" class="btn btn-primary">Save</button> *@
                                        </EditForm>
                                    }



                                </div>
                            }
                           
                        </div>
                 
           

                    <EditForm Model="@tenantDto" OnValidSubmit="Next" Id="ReasonForm">
                        <DataAnnotationsValidator />
                        <div class="row my-2">
                            <div class="col-md-12">
                                <InputRadioGroup @bind-Value="tenantDto.ReasonHoldoverId" class="mb-3 ">
                                    <div class="row align-items-start" >
                                        <div class="col-auto">
                                            <label class="form-label mb-0 required-label" style="margin-top:5px">Reason Holdover:</label>
                                        </div>
                                        <div class="col">
                                            <div class="d-flex flex-wrap align-items-start" style="margin-left:10px">
                                                @foreach (var role in ReasonHoldoverList)
                                                {
                                                    <div class="d-flex align-items-start " @key="role.Id">
                                                        <div class="form-check d-flex align-items-center ms-1">
                                                            <InputRadio class="form-check-input me-1" Value="@role.Id" />
                                                            <label class="form-check-label ms-1" style="margin-top:5px">
                                                                @role.Name
                                                            </label>
                                                        </div>

                                                        @if (tenantDto.ReasonHoldoverId == role.Id && role.Name == "Other")
                                                        {
                                                            <InputText class="form-control"
                                                                       placeholder="Please specify"
                                                                       style="max-width: 200px; height: 36px;"
                                                                       @bind-Value="tenantDto.ReasonDescription" />
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </InputRadioGroup>
                                <ValidationMessage For="@(() => tenantDto.ReasonHoldoverId)" />

                            </div>


                        </div>
                        <div class="row mb-5">
                            <div class="col-md-2 ">
                                <label class="form-label fw-semibold ">Explain:</label>

                            </div>

                            <div class="col-md-10">

                                <InputTextArea class="form-control" @bind-Value="tenantDto.ExplainDescription" placeholder="Enter Explanation" style="width: 100%;" />
                            </div>

                        </div>
                        @* <button type="submit" class="btn bg-gold text-white" style="margin-top:-25px;  display:flex;  float:right">Next →</button> *@
                    </EditForm>
                }

            </div>
        }
       
        @if (currentStep == 1)
        {
            <div class="mx-auto p-4 border rounded shadow-sm bg-white">
                <h5 class="text-center text-navy fs-3 fw-bold">Summary View</h5>
                <hr class="border-gold mb-4" />

                @if (tenantDto.tenants != null)
                {
                    <div class="row mt-4">
                        <div class="col-md-12">

                            <!-- SECTION 1: TENANT INFORMATION -->
                            <div class="card shadow-sm p-4 mb-4">
                                <div class="mb-3">
                                    <h6 class="fw-bold fs-4">Tenant Information</h6>
                                    <hr>
                                </div>

                                <div class="row mb-2 my-1">
                                    <div class="col-6">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Tenant's Full Name(s):</div>
                                            <div class="col">
                                                @(string.IsNullOrWhiteSpace($"{tenantDto.tenants.FirstName} {tenantDto.tenants.LastName}".Trim()) ? "N/A" : $"{tenantDto.tenants.FirstName} {tenantDto.tenants.LastName}")
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-6">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Unit / Apartment Number:</div>
                                            <div class="col">
                                                @(string.IsNullOrWhiteSpace(tenantDto.tenants.UnitOrApartmentNumber) ? "N/A" : tenantDto.tenants.UnitOrApartmentNumber)
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row mb-2 my-2">
                                    <div class="col">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Building Address:</div>
                                            <div class="col">
                                               @{
                                            var part = new List<string>();

                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address1)) part.Add(tenantDto.tenants.Building.Address1);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address2)) part.Add(tenantDto.tenants.Building.Address2);
                                                    if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.City)) part.Add(tenantDto.tenants.Building.City);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.StateName)) part.Add(tenantDto.tenants.Building.StateName);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Zipcode)) part.Add(tenantDto.tenants.Building.Zipcode);

                                                    var fullAddress = part.Any() ? string.Join(", ", part) : "-";
                                        }
                                        @fullAddress
                                        </div>
                                    </div>
                                </div>

                                    <div class="col-6">
                                        <div class="row">
                                            <div class="col-5 fw-semibold">Is the unit illegal?</div>
                                            <div class="col-7">
                                                @(IsUnitIllegalList.FirstOrDefault(x => x.Id == tenantDto.IsUnitIllegalId)?.Name ?? "N/A")
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @if (SelectedCaseTypeName == "NonPayment")
                                {
                                    <div class="row my-1">
                                        <!-- Left Column (Full Name) -->
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Tenant's Phone:</div>
                                                <div class="col-6">
                                                    @($"{tenantDto.tenants.Phone}".Trim() ?? "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Right Column (Building Address) -->
                                        <div class="col-6">

                                            <div class="row ">
                                                <div class="col-auto fw-semibold">Tenants's Email:</div>
                                                <div class="col-4 ">@(!string.IsNullOrWhiteSpace(tenantDto.tenants.Email) ? tenantDto.tenants.Email : "N/A")</div>
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="row mb-2 my-2">
                                    <div class="col-4">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Tenant of record?</div>
                                            <div class="col">
                                                @(tenantDto.TenantRecord == true ? "Yes" : tenantDto.TenantRecord == false ? "No" : "N/A")
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-4">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Other Occupants?</div>
                                            <div class="col">
                                                @(tenantDto.OtherOccupants == true ? "Yes" : tenantDto.OtherOccupants == false ? "No" : "N/A")
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-4">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Still in possession?</div>
                                            <div class="col">
                                                @(tenantDto.HasPossession == true ? "Yes" : tenantDto.HasPossession == false ? "No" : "N/A")
                                            </div>
                                        </div>
                                    </div>
                                </div>

                             @if (SelectedCaseTypeName == "NonPayment")
                                {
                                    <div class="row mb-2 my-4">
                                        <div class="col-12">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Does the tenant receive Section 8, SCRIE/DRIE or other rental assistance?</div>
                                                <div class="col">
                                                    @(tenantDto.tenantReceive == true ? "Yes" : tenantDto.tenantReceive == false ? "No" : "N/A")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="row my-1">
                                    <!-- Left Column (Full Name) -->
                                    <div class="col-6">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Is there a written Lease?</div>
                                            <div class="col">
                                                @(legalcaseDto.WrittenLease == true ? "Yes" : legalcaseDto.WrittenLease == false ? "No" : "N/A")
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Right Column (Building Address) -->
                                    <div class="col-6">

                                        <div class="row ">
                                            <div class="col-auto fw-semibold">Renewal Status:</div>
                                            <div class="col">
                                                @(RenewalStatusList.FirstOrDefault(x => x.Id == legalcaseDto.RenewalStatusId)?.Name ?? "N/A")
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row my-4">
                                    <!-- Monthly Rent -->
                                    <div class="col-md-4 d-flex align-items-center">
                                        <div class="col-auto fw-semibold">Oral Start:</div>
                                        <div class="col"> @legalcaseDto.OralStart</div>
                                    </div>

                                    <!-- Tenant's Share -->
                                    <div class="col-md-4 d-flex align-items-center">

                                        <div class="col-auto fw-semibold">Oral End:</div>
                                        <div class="col"> @legalcaseDto.OralEnd</div>
                                    </div>

                                    <!-- Social Services -->
                                    <div class="col-md-4 d-flex align-items-center">
                                        <div class="col-auto">Date Tenant Moved</div>
                                        <div class="col"> @legalcaseDto.DateTenantMoved</div>
                                    </div>
                                </div>

                                @if (SelectedCaseTypeName == "NonPayment")
                                {

                                <div class="row mt-4">
                                    <div class="col-auto fw-semibold">
                                        <div class="col-auto">Additional Occupants:</div>


                                    </div>
                                    <div class="col-5">
                                        @if (tenantDto.AdditionalOccupants.Any(o => o.IsVisible))
                                        {
                                            <table class="table table-bordered table-sm">
                                                <thead>
                                                    <tr>
                                                        <th>Name</th>
                                                        <th>Relation</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var occ in tenantDto.AdditionalOccupants.Where(o => o.IsVisible))
                                                    {
                                                        <tr>
                                                            <td>@occ.Name</td>
                                                            <td>@occ.Relation</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                        else
                                        {
                                            <p class="text-muted">No additional tenants added yet.</p>
                                        }
                                    </div>
                                </div>
                                }
                            <!-- Rent Information -->
                            <div class="card p-4 mb-4 my-4">
                                <div class="mb-3">
                                    <h6 class="fw-bold fs-4">Rent Information</h6>
                                </div>
                                <div class="mx-3">
                                    <div class="row mb-2 my-4">
                                        <div class="col-4">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Monthly Rent ($):</div>
                                                <div class="col">@(tenantDto.MonthlyRent?.ToString() ?? "N/A")</div>
                                            </div>
                                        </div>

                                        <div class="col-4">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Rent Due (Month/Week):</div>
                                                    <div class="col">
                                                        @(DateRentList.FirstOrDefault(x => x.Id == tenantDto.RentDueEachMonthOrWeekId)?.Name ?? "N/A")
                                                    </div>
                                            </div>
                                        </div>

                                        <div class="col-4">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Tenant's Share ($):</div>
                                                <div class="col">@(tenantDto.TenantShare?.ToString() ?? "N/A")</div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row mb-2 my-4">
                                        <div class="col-4">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Social Services:</div>
                                                <div class="col">@(string.IsNullOrWhiteSpace(tenantDto.SocialServices) ? "N/A" : tenantDto.SocialServices)</div>
                                            </div>
                                        </div>

                                        <div class="col-3">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Tot. Rent Owed ($):</div>
                                                <div class="col">@(tenantDto.TotalRentOwed?.ToString() ?? "N/A")</div>
                                            </div>
                                        </div>

                                        <div class="col-5">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Last Rent Paid (Month/Week):</div>
                                                <div class="col">@(string.IsNullOrWhiteSpace(tenantDto.LastMonthWeekRentPaid) ? "N/A" : tenantDto.LastMonthWeekRentPaid)</div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row mb-2 my-4">
                                        <div class="col-4">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">ERAP Payment Received:</div>
                                                <div class="col">
                                                    @(tenantDto.IsERAPPaymentReceived == true ? "Yes" : tenantDto.IsERAPPaymentReceived == false ? "No" : "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-4">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">ERAP Payment Date:</div>
                                                <div class="col">@((tenantDto.ERAPPaymentReceivedDate?.ToString("MM/dd/yyyy")) ?? "N/A")</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                          <div class="card shadow-sm p-4 mb-3">
                            <div class=" mb-3">
                                <h6 class="fw-bold fs-4">Building Information</h6>
                                <hr />
                            </div>

                            <div class="row mb-2 my-4">
                                <div class="col-auto fw-semibold">Building Address:</div>
                                <div class="col">
                                        @{
                                            var partbuilding = new List<string>();

                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address1)) partbuilding.Add(tenantDto.tenants.Building.Address1);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address2)) partbuilding.Add(tenantDto.tenants.Building.Address2);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.City)) partbuilding.Add(tenantDto.tenants.Building.City);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.StateName)) partbuilding.Add(tenantDto.tenants.Building.StateName);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Zipcode)) partbuilding.Add(tenantDto.tenants.Building.Zipcode);

                                            var fullBuildingAddress = partbuilding.Any() ? string.Join(", ", partbuilding) : "-";
                                        }
                                        @fullBuildingAddress
                                </div>
                            </div>

                          


                                <div class="row mb-2 my-4">
                                    <div class="col-4">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">MDR Number:</div>
                                            <div class="col">@(tenantDto.tenants.Building.MDRNumber ?? "N/A")</div>
                                        </div>
                                    </div>

                                    <div class="col-4">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Number of Units:</div>
                                            <div class="col">@(tenantDto.tenants.Building.BuildingUnits ?? "N/A")</div>
                                        </div>
                                    </div>

                                    <div class="col-4">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Regulation Status:</div>
                                            <div class="col">
                                                @(RegulationList.FirstOrDefault(x => x.Id == tenantDto.tenants.Building.RegulationStatusId)?.Name ?? "-")
                                            </div>
                                        </div>
                                    </div>
                                </div>
                        @if (SelectedCaseTypeName == "NonPayment")
                                {
                                    @if (selectedBuildings.Any())
                                    {
                                        @foreach (var b in selectedBuildings)
                                        {
                                            <div class="card shadow-sm p-4 mb-3">
                                                <div class="d-flex justify-content-between align-items-center mb-3">
                                                    <h6 class="fw-bold fs-4">Another Building Information</h6>
                                                    @*  <button class="btn btn-sm btn-danger"
                                                            @onclick="@(() => RemoveBuilding(b.Id))">
                                                        Remove
                                                    </button> *@
                                                </div>
                                                <hr />

                                                <div class="mx-3">
                                                    <div class="row my-4">
                                                        <div class="col-md-5">
                                                            <div class="row align-items-center">
                                                                <label class="col-auto fw-semibold mb-0">MDR Number:</label>
                                                                <div class="col-4">@(!string.IsNullOrWhiteSpace(b.MDRNumber) ? b.MDRNumber : "N/A")</div>
                                                            </div>
                                                        </div>

                                                        <div class="col-md-7">
                                                            <div class="row align-items-center">
                                                                <label class="col-auto fw-semibold mb-0">Number Of Units:</label>
                                                                <div class="col-3">@(!string.IsNullOrWhiteSpace(b.BuildingUnits) ? b.BuildingUnits : "N/A")</div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="row my-4">
                                                        <div class="col-auto fw-semibold">Building Address:</div>
                                                        <div class="col-9">
                                                            @(string.IsNullOrWhiteSpace($"{b.Address1}{b.Address2}{b.City}{b.StateName}{b.Zipcode}")
                                                                                                    ? "N/A"
                                                                                                    : $"{b.Address1} {b.Address2} {b.City} {b.StateName} {b.Zipcode}")
                                    </div>
                                </div>
                            </div>
                        </div>
                                                }
                                    }


                                }

                        </div>

                        <!-- SECTION 3: LANDLORD INFO -->
                        <div class="card shadow-sm p-4 mb-4">
                            <div class="mb-3">
                                <h6 class="fw-bold fs-4">Landlord Information</h6>
                                <hr />
                            </div>

                            <div class="row mb-2">
                                <div class="col-4">
                                    <div class="row">
                                        <div class="col-auto fw-semibold">Full Name :</div>
                                        <div class="col">
                                            @(string.IsNullOrWhiteSpace($"{tenantDto.tenants.Landlord.FirstName} {tenantDto.tenants.Landlord.LastName}".Trim()) ? "N/A" : $"{tenantDto.tenants.Landlord.FirstName} {tenantDto.tenants.Landlord.LastName}")
                                        </div>
                                    </div>
                                </div>

                                <div class="col-3">
                                    <div class="row">
                                        <div class="col-auto fw-semibold">Phone:</div>
                                        <div class="col">@(string.IsNullOrWhiteSpace(tenantDto.tenants.Landlord.Phone) ? "N/A" : tenantDto.tenants.Landlord.Phone)</div>
                                    </div>
                                </div>

                                <div class="col-5">
                                    <div class="row">
                                        <div class="col-auto fw-semibold">Email:</div>
                                        <div class="col">@(string.IsNullOrWhiteSpace(tenantDto.tenants.Landlord.Email) ? "N/A" : tenantDto.tenants.Landlord.Email)</div>
                                    </div>
                                </div>
                            </div>

                            <div class="row my-2">
                                <div class="col-auto fw-semibold">Mailing Address:</div>
                                <div class="col">
                                        @{
                                            var partlandlord = new List<string>();

                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address1)) partlandlord.Add(tenantDto.tenants.Building.Address1);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Address2)) partlandlord.Add(tenantDto.tenants.Building.Address2);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.City)) partlandlord.Add(tenantDto.tenants.Building.City);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.StateName)) partlandlord.Add(tenantDto.tenants.Building.StateName);
                                            if (!string.IsNullOrWhiteSpace(tenantDto.tenants.Building.Zipcode)) partlandlord.Add(tenantDto.tenants.Building.Zipcode);

                                            var fullLandlordAddress = partlandlord.Any() ? string.Join(", ", partlandlord) : "N/A";
                                        }
                                        @fullLandlordAddress
                                </div>
                            </div>

                                <div class="row mb-2">
                                    <div class="col-4">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Are You the:</div>
                                            <div class="col">
                                                @(LandLordTypeList.FirstOrDefault(x => x.Id == tenantDto.tenants.Landlord.LandlordTypeId)?.Name ?? "N/A")
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-8">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Date of Foreclosure Purchase:</div>
                                            <div class="col">
                                                @(tenantDto.tenants.Landlord.DateOfRefreeDeed != null ? tenantDto.tenants.Landlord.DateOfRefreeDeed.ToString("MM/dd/yyyy") : "N/A")
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                         @if (SelectedCaseTypeName == "NonPayment")
                            {
                                <div class="card p-4 mb-4 my-4">
                                    <div class="mb-3">
                                        <h6 class="fw-bold fs-4">Attorney Information</h6>
                                    </div>
                                    <div class="mx-3">
                                        <div class="row mb-2 my-4">
                                            <div class="col-4">
                                                <div class="row">
                                                    <div class="col-auto fw-semibold">Attorney Name:</div>
                                                    <div class="col">@(string.IsNullOrWhiteSpace(tenantDto.Attrney) ? "N/A" : tenantDto.Attrney)</div>
                                                </div>
                                            </div>

                                            <div class="col-4">
                                                <div class="row">
                                                    <div class="col-auto fw-semibold">Attorney Contact Info:</div>
                                                    <div class="col">@(string.IsNullOrWhiteSpace(tenantDto.AttrneyContactInfo) ? "N/A" : tenantDto.AttrneyContactInfo)</div>
                                                </div>
                                            </div>

                                            <div class="col-4">
                                                <div class="row">
                                                    <div class="col-auto fw-semibold">Firm:</div>
                                                    <div class="col">@(string.IsNullOrWhiteSpace(tenantDto.Firm) ? "N/A" : tenantDto.Firm)</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                       
                            </div>
                    </div>
                }

                <div class="row mb-2">
                    <div class="row my-4 mb-2 align-items-center">
                        <div class="col-auto fw-bold">Reason Holdover:</div>
                        <div class="col">
                            @(ReasonHoldoverList.FirstOrDefault(x => x.Id == tenantDto.ReasonHoldoverId)?.Name ?? "N/A")
                        </div>
                    </div>

                    @if (ReasonHoldoverList.FirstOrDefault(x => x.Id == tenantDto.ReasonHoldoverId)?.Name == "Other")
                    {
                        <div class="row my-4 mb-2 align-items-center">
                            <div class="col-auto fw-semibold">Other Reason:</div>
                            <div class="col">
                                @(string.IsNullOrWhiteSpace(tenantDto.ReasonDescription) ? "N/A" : tenantDto.ReasonDescription)
                            </div>
                        </div>
                    }

                    <div class="row my-4 mb-2 align-items-center">
                        <div class="col-auto fw-semibold">Explain:</div>
                        <div class="col">
                            @(string.IsNullOrWhiteSpace(tenantDto.ExplainDescription) ? "N/A" : tenantDto.ExplainDescription)
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (currentStep == 2)
        {
            <div class="mx-auto p-4 border rounded shadow-sm bg-white">
                <h5 class="text-center text-navy fs-3 fw-bold">Generate Forms</h5>
                <hr class="border-gold mb-4" />

                <EditForm Model="@noticeModel" >
                    <div class="row mb-3 align-items-center">
                        <div class="col-12">
                            <div class="row align-items-center">
                                <div class="col-auto">
                                    <label class="col-form-label fw-semibold text-navy">Form Type</label>
                                </div>

                                <!-- Dropdown + Button Side by Side -->
                                <div class="col d-flex align-items-center gap-3">
                                    <select class="form-select w-auto" @bind="noticeModel.FormTypeId">
                                        <option value="">-- Select Form Type --</option>
                                        @foreach (var formType in FilteredFormTypeList)
                                        {
                                            <option value="@formType.Id">@formType.Name</option>
                                        }
                                    </select>

                                    <!-- Generate Notice Button -->
                                    <button type="submit" class="btn bg-navy text-white" @onclick="GenerateNotice">
                                        Generate 
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </EditForm>
               

                <div style="max-height: 400px; overflow-y: auto; overflow-x: auto;">
                    <h5 class="text-center text-navy fs-3 fw-bold">Case Activities</h5>
                    <hr class="border-gold mb-4" />

                    <table class="table table-bordered mt-4" style="min-width: 800px;">
                        <thead class="table-light">
                            <tr>
                                <th>Id</th>
                                <th>Form Type</th>
                                <th>Created Date</th>
                                <th class="sticky">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (caseFormDto != null && caseFormDto.Any())
                            {
                                int index = 1;
                                @foreach (var form in caseFormDto)
                                {
                                    <tr>
                                        <td>@index</td>
                                        <td>@form.FormTypeName</td>
                                        <td>@form.CreatedOn.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            <!-- View Icon -->
                                            <button class="btn btn-link p-0" title="View"
                                                    @onclick="@(() => ViewPdf(form.File))">
                                                <i class="fa fa-eye text-primary" style="font-size:18px;"></i>
                                            </button>


                                            <!-- Download Icon -->
                                            <button class="btn btn-link p-0" title="Download" @onclick="() => DownloadPdf(form.Id)" style="margin-left:10px;">
                                                <i class="fa fa-download text-success" style="font-size:18px;"></i>
                                            </button>
                                        </td>
                                    </tr>
                                    index++;
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="text-muted text-center">No notices generated yet.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>
        }

    </div>
</div>



<!-- bottom Button Group -->
<div class="container my-4" style="position:fixed ; bottom:-17px;">
    <div>
        <hr />
    </div>
    <div class="container-fluid d-flex justify-content-between align-items-center">
        <!-- Left Button -->
        <button class="btn bg-navy text-white" @onclick="Back" disabled="@(currentStep == 0)">← Back</button>

        <!-- Right Buttons -->
        <div class="d-flex gap-2" style="position:fixed; right:40px">
            @if (currentStep < lastStep && currentStep != 1)
            {
                <button class="btn btn-outline-warning" @onclick="ResetStep">Reset</button>
                <button class="btn bg-gold text-white" disabled="@IsNextDisabled" form="ReasonForm">Next →</button>
            }
            @if (currentStep == 1)
            {
                <button class="btn btn-success" @onclick="Submit">Submit & Next</button>
            }
        </div>
    </div>
</div>


@code {
    [Parameter]
    public Guid caseId { get; set; }
    [Parameter] public string ClientId { get; set; }
    private GenrateNoticeModel noticeModel = new GenrateNoticeModel();
    private CreateToEditLegalCaseModel legalcaseDto = new CreateToEditLegalCaseModel();
    int currentStep = 0;
    int lastStep = 2;
    private EditContext editContext;
    // Used for conditional rendering
    private bool hasSearched = false;
    private string searchbuildingText = "";
    private List<EditToBuildingDto> filteredBuildingList = new();
    private TenantSearchModel tenantSearchModel = new();
    private BuildingSearchModel buildingSearchModel = new();
    private string searchtenantText = "";
    private List<EditToTenantDto> filteredTenantList = new();
    private CreateToLandLordDto? selectedLandlord;
    private List<EditToBuildingDto> selectedBuildings = new();
    private CreateToTenantDto? selectedTenant;
    private bool isLandlordSelected = false;
    private bool isBuildingSelected = false;
    private bool isTenantSelected = false;
    private LandlordWithBuildings? landlordDetails;
    private BuildingWithTenant? buildingDetails;
    private EditToTenantDto? TenantDetails;

    private CreateToEditLegalCaseModel tenantDtos = new CreateToEditLegalCaseModel();
    private EditToLandlordDto landLordDto = new EditToLandlordDto();
    private EditToBuildingDto apartmentDto = new EditToBuildingDto();

    private EditToClientDto clientDto = new EditToClientDto();

    private List<CreateToTenantDto> matchedTenants = new List<CreateToTenantDto>();
    private List<CreateToLandLordDto> matchedLandLords = new List<CreateToLandLordDto>();
    private List<CreateToClientDto> matchedClients = new List<CreateToClientDto>();
    private List<CreateToBuildingDto> matchedBuilding = new List<CreateToBuildingDto>();
    private bool showSuggestions = false;

    public List<ReasonHoldover> ReasonHoldoverList = new();
    public List<IsUnitIllegal> IsUnitIllegalList = new();
    private List<RegulationStatus> RegulationList = new();
    private List<LandlordType> LandLordTypeList = new();
    private List<TenancyType> TenancyTypeList = new();
    private List<FormAddEditViewModelDto> FilteredFormTypeList = new();
    private List<RenewalStatus> RenewalStatusList = new();

    private bool isLoading = true;
    private bool isSubmitting = true;
    private List<CaseType> CaseTypeList = new();
    private List<DateRent> DateRentList = new();
    private List<GenrateNoticeModel> caseFormDto = new();

    private string? loggedInUserId;
    private bool isAdmin = false;


    private Guid? SelectedTenantId;
 
    [Parameter] public Guid ?CurrentCaseId { get; set; }

    
private async Task LoadCaseForms()
{
        caseFormDto = await _CaseFormService.GetCaseFormsByCaseId(CurrentCaseId.Value , loggedInUserId , isAdmin);
}


    private CreateToEditLegalCaseModel? tenantDto;
    private string SelectedCaseTypeName =>
       CaseTypeList.FirstOrDefault(x => x.Id == legalcaseDto.CaseTypeId)?.Name;

    protected override async Task OnInitializedAsync()
    {
        spinnerservice.Show();
        legalcaseDto = new CreateToEditLegalCaseModel();
        editContext = new EditContext(legalcaseDto);
        ReasonHoldoverList = await ReasonHoldoverRepository.GetAllTReasonHoldover();
        IsUnitIllegalList = await UnitIllegalRepository.GetAllUnitIllegal();
        RegulationList = await RegulationStatusRepository.GetAllRegulationStatus();
        LandLordTypeList = await LandlordTypeRepository.GetAllLandLordType();
        TenancyTypeList = await TenancyTypeRepository.GetAllTenancyType();
        RenewalStatusList = await RenewalStatusRepository.GetAllRenewalStatus();
        DateRentList = await DateRentRepository.GetAllDateRent();
        await Task.Delay(500);
        await LoadDataAsync();

        spinnerservice.Hide();

         occupants.Add(new AdditionalOccupantDto());
    }

    List<string> stepTitles = new() {
        "Edit", "Review & Submit" , "Genrate Forms"

    };


    private async Task OnCaseTypeChanged(ChangeEventArgs e)
    {
        if (Guid.TryParse(e.Value?.ToString(), out var selectedId))
        {
            legalcaseDto.CaseTypeId = selectedId;

            // Sirf is case type ke form types API se laa rahe hain
            FilteredFormTypeList = await FormTypesRepository.GetFormTypesByCaseTypeAsync(selectedId);

            // Reset selected form type
            noticeModel.FormTypeId = Guid.Empty;

            // UI refresh
            StateHasChanged();
        }
    }

    private List<AdditionalOccupantDto> occupants = new()
    {
        new AdditionalOccupantDto()
    };

    private void AddNewTenant()
    {
        tenantDto.AdditionalOccupants.Add(new AdditionalOccupantDto
        {
            IsVisible = true
        });
    }

    private void RemoveTenant(AdditionalOccupantDto current)
    {
        if (tenantDto.AdditionalOccupants.Contains(current))
        {
            tenantDto.AdditionalOccupants.Remove(current);
        }

        // Agar list empty ho gayi toh ek fresh row add karo
        if (!tenantDto.AdditionalOccupants.Any())
        {
            tenantDto.AdditionalOccupants.Add(new AdditionalOccupantDto { IsVisible = true });
        }
    }


    private async Task OnFormTypeChanged(ChangeEventArgs e)
    {
        noticeModel.FormTypeId = Guid.Parse(e.Value.ToString());
    }



    private async Task GenerateNotice()
    {
        spinnerservice.Show();
        if (CurrentCaseId.HasValue && CurrentCaseId.Value != Guid.Empty && noticeModel.FormTypeId.HasValue)
        {
            var success = await CaseFormRepository.GenerateNoticeAsync(
                CurrentCaseId.Value,
                noticeModel.FormTypeId.Value,
                 Guid.Parse(loggedInUserId)
            );

            if (success)
            {
                await LoadCaseForms();
            }
        }
        else
        {
            
        }
        spinnerservice.Hide();
    }

     private void ViewPdf(string filePath)
    {
        if (!string.IsNullOrWhiteSpace(filePath))
        {
            var fullUrl = nav.BaseUri.TrimEnd('/') + filePath;
            nav.NavigateTo(fullUrl, forceLoad: true);
        }
    }

    private async Task DownloadPdf(Guid id)
    {
        spinnerservice.Show();
        var pdfBytes = await CaseFormRepository.GetPdfBytesAsync(id);

        if (pdfBytes != null)
        {
            var fileName = $"Form_{id}.pdf";
            await DownloadFileService.DownloadFile(fileName, pdfBytes, "application/pdf");
        }
        spinnerservice.Hide();
    }



    private async Task LoadDataAsync()
    {
       
        CaseTypeList = await CaseTypeRepository.GetAllCaseType() ?? new List<CaseType>();

       
        if (caseId != Guid.Empty)
        {
           
            legalcaseDto = await _legalCaseService.GetByIdAsync(caseId);
            tenantDto = legalcaseDto ?? new CreateToEditLegalCaseModel();
            tenantDto.SelectedTenantId = legalcaseDto?.TenantId ?? Guid.Empty;

            selectedBuildings = legalcaseDto?.OtherPropertiesBuildings?.ToList()
                                ?? new List<EditToBuildingDto>();
            CurrentCaseId = caseId;

        
        }
        else
        {
            
            legalcaseDto = new CreateToEditLegalCaseModel();
            tenantDto = new CreateToEditLegalCaseModel();
            selectedBuildings = new List<EditToBuildingDto>();

            // Default case type Holdover set kar do
            var holdoverCase = CaseTypeList.FirstOrDefault(x => x.Name == "Holdover");
            if (holdoverCase != null)
            {
                legalcaseDto.CaseTypeId = holdoverCase.Id;
            }

            // CurrentCaseId ko null rakhna hi better hai is case me
            CurrentCaseId = null;
        }

        // Tenant select flag
        isTenantSelected = true;
    }


    private async Task HandleBuildingInput(ChangeEventArgs e)
    {
        searchbuildingText = e?.Value?.ToString() ?? "";
        hasSearched = true;

        if (!string.IsNullOrWhiteSpace(searchbuildingText) && tenantDto.tenants.Landlord != null)
        {
            filteredBuildingList = await _buildingService.SearchBuildingByCode(
                searchbuildingText,
                tenantDto.tenants.Landlord.Id,
                 tenantDto.tenants.Building.Id
            );
        }
        else
        {
            filteredBuildingList.Clear();
        }
    }


    private async Task SelectBuilding(Guid buildingId)
    {
        var building = await _buildingService.GetBuildingByIdAsync(buildingId);

        if (building != null && !selectedBuildings.Any(b => b.Id == building.Id))
        {
            selectedBuildings.Add(building);

            // Update OtherBuildingId with comma separated IDs
            var ids = selectedBuildings.Select(b => b.Id.ToString());
            legalcaseDto.OtherPropertiesBuildingId = string.Join(",", ids);
        }

        searchbuildingText = "";
        filteredBuildingList.Clear();
        hasSearched = false;
    }

    private void RemoveBuilding(Guid buildingId)
    {
        var buildingToRemove = selectedBuildings.FirstOrDefault(b => b.Id == buildingId);
        if (buildingToRemove != null)
        {
            selectedBuildings.Remove(buildingToRemove);
            UpdateOtherBuildingIds();
        }
    }

    private void UpdateOtherBuildingIds()
    {
        var ids = selectedBuildings.Select(b => b.Id.ToString());
        legalcaseDto.OtherPropertiesBuildingId = string.Join(",", ids);
    }


    private void Next()
    {
        currentStep++;
    }

    private async Task HandleTenantInput(ChangeEventArgs e)
    {
        searchtenantText = e?.Value?.ToString() ?? "";
        hasSearched = true;

        Console.WriteLine($"Search Text: {searchtenantText}");
        Console.WriteLine($"Client ID: {legalcaseDto.ClientId}");

        if (!string.IsNullOrWhiteSpace(searchtenantText) && legalcaseDto.ClientId != Guid.Empty)
        {
            filteredTenantList = await _tenantService.SearchTenantsAsync(searchtenantText, legalcaseDto.ClientId);
        }
        else
        {
            filteredTenantList.Clear();
        }
    }

    private async Task SelectTenant(Guid id)
    {
        TenantDetails = await _tenantService.GetByIdAsync(id);

        if (TenantDetails != null)
        {
            var fullName = $"{TenantDetails.FirstName} {TenantDetails.LastName}";
            searchtenantText = fullName;
            tenantSearchModel.SelectedTenant = fullName;

            tenantDto = new CreateToEditLegalCaseModel
                {
                     SelectedTenantId = TenantDetails.Id,
                // Id = TenantDetails.Id,
                    TenancyTypeId = TenantDetails.TenancyTypeId,
                    RenewalOffer = TenantDetails.RenewalOffer,
                    RentDueEachMonthOrWeekId = TenantDetails.RentDueEachMonthOrWeekId,
                    SocialServices = TenantDetails.SocialServices,
                    MonthlyRent = TenantDetails.MonthlyRent,
                    LastMonthWeekRentPaid = TenantDetails.LastMonthWeekRentPaid,
                    TenantShare = TenantDetails.TenantShare,
                    ERAPPaymentReceivedDate = TenantDetails.ERAPPaymentReceivedDate,
                    TotalRentOwed = TenantDetails.TotalRentOwed,
                    IsUnitIllegalId = TenantDetails.IsUnitIllegalId,
                    BuildingId = TenantDetails.BuildingId,
                    Attrney = legalcaseDto.Attrney,
                    AttrneyContactInfo = legalcaseDto.AttrneyContactInfo,
                    Firm = legalcaseDto.Firm,
                    ReasonHoldoverId = legalcaseDto.ReasonHoldoverId,
                    ExplainDescription = legalcaseDto.ExplainDescription,
                    OralStart = legalcaseDto.OralStart,
                    OralEnd  =  legalcaseDto.OralEnd,
                    WrittenLease = legalcaseDto.WrittenLease,
                    DateTenantMoved = legalcaseDto.DateTenantMoved,
                    RenewalStatusId = legalcaseDto.RenewalStatusId,



                // ✅ Properly map to 'tenants' property
                    tenants = new CreateToTenantDto
                    {
                    // Id = TenantDetails.Id,
                        FirstName = TenantDetails.FirstName,
                        LastName = TenantDetails.LastName,
                        SSN = TenantDetails.SSN,
                        Phone = TenantDetails.Phone,
                        Email = TenantDetails.Email,
                        LanguageId = TenantDetails.LanguageId,
                      
                        HasPossession = TenantDetails.HasPossession,
                        HasRegulatedTenancy = TenantDetails.HasRegulatedTenancy,
                      
                        AdditionalTenant = TenantDetails.AdditionalTenant,
                        OtherOccupants = TenantDetails.OtherOccupants,
                    
                        TenantRecord = TenantDetails.TenantRecord,
                        TenancyTypeId = TenantDetails.TenancyTypeId,
                        RenewalOffer = TenantDetails.RenewalOffer,
                        
                        SocialServices = TenantDetails.SocialServices,
                        MonthlyRent = TenantDetails.MonthlyRent,
                        LastMonthWeekRentPaid = TenantDetails.LastMonthWeekRentPaid,
                        TenantShare = TenantDetails.TenantShare,
                        ERAPPaymentReceivedDate = TenantDetails.ERAPPaymentReceivedDate,
                        UnitOrApartmentNumber = TenantDetails.UnitOrApartmentNumber,
                        TotalRentOwed = TenantDetails.TotalRentOwed,
                        IsUnitIllegalId = TenantDetails.IsUnitIllegalId,
                        BuildingId = TenantDetails.BuildingId,

                        Building = TenantDetails.Building == null ? null : new EditToBuildingDto
                        {
                            Address1 = TenantDetails.Building.Address1,
                            Address2 = TenantDetails.Building.Address2,
                            Zipcode = TenantDetails.Building.Zipcode,
                            City = TenantDetails.Building.City,
                            StateId = TenantDetails.Building.StateId,
                            StateName = TenantDetails.Building.StateName,
                            MDRNumber = TenantDetails.Building.MDRNumber,
                            BuildingUnits = TenantDetails.Building.BuildingUnits,
                            RegulationStatusId = TenantDetails.Building.RegulationStatusId,

                        },

                        Landlord = TenantDetails.Landlord == null ? null : new EditToLandlordDto
                        {
                            FirstName = TenantDetails.Landlord.FirstName,
                            LastName = TenantDetails.Landlord.LastName,
                            Address1 = TenantDetails.Landlord.Address1,
                            Address2 = TenantDetails.Landlord.Address2,
                            Zipcode = TenantDetails.Landlord.Zipcode,
                            City = TenantDetails.Landlord.City,
                            StateId = TenantDetails.Landlord.StateId,
                            StateName = TenantDetails.Landlord.StateName,
                            Phone = TenantDetails.Landlord.Phone,
                            Email = TenantDetails.Landlord.Email,
                            LandlordTypeId = TenantDetails.Landlord.LandlordTypeId,
                        }
                    },


                };
        }

        isTenantSelected = true;
        searchtenantText = "";
        filteredTenantList.Clear();
        hasSearched = false;
    }

    private async Task ResetStep()
    {
        switch (currentStep)
        {

            case 0:
                tenantDto = null;
                isTenantSelected = false;
                searchtenantText = string.Empty;
                filteredTenantList?.Clear();
                break;

        }


        StateHasChanged();
    }

    void SaveAsDraft() => Console.WriteLine("Saving Draft...");

    void Back() => currentStep--;


    private async Task Submit()
    {
        isSubmitting = true;
        var result = false;

        try
        {
            if (legalcaseDto != null && legalcaseDto.Id != Guid.Empty)
            {

                legalcaseDto.TenantId = tenantDto?.SelectedTenantId ?? legalcaseDto.TenantId;
                legalcaseDto.IsUnitIllegalId = tenantDto?.IsUnitIllegalId ?? Guid.Empty;
                legalcaseDto.TenantRecord = tenantDto?.TenantRecord;
                legalcaseDto.RenewalOffer = tenantDto?.HasPossession;
                legalcaseDto.OtherOccupants = tenantDto?.OtherOccupants;
                legalcaseDto.Attrney = tenantDto?.Attrney;
                legalcaseDto.AttrneyContactInfo = tenantDto?.AttrneyContactInfo;
                legalcaseDto.Firm = tenantDto?.Firm;
                legalcaseDto.tenantReceive = tenantDto?.tenantReceive;
                legalcaseDto.CaseTypeId = legalcaseDto.CaseTypeId;
                legalcaseDto.HasPossession = tenantDto?.HasPossession;
                legalcaseDto.RentDueEachMonthOrWeekId = tenantDto?.RentDueEachMonthOrWeekId;
                legalcaseDto.MonthlyRent = tenantDto?.MonthlyRent;
                legalcaseDto.TenantShare = tenantDto?.TenantShare;
                legalcaseDto.SocialServices = tenantDto?.SocialServices;
                legalcaseDto.LastMonthWeekRentPaid = tenantDto?.LastMonthWeekRentPaid;
                legalcaseDto.TotalRentOwed = tenantDto?.TotalRentOwed;
                legalcaseDto.IsERAPPaymentReceived = tenantDto?.IsERAPPaymentReceived;
                legalcaseDto.ERAPPaymentReceivedDate = tenantDto?.ERAPPaymentReceivedDate;
                legalcaseDto.TenancyTypeId = tenantDto?.TenancyTypeId ?? Guid.Empty;
                legalcaseDto.RegulationStatusId = tenantDto?.tenants?.Building?.RegulationStatusId ?? Guid.Empty;
                legalcaseDto.LandlordTypeId = tenantDto?.tenants?.Landlord?.LandlordTypeId ?? Guid.Empty;

                legalcaseDto.ReasonHoldoverId = tenantDto.ReasonHoldoverId;
                legalcaseDto.ExplainDescription = tenantDto.ExplainDescription;
                legalcaseDto.ReasonDescription = tenantDto.ReasonDescription;
                legalcaseDto.OralEnd = tenantDto.OralEnd;
                legalcaseDto.OralStart = tenantDto.OralStart;
                legalcaseDto.WrittenLease = tenantDto.WrittenLease;
                legalcaseDto.DateTenantMoved = tenantDto.DateTenantMoved;
                legalcaseDto.RenewalStatusId = tenantDto.RenewalStatusId;
                legalcaseDto.AdditionalOccupants = tenantDto?.AdditionalOccupants
    ?.Where(o => !string.IsNullOrWhiteSpace(o.Name) && !string.IsNullOrWhiteSpace(o.Relation))
    .ToList() ?? new List<AdditionalOccupantDto>();


                if (selectedBuildings != null && selectedBuildings.Any())
                {
                    legalcaseDto.OtherPropertiesBuildingId = string.Join(",", selectedBuildings.Select(b => b.Id));
                }
                else
                {
                    legalcaseDto.OtherPropertiesBuildingId = null;
                }

                result = await _legalCaseService.UpdateAsync(legalcaseDto);
                _dataService.CaseName = null;
            }

            if (result)
            {
                currentStep++;
                FilteredFormTypeList = await FormTypesRepository.GetFormTypesByCaseTypeAsync(legalcaseDto.CaseTypeId.Value);

                // FormTypeList = await FormTypesRepository.GetAllFormTYpes();
                await LoadCaseForms();

            }
        }
        finally
        {
            isSubmitting = false; // ✅ End loading
        }
    }

    private CancellationTokenSource _cts;

 

    private bool IsNextDisabled =>
     (currentStep == 0 && (
         tenantDto == null ||
         string.IsNullOrWhiteSpace(tenantDto.tenants.FirstName)
     ));

    private async Task OnBuildingChanged(ChangeEventArgs e)
    {
        _cts?.Cancel(); // cancel previous call
        _cts = new CancellationTokenSource();
        var token = _cts.Token;

        var input = e.Value?.ToString() ?? string.Empty;
        apartmentDto.ApartmentCode = input;

        if (input.Length >= 3)
        {
            await Task.Delay(1000, token); // debounce
                                           // var apartnent = await _apartmentService.SearchBuildingByCode(input);
                                           // matchedBuilding = apartnent.Where(e => e.Id == Guid.Parse(ClientId)).ToList();
            showSuggestions = matchedBuilding.Any();
        }
        else
        {
            showSuggestions = false;
        }
    }

}

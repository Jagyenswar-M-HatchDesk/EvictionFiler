@page "/createcase/{ClientId}"
@using EvictionFiler.Application.DTOs
@using EvictionFiler.Application.DTOs.ApartmentDto
@using EvictionFiler.Application.DTOs.BuildingDto
@using EvictionFiler.Application.DTOs.ClientDto
@using EvictionFiler.Application.DTOs.LandLordDto
@using EvictionFiler.Application.DTOs.LegalCaseDto
@using EvictionFiler.Application.DTOs.OccupantDto
@using EvictionFiler.Application.DTOs.TenantDto
@using EvictionFiler.Application.Interfaces.IRepository
@using EvictionFiler.Application.Interfaces.IRepository.MasterRepository
@using EvictionFiler.Application.Interfaces.IServices
@using EvictionFiler.Domain.Entities.Master
@inject IClientRoleRepository ClientRoleRepository
@inject ICaseTypeRepository CaseTypeRepository
@inject ICaseSubTypeRepository CaseSubTypeRepository
@inject IRegulationStatusRepository RegulationStatusRepository
@inject IReasonHoldoverRepository ReasonHoldoverRepository
@inject ILandlordTypeRepository LandlordTypeRepository
@inject IRenewalStatusRepository RenewalStatusRepository
@inject IUnitIllegalRepository UnitIllegalRepository
@inject ITenancyTypeRepository TenancyTypeRepository
@inject IDateRentRepository DateRentRepository
@inject ILandlordSevice _landlordService
@inject IBuildingService _buildingService
@inject ILegalCaseService _legalCaseService
@inject ITenantService _tenantService
@inject IClientService _clientService
@inject NavigationManager nav
@inject SpinnerService spinnerservice
@inject NavigationDataService _dataService
@using EvictionFiler.Client.SpinnerService
@using Blazored.Typeahead
@using EvictionFiler.Domain.Entities
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims
@inject JwtAuthStateProviders _authStateProvider


@using EvictionFiler.Client.Jwt

@rendermode InteractiveAuto
<style>
    .stepper-row::-webkit-scrollbar {
    height: 3px; /* thinner scrollbar */
    }

    .stepper-row::-webkit-scrollbar-thumb {
    background-color: #888;
    border-radius: 10px;
    }

    .stepper-row::-webkit-scrollbar-track {
    background: transparent;
    }

    /* For Firefox */
    .stepper-row {
    scrollbar-width: thin;
    scrollbar-color: #888 transparent;
    }

    .stepper-container {
    /*   background-color: #F7F6F3; */
    padding: 30px 20px;
    border-radius: 6px;
    /*   box-shadow: 0 1px 3px rgba(0,0,0,0.1); */
    overflow-x: auto;
    white-space: nowrap;
    }

    .stepper-row {
    display: flex;
    align-items: center;
    gap: 5px;
    min-width: max-content;
    overflow-x: auto; /* move it here */
    white-space: nowrap;
    }


    .stepper-step {
    display: flex;
    align-items: center;
    font-size: 14px;
    font-weight: 500;
    gap: 6px;
    }

    .stepper-step .circle {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 13px;
    flex-shrink: 0;
    }

    .circle.done {
    background-color: #5cb85c;
    color: white;
    }

    .circle.active {
    background-color: #1F365D;
    color: white;
    }

    .circle.upcoming {
    background-color: #ccc;
    color: white;
    }

    .text.done,
    .text.active {
    color: #007bff;
    font-weight: 600;
    }

    .text.upcoming {
    color: #aaa;
    }

    .arrow {
    color: #ccc;
    margin: 0 8px;
    }

    .nav-buttons {
    display: flex;
    gap: 6px;
    }

    .circle.done {
    background-color: #D4A844;
    color: white;
    }

    .text.done,
    .text.active {
    color: #1F365D;
    font-weight: 600;
    }



    .custom-scroll::-webkit-scrollbar {
    width: 6px;
    }

    .custom-scroll::-webkit-scrollbar-thumb {
    background-color: #ccc;
    border-radius: 3px;
    }

    .custom-scroll {
    scrollbar-width: thin;
    }

    .required-label::after {
    content: " *";
    color: red;
    }

    .stepper-row {
    display: flex;
    justify-content: space-between; /* ✅ the magic */
    align-items: center;
    width: 100%;
    overflow-x: auto;
    white-space: nowrap;
    }

    .stepper-step {
    display: flex;
    align-items: center;
    font-size: 14px;
    font-weight: 500;
    gap: 6px;
    }

    .stepper-row {
    display: flex;
    align-items: center;
    width: 100%;
    overflow-x: auto;
    }

    .stepper-step {
    display: flex;
    align-items: center;
    gap: 6px;
    white-space: nowrap;
    }

    .step-line {
    height: 2px;
    background-color: #ccc;
    margin: 0 8px;
    }

    .btn:disabled,
    .btn[disabled] {
        pointer-events: auto !important;
        cursor: not-allowed !important;
    }

</style>

<!-- upper Step Tracker + Navigation Buttons -->
<div class="stepper-container top-0 d-flex justify-content-between align-items-center flex-wrap v-100" style="scrollbar-width: thin;">
    <!-- Stepper Tracker -->
    <div class="stepper-row d-flex align-items-center w-100">
        @for (int i = 0; i < stepTitles.Count; i++)
        {
            var isDone = i < currentStep;
            var isActive = i == currentStep;

            var circleClass = isDone ? "circle done"
            : isActive ? "circle active"
            : "circle upcoming";

            var textClass = isDone ? "text done"
            : isActive ? "text active"
            : "text upcoming";

            <div class="stepper-step d-flex align-items-center">
                <div class="@circleClass">
                    @(isDone ? "✓" : (i + 1).ToString())
                </div>
                <span class="@textClass">@stepTitles[i]</span>
            </div>

            @* Add a line connector only between steps *@
            @if (i < stepTitles.Count - 1)
            {
                <div class="step-line flex-grow-1"></div>
            }
        }
    </div>

</div>


<!-- Form Content -->
<div class="container-fluid px-4" style="margin-top: 50px; margin-bottom: 100px;">

    <div style="height: calc(100vh - 200px); overflow-y: auto;" class="custom-scroll">

        @if (currentStep == 0)
        {

            <div class="mx-auto p-4 border rounded shadow-sm bg-white">
                <h5 class="text-center text-navy fw-bold fs-3">Case Details</h5>
                <hr class="border-gold mb-4" />

                <EditForm Model="@tenantSearchModel">
                    <div class="row mb-3 d-flex gap-2 align-items-center">

                      <div class="col-12">
                          <div class="row">
                              <div class="col-2">
                                    <label class=" col-form-label fw-semibold text-navy required-label">Case Type</label>
                               </div>
                                <div class="col-8">
                                    <select class="form-select w-50" @bind="legalcaseDto.CaseTypeId">

                                        @foreach (var caseType in CaseTypeList)
                                        {
                                            <option value="@caseType.Id">@caseType.Name</option>
                                        }
                                    </select>
                                </div>
                         </div>

                         </div>
                         <div class="col-12">
                            @if (!isTenantSelected)
                            {
                                <div class="row">
                                    <div class="col-2">
                                        <label class=" col-form-label fw-semibold text-navy required-label">Tenant</label>
                                    </div>

                                    <div class="col-8">
                                        <input type="text"
                                               class="form-control"
                                               value="@searchtenantText"
                                               @oninput="HandleTenantInput"
                                               placeholder="Search tenant by name/code"
                                               style="width:50%" />

                                        @if (filteredTenantList?.Any() == true)
                                        {
                                            bool isCodeSearch = !string.IsNullOrWhiteSpace(searchtenantText) &&
                                            (char.IsDigit(searchtenantText[0]) || searchtenantText.ToLower().StartsWith("t"));

                                            <ul class="list-group position-absolute shadow-sm z-3 mt-1 w-50"
                                                style="max-height: 200px; overflow-y: auto;">
                                                @foreach (var item in filteredTenantList)
                                                {
                                                    <li class="list-group-item list-group-item-action w-50"
                                                        style="cursor: pointer;"
                                                        @onclick="@(() => SelectTenant(item.Id))">
                                                        @if (isCodeSearch)
                                                        {
                                                            <span>@item.TenantCode (@item.FirstName)</span>
                                                        }
                                                        else
                                                        {
                                                            <span>@item.FirstName (@item.TenantCode)</span>
                                                        }
                                                    </li>
                                                }
                                            </ul>
                                        }
                                        else if (hasSearched && !string.IsNullOrWhiteSpace(searchtenantText))
                                        {
                                            <ul class="list-group position-absolute w-50 shadow-sm z-3 mt-1">
                                                <li class="list-group-item text-muted w-50" >No matching tenants found.</li>
                                            </ul>
                                        }
                                    </div>
                                </div> 
                           
                            }
                         </div>


                    </div>
                </EditForm>


                @if (TenantDetails != null)
                {
                    <div class="row mt-4">
                        <div class="col-md-12">
            
                            <!-- SECTION 1: TENANT DETAILS -->
                            <div class="card shadow-sm p-4 mb-4">
                                <div class=" mb-3">
                                    <h6 class="fw-bold fs-4">Tenant Information</h6>
                                    <hr>
                                </div>

                                <div class="mx-3">
                                    <div class="row my-1">
                                        <!-- Left Column (Full Name) -->
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Tenant's Full Name(s):</div>
                                                <div class="col-6">
                                                    @($"{TenantDetails.FirstName} {TenantDetails.LastName}".Trim() ?? "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Right Column (Building Address) -->
                                        <div class="col-6">

                                            <div class="row ">
                                                <div class="col-auto fw-semibold">Unit / Apartment Number:</div>
                                                <div class="col-4 ">@(!string.IsNullOrWhiteSpace(TenantDetails.UnitOrApartmentNumber) ? TenantDetails.UnitOrApartmentNumber : "N/A")</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row my-4">
                                        <div class="col-auto fw-semibold">Building Address:</div>
                                        <div class="col-7 ">
                                            @{
                                                var parts = new List<string>();

                                                if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Address1)) parts.Add(TenantDetails.Building.Address1);
                                                if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Address2)) parts.Add(TenantDetails.Building.Address2);
                                                if (!string.IsNullOrWhiteSpace(TenantDetails.Building.City)) parts.Add(TenantDetails.Building.City);
                                                if (!string.IsNullOrWhiteSpace(TenantDetails.Building.StateName)) parts.Add(TenantDetails.Building.StateName);
                                                if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Zipcode)) parts.Add(TenantDetails.Building.Zipcode);

                                                var fullAddress = parts.Any() ? string.Join(", ", parts) : "N/A";
                                            }
                                            @fullAddress
                                        </div>
                                    </div>
                                    @if (SelectedCaseTypeName == "NonPayment")
                                    {
                                        <div class="row my-1">
                                            <!-- Left Column (Full Name) -->
                                            <div class="col-6">
                                                <div class="row">
                                                    <div class="col-auto fw-semibold">Tenant's Phone:</div>
                                                    <div class="col-6">
                                                        @(!string.IsNullOrWhiteSpace(TenantDetails.Phone) ? TenantDetails.Phone : "N/A")
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Right Column (Building Address) -->
                                            <div class="col-6">

                                                <div class="row ">
                                                    <div class="col-auto fw-semibold">Tenants's Email:</div>
                                                    <div class="col ">@(!string.IsNullOrWhiteSpace(TenantDetails.Email) ? TenantDetails.Email : "N/A")</div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                   
                                    <div class="my-4">

                                        <div class="row my-1">
                                            <div class="col-12 fw-semibold required-label">
                                                Is the unit illegal? (check all that apply)
                                            </div>
                                        </div>

                                        <!-- Options Row -->
                                        <div class="row my-1">
                                            <div class="col-12 d-flex flex-wrap gap-3">
                                                <InputRadioGroup @bind-Value="TenantDetails.IsUnitIllegalId" class="d-flex flex-wrap gap-3">
                                                    @foreach (var option in IsUnitIllegalList)
                                                    {
                                                        <div class="form-check form-check-inline">
                                                            <InputRadio class="form-check-input" Value="@option.Id" />
                                                            <label class="form-check-label ms-1">@option.Name</label>
                                                        </div>
                                                    }
                                                </InputRadioGroup>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="my-4">
                                        <div class="row mb-2">
                                            <div class="col-4 fw-semibold">Tenant of record?</div>
                                            <div class="col-4 fw-semibold">Still in possession?</div>
                                            <div class="col-4 fw-semibold">Other Occupants?</div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-4 d-flex gap-3 align-items-center">
                                                <InputRadioGroup @bind-Value="TenantDetails.TenantRecord">
                                                    <div class="form-check">
                                                        <InputRadio class="form-check-input" Value="true" />
                                                        <label class="form-check-label">Yes</label>
                                                    </div>
                                                    <div class="form-check">
                                                        <InputRadio class="form-check-input" Value="false" />
                                                        <label class="form-check-label">No</label>
                                                    </div>
                                                </InputRadioGroup>
                                            </div>

                                            <div class="col-4 d-flex gap-3 align-items-center">
                                                <InputRadioGroup @bind-Value="TenantDetails.HasPossession">
                                                    <div class="form-check">
                                                        <InputRadio class="form-check-input" Value="true" />
                                                        <label class="form-check-label">Yes</label>
                                                    </div>
                                                    <div class="form-check">
                                                        <InputRadio class="form-check-input" Value="false" />
                                                        <label class="form-check-label">No</label>
                                                    </div>
                                                </InputRadioGroup>
                                            </div>

                                            <div class="col-4 d-flex gap-3 align-items-center">
                                                <InputRadioGroup @bind-Value="TenantDetails.OtherOccupants">
                                                    <div class="form-check">
                                                        <InputRadio class="form-check-input" Value="true" />
                                                        <label class="form-check-label">Yes</label>
                                                    </div>
                                                    <div class="form-check">
                                                        <InputRadio class="form-check-input" Value="false" />
                                                        <label class="form-check-label">No</label>
                                                    </div>
                                                </InputRadioGroup>
                                            </div>
                                        </div>

                                         @if (SelectedCaseTypeName == "NonPayment")
                                        {
                                            <div class="row align-items-center">
                                                <label class="col-auto fw-semibold mb-0">Does the tenant receive Scetiob 8 , Scrie/Drie Or other rental assistance ?</label>
                                                <div class="col d-flex gap-3">
                                                    <InputRadioGroup @bind-Value="legalcaseDto.tenantReceive" class="d-flex gap-3">
                                                        <div class="form-check">
                                                            <InputRadio class="form-check-input" Value="true" />
                                                            <label class="form-check-label">Yes</label>
                                                        </div>
                                                        <div class="form-check">
                                                            <InputRadio class="form-check-input" Value="false" />
                                                            <label class="form-check-label">No</label>
                                                        </div>
                                                    </InputRadioGroup>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    
                                    <div class="my-4">
                                        <div class="row mb-2">
                                            <div class="col-6 fw-semibold">Is there a written Lease??</div>
                                            <div class="col-6 fw-semibold">Renewal Status:</div>
                                         
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-6 d-flex gap-3 align-items-center">
                                                <InputRadioGroup @bind-Value="legalcaseDto.WrittenLease" class="d-flex gap-3">
                                                    <div class="form-check">
                                                        <InputRadio class="form-check-input" Value="true" />
                                                        <label class="form-check-label">Yes</label>
                                                    </div>
                                                    <div class="form-check">
                                                        <InputRadio class="form-check-input" Value="false" />
                                                        <label class="form-check-label">No</label>
                                                    </div>
                                                </InputRadioGroup>
                                            </div>

                                            <div class="col-6 d-flex gap-3 align-items-center">
                                                <InputRadioGroup @bind-Value="legalcaseDto.RenewalStatusId" class="d-flex flex-wrap gap-3">
                                                    @foreach (var option in RenewalStatusList)
                                                    {
                                                        <div class="form-check form-check-inline">
                                                            <InputRadio class="form-check-input" Value="@option.Id" />
                                                            <label class="form-check-label ms-1">@option.Name</label>
                                                        </div>
                                                    }
                                                </InputRadioGroup>
                                            </div>
                                        </div>
       
                                    </div>
                                   

                                    <div class="row my-4">
                                        <!-- Monthly Rent -->
                                        <div class="col-md-4 d-flex align-items-center">
                                            <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Oral Start:</label>
                                            <InputDate class="form-control" style="width: 50%;" @bind-Value="legalcaseDto.OralStart" />
                                        </div>

                                        <!-- Tenant's Share -->
                                        <div class="col-md-4 d-flex align-items-center">
                                            <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Oral End:</label>
                                            <InputDate class="form-control" style="width: 50%;" @bind-Value="legalcaseDto.OralEnd" />
                                        </div>

                                        <!-- Social Services -->
                                        <div class="col-md-4 d-flex align-items-center">
                                            <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Date Tenant Moved:</label>
                                            <InputDate class="form-control" style="width: 50%;" @bind-Value="legalcaseDto.DateTenantMoved" />
                                        </div>
                                    </div>
                                    @if (SelectedCaseTypeName == "NonPayment")
                                    {
                                    <div class="row mb-3">
                                        <div class="col-auto">
                                            <label class="me-2 required-label">Additional Occupants</label>
                                        </div>

                                        <div class="col">
                                            @for (int i = 0; i < occupants.Count; i++)
                                            {
                                                var item = occupants[i];
                                                <div class="row mb-2" @key="item">


                                                    <div class="col-auto">
                                                        <!-- Sirf last row me + button -->
                                                        @if (i == occupants.Count - 1)
                                                        {
                                                            <button type="button" class="btn btn-sm btn-success me-1"
                                                                    @onclick="() => AddTenant(item)" disabled="@item.IsVisible">
                                                                +
                                                            </button>
                                                        }

                                                        <!-- Minus button (only when inputs visible) -->
                                                        @if (item.IsVisible)
                                                        {
                                                            <button type="button" class="btn btn-sm btn-danger"
                                                                    @onclick="() => RemoveTenant(item)">
                                                                -
                                                            </button>
                                                        }
                                                    </div>
                                                    @if (item.IsVisible)
                                                    {
                                                        <!-- Show input fields -->
                                                        <div class="col-auto">
                                                            <InputText class="form-control" placeholder="Enter Name"
                                                                       @bind-Value="item.Name" />
                                                        </div>
                                                        <div class="col-auto">
                                                            <InputText class="form-control" placeholder="Enter Relation"
                                                                       @bind-Value="item.Relation" />
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                 
                                    }
                                    <div class="card p-4 mb-4 mt-2">
                                        <div class="my-3">
                                            <h5 class="fw-semibold fs-5">Rent Information</h5>
                                        </div>

                                        <div class="mx-2">
                                            <div class="row my-2 align-items-center">
                                                <div class="col-4 fw-semibold">Date rent is due each month/week:</div>
                                                <div class="col-2">
                                                    <InputSelect class="form-select" @bind-Value="TenantDetails.RentDueEachMonthOrWeekId">
                                                        <option value="">-- Select Date --</option>
                                                        @foreach (var l in DateRentList)
                                                        {
                                                            <option value="@l.Id">@l.Name</option>
                                                        }
                                                    </InputSelect>
                                                </div>

                                                <!-- Social Services -->
                                                <div class="col-md-6 d-flex align-items-center">
                                                    <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Social Services (if any):</label>
                                                    <InputText class="form-control" style="width: 100%;" @bind-Value="TenantDetails.SocialServices" placeholder="Enter  Social services" />
                                                </div>
                                            </div>

                                            <div class="row my-4">
                                                <!-- Monthly Rent -->
                                                <div class="col-md-5 d-flex align-items-center">
                                                    <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Monthly Rent ($):</label>
                                                    <InputNumber class="form-control" style="width: 100%;" @bind-Value="TenantDetails.MonthlyRent" placeholder="Enter Rent" />
                                                </div>

                                                <!-- Tenant's Share -->
                                                <div class="col-md-5 d-flex align-items-center">
                                                    <label class="fw-semibold me-2 mb-0" style="white-space: nowrap;">Tenant's Share ($):</label>
                                                    <InputNumber class="form-control" style="width: 100%;" @bind-Value="TenantDetails.TenantShare" placeholder="Enter  Share" />
                                                </div>

                                               
                                            </div>

                                            <div class="row my-4">
                                                <!-- Left Column -->
                                                <div class="col-md-6">
                                                    <div class="row align-items-center">
                                                        <label class="col-auto fw-semibold mb-0">Last M/W Rent Paid:</label>
                                                        <div class="col">
                                                            <InputText class="form-control" @bind-Value="legalcaseDto.LastMonthWeekRentPaid" placeholder="Enter  Last Paid" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <!-- Right Column -->
                                                <div class="col-md-6">
                                                    <div class="row align-items-center">
                                                        <label class="col-auto fw-semibold mb-0">Total Rent Owed ($):</label>
                                                        <div class="col">
                                                            <InputNumber class="form-control" @bind-Value="legalcaseDto.TotalRentOwed" placeholder="Enter  Rent Owned" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row my-4 align-items-center">
                                                <!-- ERAP Payment Received? -->
                                                <div class="col-md-6">
                                                    <div class="row align-items-center">
                                                        <label class="col-auto fw-semibold mb-0">ERAP Payment Received?</label>
                                                        <div class="col d-flex gap-3">
                                                            <InputRadioGroup @bind-Value="TenantDetails.IsERAPPaymentReceived" class="d-flex gap-3">
                                                                <div class="form-check">
                                                                    <InputRadio class="form-check-input" Value="true" />
                                                                    <label class="form-check-label">Yes</label>
                                                                </div>
                                                                <div class="form-check">
                                                                    <InputRadio class="form-check-input" Value="false" />
                                                                    <label class="form-check-label">No</label>
                                                                </div>
                                                            </InputRadioGroup>
                                                        </div>
                                                    </div>
                                                </div>

                                                <!-- If yes, date received -->
                                                @if (TenantDetails.IsERAPPaymentReceived == true)
                                                {
                                                    <div class="col-md-6">
                                                        <div class="row align-items-center">
                                                            <label class="col-auto fw-semibold mb-0"> Date received:</label>
                                                            <div class="col">
                                                                <InputDate class="form-control" @bind-Value="TenantDetails.ERAPPaymentReceivedDate" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                 }
                                            </div>
                                           

                                            <div class="my-4">

                                                <div class="row my-1">
                                                    <div class="col-12 fw-semibold required-label">
                                                        Tenancy Type
                                                    </div>
                                                </div>

                                                <!-- Options Row -->
                                                <div class="row my-1">
                                                    <div class="col-12 d-flex flex-wrap gap-3">
                                                        <InputRadioGroup @bind-Value="TenantDetails.TenancyTypeId" class="d-flex flex-wrap gap-3">
                                                            @foreach (var option in TenancyTypeList)
                                                            {
                                                                <div class="form-check form-check-inline">
                                                                    <InputRadio class="form-check-input" Value="@option.Id" />
                                                                    <label class="form-check-label ms-1">@option.Name</label>
                                                                </div>
                                                            }
                                                        </InputRadioGroup>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row my-4">
                                                <!-- ERAP Payment Received? -->
                                                <div class="col-md-6">
                                                    <div class="row align-items-center">
                                                        <label class="col-auto fw-semibold mb-0">Renewal Offered Or Refused</label>
                                                        <div class="col d-flex gap-3">
                                                            <InputRadioGroup @bind-Value="TenantDetails.RenewalOffer" class="d-flex gap-3">
                                                                <div class="form-check">
                                                                    <InputRadio class="form-check-input" Value="true" />
                                                                    <label class="form-check-label">Yes</label>
                                                                </div>
                                                                <div class="form-check">
                                                                    <InputRadio class="form-check-input" Value="false" />
                                                                    <label class="form-check-label">No</label>
                                                                </div>
                                                            </InputRadioGroup>
                                                        </div>
                                                    </div>
                                                </div>


                                            </div>
                                        </div>

                                    </div>


                                </div>
                            </div>

                            <!-- SECTION 2: PROPERTY / BUILDING -->
                            @if (TenantDetails.Building != null)
                            {

                                <div class="card shadow-sm p-4 mb-3">
                                    <div class="mb-3">
                                        <h6 class="fw-bold fs-4 ">Building Information</h6>
                                        <hr />
                                    </div>

                                    <div class="mx-3">
                                        <div class="row my-4">
                                            <!-- MDR Number -->
                                            <div class="col-md-5">
                                                <div class="row align-items-center">
                                                    <label class="col-auto fw-semibold mb-0">MDR Number:</label>
                                                    <div class="col-4">
                                                        @($"{TenantDetails.Building.MDRNumber}".Trim() ?? "N/A")
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Number Of Units in the building -->
                                            <div class="col-md-7">
                                                <div class="row align-items-center">
                                                    <label class="col-auto fw-semibold mb-0">Number Of Units in the building:</label>
                                                    <div class="col-3">
                                                        @(!string.IsNullOrWhiteSpace(TenantDetails.Building.BuildingUnits) ? TenantDetails.Building.BuildingUnits : "N/A")
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row my-4">
                                            <div class="col-auto fw-semibold">Building Address:</div>
                                            <div class="col-9">
                                                @{
                                                    var partBuilding = new List<string>();

                                                    if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Address1)) partBuilding.Add(TenantDetails.Building.Address1);
                                                    if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Address2)) partBuilding.Add(TenantDetails.Building.Address2);
                                                    if (!string.IsNullOrWhiteSpace(TenantDetails.Building.City)) partBuilding.Add(TenantDetails.Building.City);
                                                    if (!string.IsNullOrWhiteSpace(TenantDetails.Building.StateName)) partBuilding.Add(TenantDetails.Building.StateName);
                                                    if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Zipcode)) partBuilding.Add(TenantDetails.Building.Zipcode);

                                                    var fullBuildingAddress = partBuilding.Any() ? string.Join(", ", partBuilding) : "-";
                                                }
                                                @fullBuildingAddress
                                            </div>
                                        </div>

                                        <div class="row my-4">
                                            <!-- Label in full width -->
                                            <div class="col-12 fw-semibold required-label">
                                                Rent Regulation Status
                                            </div>

                                            <!-- Radio buttons in next row -->
                                            <div class="col-12">
                                                <InputRadioGroup @bind-Value="TenantDetails.Building.RegulationStatusId" class="d-flex flex-wrap gap-3">
                                                    @foreach (var option in RegulationList)
                                                    {
                                                        <div class="form-check form-check-inline">
                                                            <InputRadio class="form-check-input" Value="@option.Id" />
                                                            <label class="form-check-label ms-1">@option.Name</label>
                                                        </div>
                                                    }
                                                </InputRadioGroup>
                                            </div>
                                        </div>
                                        @if (SelectedCaseTypeName == "NonPayment")
                                        {
                                           <EditForm Model="@buildingSearchModel">
                                                  <div class="row mb-3 d-flex gap-2 align-items-center">
                                                       <div class="col-12">
                                      
                                           <div class="row">
                                               <div class="col-auto">
                                                   <label class=" col-form-label fw-semibold text-navy">List Other Properties</label>
                                               </div>
                                      
                                               <div class="col position-relative">
                                                   <input type="text"
                                                          class="form-control"
                                                          value="@searchbuildingText"
                                                          @oninput="HandleBuildingInput"
                                                          placeholder="Search another building"
                                                          style="width:50%" />
                                      
                                                   @if (filteredBuildingList?.Any() == true)
                                                   {
                                                       bool isCodeSearch = !string.IsNullOrWhiteSpace(searchbuildingText) &&
                                                                        (char.IsDigit(searchbuildingText[0]) || searchbuildingText.ToLower().StartsWith("t"));
                                      
                                                       <ul class="list-group position-absolute shadow-sm z-3 mt-1"
                                                           style="max-height: 200px; overflow-y: auto;width:49%;">
                                                                            @foreach (var item in filteredBuildingList)
                                                           {
                                                               <li class="list-group-item list-group-item-action"
                                                                   style="cursor: pointer;"
                                                                   @onclick="@(() => SelectBuilding(item.Id))">
                                                                   @if (isCodeSearch)
                                                                   {
                                                                       <span>@item.BuildingCode </span>
                                                                   }
                                                                   else
                                                                   {
                                                                     <span>(@item.BuildingCode)</span>
                                                                   }
                                                               </li>
                                                           }
                                                       </ul>
                                                   }
                                                   else if (hasSearched && !string.IsNullOrWhiteSpace(searchbuildingText))
                                                   {
                                                       <ul class="list-group position-absolute w-100 shadow-sm z-3 mt-1">
                                                           <li class="list-group-item text-muted">No matching Building found.</li>
                                                       </ul>
                                                   }
                                               </div>
                                           </div> 
                                      
                                     
                                                                  </div>
                                                             </div>
                                                     </EditForm>
                                           
                                                @if (selectedBuildings.Any())
                                                {
                                                    @foreach (var b in selectedBuildings)
                                                    {
                                                        <div class="card shadow-sm p-4 mb-3">
                                                            <div class="d-flex justify-content-between align-items-center mb-3">
                                                                <h6 class="fw-bold fs-4">Another Building Information</h6>
                                                                <button class="btn btn-sm btn-danger"
                                                                        @onclick="@(() => RemoveBuilding(b.Id))">
                                                                    Remove
                                                                </button>
                                                            </div>
                                                            <hr />

                                                            <div class="mx-3">
                                                                <div class="row my-4">
                                                                    <div class="col-md-5">
                                                                        <div class="row align-items-center">
                                                                            <label class="col-auto fw-semibold mb-0">MDR Number:</label>
                                                                            <div class="col">@(!string.IsNullOrWhiteSpace(b.MDRNumber) ? b.MDRNumber : "N/A")</div>
                                                                        </div>
                                                                    </div>

                                                                    <div class="col-md-7">
                                                                        <div class="row align-items-center">
                                                                            <label class="col-auto fw-semibold mb-0">Number Of Units:</label>
                                                                            <div class="col-3">@(!string.IsNullOrWhiteSpace(b.BuildingUnits) ? b.BuildingUnits : "N/A")</div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="row my-4">
                                                                    <div class="col-auto fw-semibold">Building Address:</div>
                                                                    <div class="col-9">
                                                                    @{
                                                                        var p = new List<string>();

                                                                        if (!string.IsNullOrWhiteSpace(b.Address1)) p.Add(b.Address1);
                                                                        if (!string.IsNullOrWhiteSpace(b.Address2)) p.Add(b.Address2);
                                                                        if (!string.IsNullOrWhiteSpace(b.City)) p.Add(b.City);
                                                                        if (!string.IsNullOrWhiteSpace(b.StateName)) p.Add(b.StateName);
                                                                        if (!string.IsNullOrWhiteSpace(b.Zipcode)) p.Add(b.Zipcode);

                                                                        var Address = p.Any() ? string.Join(", ", p) : "-";
                                                                    }
                                                                    @Address
                                                                           </div>
                                                                       </div>
                                                                   </div>
                                                               </div>
                                                                }
                                                }

                                            
                                        }
                                               </div>
                                           </div>
                            }

                            <!-- SECTION 3: LANDLORD -->
                            @if (TenantDetails.Landlord != null)
                            {

                                <div class="card shadow-sm p-4 mb-3">
                                    <div class="mb-3">
                                        <h6 class="fw-bold fs-4 ">LandLord  Information</h6>
                                        <hr />
                                    </div>

                                    <div class="mx-3">
                                        <div class="row my-4">
                                            <!-- Full Name or Entity Name -->
                                            <div class="col-md-5">
                                                <div class="row ">
                                                    <label class="col-auto fw-semibold mb-0">Full Name :</label>
                                                    <div class="col ">
                                                        @($"{TenantDetails.Landlord.FirstName} {TenantDetails.Landlord.LastName}".Trim() ?? "N/A")
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Mailing Address -->
                                            <div class="col-md-6">
                                                <div class="row ">
                                                    <label class="col-auto fw-semibold mb-0">Mailing Address:</label>
                                                    <div class="col ">
                                                        @{
                                                            var partlandlord = new List<string>();

                                                            if (!string.IsNullOrWhiteSpace(TenantDetails.Landlord.Address1)) partlandlord.Add(TenantDetails.Landlord.Address1);
                                                            if (!string.IsNullOrWhiteSpace(TenantDetails.Landlord.Address2)) partlandlord.Add(TenantDetails.Landlord.Address2);
                                                            if (!string.IsNullOrWhiteSpace(TenantDetails.Landlord.City)) partlandlord.Add(TenantDetails.Landlord.City);
                                                            if (!string.IsNullOrWhiteSpace(TenantDetails.Landlord.StateName)) partlandlord.Add(TenantDetails.Landlord.StateName);
                                                            if (!string.IsNullOrWhiteSpace(TenantDetails.Landlord.Zipcode)) partlandlord.Add(TenantDetails.Landlord.Zipcode);

                                                            var fulllandlordAddress = partlandlord.Any() ? string.Join(", ", partlandlord) : "N/A";
                                                        }
                                                        @fulllandlordAddress
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row my-4">
                                            <!-- Phone Number -->
                                            <div class="col-md-5">
                                                <div class="row align-items-center">
                                                    <label class="col-auto fw-semibold mb-0">Phone Number:</label>
                                                    <div class="col ">
                                                        @(!string.IsNullOrWhiteSpace(TenantDetails.Landlord.Phone) ? TenantDetails.Landlord.Phone : "N/A")
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Email -->
                                            <div class="col-md-6">
                                                <div class="row align-items-center">
                                                    <label class="col-auto fw-semibold mb-0">Email:</label>
                                                    <div class="col">
                                                        @(!string.IsNullOrWhiteSpace(TenantDetails.Landlord.Email) ? TenantDetails.Landlord.Email : "N/A")
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row my-4">
                                            <!-- Label full-width -->
                                            <div class="col-12 fw-semibold mb-1 required-label">Are You the:</div>

                                            <!-- Input radios in next row -->
                                            <div class="col-12 d-flex flex-wrap gap-3">
                                                <InputRadioGroup @bind-Value="TenantDetails.Landlord.LandlordTypeId" class="d-flex flex-wrap gap-3">
                                                    @foreach (var option in LandLordTypeList)
                                                    {
                                                        <div class="form-check form-check-inline">
                                                            <InputRadio class="form-check-input" Value="@option.Id" />
                                                            <label class="form-check-label ms-1">@option.Name</label>
                                                        </div>
                                                    }
                                                </InputRadioGroup>
                                            </div>
                                        </div>

                                        <div class="row my-4">
                                            <div class="col-4 fw-semibold">If purchased at foreClosure : </div>
                                            <div class="col-4">
                                                <InputDate class="form-control"
                                                @bind-Value="@TenantDetails.Landlord.DateOfRefreeDeed"
                                                id="dateRefereeDeed"
                                                placeholder="Select date" />

                                            </div>
                                        </div>
                                         @if (SelectedCaseTypeName == "NonPayment")
                                     {
                                        <EditForm Model="@legalcaseDto" >
                                            @* <DataAnnotationsValidator /> *@
                                           

                                            <div class="card p-4 mb-4 my-4">
                                                <div class="mb-3">
                                                    <h6 class="fw-bold fs-4 ">Attorney Information</h6>
                                                </div>
                                                <div class="mx-3">
                                                    <div class="row mb-2 my-4">
                                                        <div class="col-6">
                                                            <div class="row d-flex align-items-center">
                                                                <div class="col-auto fw-semibold">Attorney Name:</div>
                                                                <div class="col">
                                                                    <InputText class="form-control" @bind-Value="legalcaseDto.Attrney"  placeholder="Enter Attorney"/>
                                                                </div>
                                                            </div>
                                                            </div> 

                                                        <div class="col-6">
                                                                <div class="row d-flex align-items-center">
                                                                <div class="col-auto fw-semibold">Attorney Contact Info:</div>
                                                                <div class="col">
                                                                        <InputText class="form-control" @bind-Value="legalcaseDto.AttrneyContactInfo" placeholder="Enter  Contact" />
                                                                </div>
                                                            </div>
                                                        </div>

                                                       
                                                    </div>

                                                    <div class="row mb-2 my-4">
                                                            <div class="col-6">
                                                                <div class="row d-flex align-items-center">
                                                                    <div class="col-4 fw-semibold" style="margin-right:10px">Firm:</div>
                                                                    <div class="col">
                                                                        <InputText class="form-control" @bind-Value="legalcaseDto.Firm" placeholder="Enter Firm" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                    </div>
                                                </div>
                                            </div>

                                            @* <button type="submit" class="btn btn-primary">Save</button> *@
                                        </EditForm>
                                        }
                                    </div>



                                </div>
                            }
                    
                        </div>
                    </div>

                    <EditForm Model="@legalcaseDto" OnValidSubmit="Next" Id="ReasonForm">
                        <DataAnnotationsValidator />

                        <div class="row my-3 my-4">
                            <div class="col-md-12">
                                <InputRadioGroup @bind-Value="legalcaseDto.ReasonHoldoverId" class="mb-3 required-label">
                                    <div class="row align-items-start">
                                        <div class="col-auto">
                                            <label class="form-label fw-semibold mb-0 required-label" style="margin-top:5px">Reason Holdover:</label>
                                        </div>
                                        <div class="col">
                                            <div class="d-flex flex-wrap align-items-start" >
                                             
                                                @foreach (var role in ReasonHoldoverList)
                                                {
                                                    <div class="d-flex align-items-center gap-2" style="margin-left:10px">
                                                        <div class="form-check d-flex align-items-center m-0">
                                                            <InputRadio Value="@role.Id" class="form-check-input me-1" />
                                                            <label class="form-check-label ms-1" style="margin-top:5px">
                                                                @role.Name
                                                            </label>
                                                        </div>

                                                        @if (role.Name == "Other" && legalcaseDto.ReasonHoldoverId == role.Id)
                                                        {
                                                            <InputText class="form-control"
                                                                       placeholder="Please specify"
                                                                       style="max-width: 200px; height: 36px;"
                                                                       @bind-Value="legalcaseDto.ReasonDescription" />
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </InputRadioGroup>
                                <ValidationMessage For="@(() => legalcaseDto.ReasonHoldoverId)" />

                            </div>


                        </div>
                        <div class="row mb-5">
                            <div class="col-2 ">
                                <label class="form-label fw-semibold ">Explain:</label>

                            </div>

                            <div class="col-md-10">

                                <InputTextArea class="form-control" @bind-Value="legalcaseDto.ExplainDescription" placeholder="Enter Explanation" style="width: 100%;" />
                            </div>

                        </div>

                        
                    </EditForm>
                }

            </div>
        }

        @if (currentStep == 1)
        {
            <div class="mx-auto p-4 border rounded shadow-sm bg-white">
                <h5 class="text-center text-navy fw-bold fs-3">Summary View</h5>
                <hr class="border-gold mb-4" />

                @if (TenantDetails != null)
                {
                    <div class="row mt-4">
                        <div class="col-md-12">
                          

                            <!-- SECTION 1: TENANT INFORMATION -->
                            <div class="card shadow-sm p-4 mb-3">
                                <div class="mb-3">
                                    <h6 class="fw-bold fs-4 ">Tenant Information</h6>
                                    <hr />
                                </div>
                                <div class="mx-3">
                                    <div class="row mb-2 my-4">
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Tenant's Full Name(s):</div>
                                                <div class="col-6">
                                                    @($"{TenantDetails.FirstName} {TenantDetails.LastName}".Trim() ?? "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-6">

                                            <div class="row">
                                                <div class="col-auto fw-semibold">Unit / Apartment Number:</div>
                                                <div class="col">
                                                    @(!string.IsNullOrWhiteSpace(TenantDetails.UnitOrApartmentNumber) ? TenantDetails.UnitOrApartmentNumber : "N/A")
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row mb-2 my-4">
                                        <div class="col">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Building Address:</div>
                                                <div class="col">
                                                    @{
                                                        var parts = new List<string>();

                                                        if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Address1)) parts.Add(TenantDetails.Building.Address1);
                                                        if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Address2)) parts.Add(TenantDetails.Building.Address2);
                                                        if (!string.IsNullOrWhiteSpace(TenantDetails.Building.City)) parts.Add(TenantDetails.Building.City);
                                                        if (!string.IsNullOrWhiteSpace(TenantDetails.Building.StateName)) parts.Add(TenantDetails.Building.StateName);
                                                        if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Zipcode)) parts.Add(TenantDetails.Building.Zipcode);

                                                        var fullAddress = parts.Any() ? string.Join(", ", parts) : "-";
                                                    }
                                                    @fullAddress
                                                </div>
                                            </div>

                                        </div>

                                    </div>

                                    @if (SelectedCaseTypeName == "NonPayment")
                                    {
                                        <div class="row my-1">
                                            <!-- Left Column (Full Name) -->
                                            <div class="col-6">
                                                <div class="row">
                                                    <div class="col-auto fw-semibold">Tenant's Phone:</div>
                                                    <div class="col-6">
                                                        @(!string.IsNullOrWhiteSpace(TenantDetails.Phone) ? TenantDetails.Phone : "N/A")
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Right Column (Building Address) -->
                                            <div class="col-6">

                                                <div class="row ">
                                                    <div class="col-auto fw-semibold">Tenants's Email:</div>
                                                    <div class="col">@(!string.IsNullOrWhiteSpace(TenantDetails.Email) ? TenantDetails.Email : "N/A")</div>
                                                </div>
                                            </div>
                                        </div>
                                    }


                                    <div class="row mb-2 my-4">
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Is the unit illegal?</div>
                                                <div class="col">
                                                    @(IsUnitIllegalList.FirstOrDefault(x => x.Id == TenantDetails.IsUnitIllegalId)?.Name ?? "N/A")
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row mb-2 my-4">
                                        <div class="col-4">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Tenant of record?</div>
                                                <div class="col">
                                                    @(TenantDetails.TenantRecord == true ? "Yes" : TenantDetails.TenantRecord == false ? "No" : "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-4">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Other Occupants?</div>
                                                <div class="col">
                                                    @(TenantDetails.OtherOccupants == true ? "Yes" : TenantDetails.OtherOccupants == false ? "No" : "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-4">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Still in possession?</div>
                                                <div class="col">
                                                    @(TenantDetails.HasPossession == true ? "Yes" : TenantDetails.HasPossession == false ? "No" : "N/A")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                            @if (SelectedCaseTypeName == "NonPayment")
                                    {
                                        <div class="row mb-2 my-4">
                                            <div class="col-12">
                                                <div class="row">
                                                    <div class="col-auto fw-semibold">Does the tenant receive Scetiob 8 , Scrie/Drie Or other rental assistance ?</div>
                                                    <div class="col">
                                                        @(legalcaseDto.tenantReceive == true ? "Yes" : legalcaseDto.tenantReceive == false ? "No" : "N/A")
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    <div class="row my-1">
                                        <!-- Left Column (Full Name) -->
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-auto fw-semibold">Is there a written Lease?</div>
                                                <div class="col">
                                                    @(legalcaseDto.WrittenLease == true ? "Yes" : legalcaseDto.WrittenLease == false ? "No" : "N/A")
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Right Column (Building Address) -->
                                        <div class="col-6">

                                            <div class="row ">
                                                <div class="col-auto fw-semibold">Renewal Status:</div>
                                                <div class="col">
                                                    @(RenewalStatusList.FirstOrDefault(x => x.Id == legalcaseDto.RenewalStatusId)?.Name ?? "N/A")
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row my-4">
                                        <!-- Monthly Rent -->
                                        <div class="col-md-4 d-flex align-items-center">
                                            <div class="col-auto fw-semibold">Oral Start:</div>
                                            <div class="col"> @legalcaseDto.OralStart</div>
                                        </div>

                                        <!-- Tenant's Share -->
                                        <div class="col-md-4 d-flex align-items-center">
                                         
                                            <div class="col-auto fw-semibold">Oral End:</div>
                                            <div class="col"> @legalcaseDto.OralEnd</div>
                                        </div>

                                        <!-- Social Services -->
                                        <div class="col-md-4 d-flex align-items-center">
                                            <div class="col-auto fw-semibold">Date Tenant Moved</div>
                                            <div class="col"> @legalcaseDto.DateTenantMoved</div>
                                        </div>
                                    </div>

                                    @if (SelectedCaseTypeName == "NonPayment")
                                    {
                                    <div class="row mt-4">
                                        <div class="col-auto fw-semibold">
                                            <div class="col-auto">Additional Occupants:</div>

                                           
                                        </div>
                                        <div class="col-5">
                                            @if (occupants.Any(o => o.IsVisible))
                                            {
                                                <table class="table table-bordered table-sm">
                                                    <thead>
                                                        <tr>
                                                            <th>Name</th>
                                                            <th>Relation</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var occ in occupants.Where(o => o.IsVisible))
                                                        {
                                                            <tr>
                                                                <td>@occ.Name</td>
                                                                <td>@occ.Relation</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            }
                                            else
                                            {
                                                <p class="text-muted">No additional tenants added yet.</p>
                                            }
                                        </div>
                                    </div>
                                    }

                                    <div class="card p-4 mb-4 my-4">
                                        <div class="mb-3">
                                            <h6 class="fw-bold fs-4 ">Rent Information</h6>
                                        </div>
                                        <div class="mx-3">

                                            <div class="row mb-2 my-4">
                                                <div class="col-4">
                                                    <div class="row">
                                                        <div class="col-auto fw-semibold">Monthly Rent ($):</div>
                                                        <div class="col">@TenantDetails.MonthlyRent</div>
                                                    </div>
                                                </div>
                                                <div class="col-4">
                                                    <div class="row">
                                                        <div class="col-auto fw-semibold">Rent Due (Month/Week):</div>
                                                       <div class="col">
                                                            @(DateRentList.FirstOrDefault(x => x.Id == TenantDetails.RentDueEachMonthOrWeekId)?.Name ?? "N/A")
                                                       </div>
                                                    </div>
                                                </div>
                                                <div class="col-4">
                                                    <div class="row">
                                                        <div class="col-auto fw-semibold">Tenant's Share ($):</div>
                                                        <div class="col">@TenantDetails.TenantShare</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row mb-2 my-4">
                                                <div class="col-4">
                                                    <div class="row">
                                                        <div class="col-auto fw-semibold">Social Services:</div>
                                                        <div class="col">@(!string.IsNullOrWhiteSpace(TenantDetails.SocialServices) ? TenantDetails.SocialServices : "N/A")</div>
                                                    </div>
                                                </div>
                                                <div class="col-3">
                                                    <div class="row">
                                                        <div class="col-auto fw-semibold">Total Rent Owed ($):</div>
                                                        <div class="col">@legalcaseDto.TotalRentOwed</div>
                                                    </div>
                                                </div>
                                                <div class="col-5">
                                                    <div class="row">
                                                        <div class="col-auto fw-semibold">Last Rent Paid (Month/Week):</div>
                                                        <div class="col">@legalcaseDto.LastMonthWeekRentPaid</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row mb-2 my-4">
                                                <div class="col-6">
                                                    <div class="row">
                                                        <div class="col-auto fw-semibold">ERAP Payment Received:</div>
                                                        <div class="col">@(TenantDetails.IsERAPPaymentReceived ? "Yes" : "No")</div>
                                                    </div>
                                                </div>
                                             
                                                <div class="col-6">
                                                    <div class="row">
                                                        <div class="col-auto fw-semibold">ERAP Payment Date:</div>
                                                        <div class="col">@((TenantDetails.ERAPPaymentReceivedDate?.ToString("MM/dd/yyyy")) ?? "N/A")</div>
                                                    </div>
                                                </div>
     
                                            </div>
                                        </div>
                                    </div>


                                </div>



                            </div>

                            <!-- SECTION 2: BUILDING INFO -->
                            <div class="card shadow-sm p-4 mb-3">
                                <div class=" mb-3">
                                    <h6 class="fw-bold fs-4">Building Information</h6>
                                    <hr />
                                </div>

                                <div class="row mb-2 my-4">
                                    <div class="col-auto fw-semibold">Building Address:</div>
                                    <div class="col">
                                        @{
                                            var partBuilding = new List<string>();

                                            if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Address1)) partBuilding.Add(TenantDetails.Building.Address1);
                                            if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Address2)) partBuilding.Add(TenantDetails.Building.Address2);
                                            if (!string.IsNullOrWhiteSpace(TenantDetails.Building.City)) partBuilding.Add(TenantDetails.Building.City);
                                            if (!string.IsNullOrWhiteSpace(TenantDetails.Building.StateName)) partBuilding.Add(TenantDetails.Building.StateName);
                                            if (!string.IsNullOrWhiteSpace(TenantDetails.Building.Zipcode)) partBuilding.Add(TenantDetails.Building.Zipcode);

                                            var fullBuildingAddress = partBuilding.Any() ? string.Join(", ", partBuilding) : "-";
                                        }
                                        @fullBuildingAddress
                                    </div>
                                </div>

                                <div class="row mb-2 my-4">
                                    <div class="col-4">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">MDR Number:</div>
                                        <div class="col">@(TenantDetails.Building.MDRNumber ?? "N/A")</div>
                                        </div>
                                    </div>

                                    <div class="col-3">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Number of Units:</div>
                                            <div class="col">@(TenantDetails.Building.BuildingUnits ?? "N/A")</div>
                                        </div>
                                    </div>

                                    <div class="col-5">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Regulation Status:</div>
                                            <div class="col">
                                                @(RegulationList.FirstOrDefault(x => x.Id == TenantDetails.Building.RegulationStatusId)?.Name ?? "-")
                                            </div>
                                        </div>
                                    </div>
                                </div>
                        @if (SelectedCaseTypeName == "NonPayment")
                                {
                                    

                                    @if (selectedBuildings.Any())
                                    {
                                        @foreach (var b in selectedBuildings)
                                        {
                                            <div class="card shadow-sm p-4 mb-3">
                                                <div class="d-flex justify-content-between align-items-center mb-3">
                                                    <h6 class="fw-bold fs-4">Another Building Information</h6>
                                                   @*  <button class="btn btn-sm btn-danger"
                                                            @onclick="@(() => RemoveBuilding(b.Id))">
                                                        Remove
                                                    </button> *@
                                                </div>
                                                <hr />

                                                <div class="mx-3">
                                                    <div class="row my-4">
                                                        <div class="col-md-5">
                                                            <div class="row align-items-center">
                                                                <label class="col-auto fw-semibold mb-0">MDR Number:</label>
                                                                <div class="col-4">@(!string.IsNullOrWhiteSpace(b.MDRNumber) ? b.MDRNumber : "N/A")</div>
                                                            </div>
                                                        </div>

                                                        <div class="col-md-7">
                                                            <div class="row align-items-center">
                                                                <label class="col-auto fw-semibold mb-0">Number Of Units:</label>
                                                                <div class="col-3">@(!string.IsNullOrWhiteSpace(b.BuildingUnits) ? b.BuildingUnits : "N/A")</div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="row my-4">
                                                        <div class="col-auto fw-semibold">Building Address:</div>
                                                        <div class="col-9">
                                                            @{
                                                                var p = new List<string>();

                                                                if (!string.IsNullOrWhiteSpace(b.Address1)) p.Add(b.Address1);
                                                                if (!string.IsNullOrWhiteSpace(b.Address2)) p.Add(b.Address2);
                                                                if (!string.IsNullOrWhiteSpace(b.City)) p.Add(b.City);
                                                                if (!string.IsNullOrWhiteSpace(b.StateName)) p.Add(b.StateName);
                                                                if (!string.IsNullOrWhiteSpace(b.Zipcode)) p.Add(b.Zipcode);

                                                                var Address = p.Any() ? string.Join(", ", p) : "-";
                                                            }
                                                            @Address
                                    </div>
                                </div>
                            </div>
                        </div>
                                                }
                                    }


                                }

                        </div>

                            <!-- SECTION 3: LANDLORD INFO -->
                            <div class="card shadow-sm p-4 mb-4">
                                <div class="mb-3">
                                    <h6 class="fw-bold fs-4 ">Landlord Information</h6>
                                    <hr />
                                </div>

                                <div class="mx-3">
                                <div class="row mb-2 my-4">
                                    <div class="col-4">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Full Name :</div>
                                            <div class="col">@($"{TenantDetails.Landlord.FirstName} {TenantDetails.Landlord.LastName}".Trim() ?? "N/A")</div>
                                        </div>
                                    </div>

                                    <div class="col-3">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Phone:</div>
                                            <div class="col">@(TenantDetails.Landlord.Phone ?? "N/A")</div>
                                        </div>
                                    </div>

                                    <div class="col-5">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Email:</div>
                                            <div class="col">@TenantDetails.Landlord.Email</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row mb-2 my-4">


                                    <div class="col-auto fw-semibold">Mailing Address:</div>
                                    <div class="col">
                                            @{
                                                var partlandlord = new List<string>();

                                                if (!string.IsNullOrWhiteSpace(TenantDetails.Landlord.Address1)) partlandlord.Add(TenantDetails.Landlord.Address1);
                                                if (!string.IsNullOrWhiteSpace(TenantDetails.Landlord.Address2)) partlandlord.Add(TenantDetails.Landlord.Address2);
                                                if (!string.IsNullOrWhiteSpace(TenantDetails.Landlord.City)) partlandlord.Add(TenantDetails.Landlord.City);
                                                if (!string.IsNullOrWhiteSpace(TenantDetails.Landlord.StateName)) partlandlord.Add(TenantDetails.Landlord.StateName);
                                                if (!string.IsNullOrWhiteSpace(TenantDetails.Landlord.Zipcode)) partlandlord.Add(TenantDetails.Landlord.Zipcode);

                                                var fulllandlordAddress = partlandlord.Any() ? string.Join(", ", partlandlord) : "N/A";
                                            }
                                            @fulllandlordAddress
                                    </div>
                                </div>

                                <div class="row mb-2 my-4">
                                    <div class="col-4">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Are You the:</div>
                                            <div class="col">
                                                @(LandLordTypeList.FirstOrDefault(x => x.Id == TenantDetails.Landlord.LandlordTypeId)?.Name ?? "N/A")
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-8">
                                        <div class="row">
                                            <div class="col-auto fw-semibold">Date of Foreclosure Purchase:</div>
                                            <div class="col">
                                                @(TenantDetails.Landlord.DateOfRefreeDeed)
                                            </div>
                                        </div>
                                    </div>


                                </div>

                            @if (SelectedCaseTypeName == "NonPayment")
                                    {
                                <div class="card p-4 mb-4 my-4">
                                    <div class="mb-3">
                                        <h6 class="fw-bold fs-4 ">Attorney Information</h6>
                                    </div>
                                    <div class="mx-3">
                                        <div class="row mb-2 my-4">
                                            <div class="col-4">
                                                <div class="row">
                                                    <div class="col-auto fw-semibold">Attorney Name:</div>
                                                            <div class="col">  @(legalcaseDto.Attrney ?? "N/A")</div>
                                                </div>
                                            </div>

                                            <div class="col-4">
                                                <div class="row">
                                                    <div class="col-auto fw-semibold">Attorney Contact Info:</div>
                                                    <div class="col">
                                                       
                                                                @(legalcaseDto.AttrneyContactInfo ?? "N/A")
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-4">
                                                <div class="row">
                                                    <div class="col-auto fw-semibold">Firm:</div>
                                                            <div class="col">@(legalcaseDto.Firm ?? "N/A")</div>
                                                </div>
                                            </div>
                                        </div>

                                     
                                    </div>
                                </div>
                                }
                                </div>
                            </div>

                        </div>
                    </div>
                }

                <div class="row mb-2 ">
                    <div class="row my-4 mb-2 align-items-center">
                        <div class="col-auto fw-semibold ">Reason Holdover:</div>
                        <div class="col">
                            @(ReasonHoldoverList.FirstOrDefault(x => x.Id == legalcaseDto.ReasonHoldoverId)?.Name ?? "N/A")
                        </div>
                    </div>


                    @if (ReasonHoldoverList.FirstOrDefault(x => x.Id == legalcaseDto.ReasonHoldoverId)?.Name == "Other")
                    {
                        <div class="row my-4 mb-2 align-items-center">
                            <div class="col-auto fw-semibold ">Other Reason:</div>
                            <div class="col">
                                @legalcaseDto.ReasonDescription
                            </div>
                        </div>

                    }
                    <div class="row my-4 mb-2 align-items-center">
                        <div class="col-auto fw-semibold">Explain:</div>
                        <div class="col">
                            @legalcaseDto.ExplainDescription
                        </div>
                    </div>

                </div>


            </div>
        }

    </div>
</div>

<!-- bottom Button Group -->
<div class="container my-4" style="position:fixed ; bottom:-17px;">
    <div>
        <hr />
    </div>
    <div class="container-fluid d-flex justify-content-between align-items-center">
        <!-- Left Button -->
        <button class="btn bg-navy text-white"  @onclick="Back" disabled="@(currentStep == 0)">← Back</button>

        <!-- Right Buttons -->
        <div class="d-flex gap-2" style="position:fixed; right:40px">
            @if (currentStep < lastStep)
            {
                <button class="btn btn-outline-warning" @onclick="ResetStep">Reset</button>
                <button class="btn bg-gold text-white next-btn" form="ReasonForm" disabled="@IsNextDisabled">
                    Next →
                </button>

            }
            @if (currentStep == lastStep)
            {
                <button class="btn btn-outline-warning" @onclick="ResetStep">Reset</button>
                <button class="btn btn-success" disabled="@IsNextDisabled" @onclick="Submit">Submit</button>
            }
        </div>
    </div>

</div>

@code {
    [Parameter] public string ClientId { get; set; }
    private CreateToEditLegalCaseModel legalcaseDto { get; set; }
    int currentStep = 0;
    int lastStep = 1;
    private EditContext editContext;
    // Used for conditional rendering
    private bool hasSearched = false;

    private TenantSearchModel tenantSearchModel = new();
  private BuildingSearchModel buildingSearchModel = new();
    private string searchtenantText = "";
    private string searchbuildingText = "";
      private List<EditToBuildingDto> filteredBuildingList = new();
    private List<EditToTenantDto> filteredTenantList = new();
    private CreateToLandLordDto? selectedLandlord;
    private CreateToTenantDto? selectedTenant;
    private bool isLandlordSelected = false;
    private bool isBuildingSelected = false;
    private bool isTenantSelected = false;
    private LandlordWithBuildings? landlordDetails;
    private EditToBuildingDto? buildingDetails;
    private EditToTenantDto? TenantDetails;

    private EditToTenantDto tenantDto = new EditToTenantDto();
    private EditToLandlordDto landLordDto = new EditToLandlordDto();
    private EditToBuildingDto buildingDto = new EditToBuildingDto();

    private EditToClientDto clientDto = new EditToClientDto();

    private List<CreateToTenantDto> matchedTenants = new List<CreateToTenantDto>();
    private List<CreateToLandLordDto> matchedLandLords = new List<CreateToLandLordDto>();
    private List<CreateToClientDto> matchedClients = new List<CreateToClientDto>();
    private List<CreateToBuildingDto> matchedBuilding = new List<CreateToBuildingDto>();
    private bool showSuggestions = false;

    public List<ReasonHoldover> ReasonHoldoverList = new();
    public List<IsUnitIllegal> IsUnitIllegalList = new();
    private List<RegulationStatus> RegulationList = new();
    private List<LandlordType> LandLordTypeList = new();
    private List<CaseType> CaseTypeList = new();
    private List<TenancyType> TenancyTypeList = new();
    private List<RenewalStatus> RenewalStatusList = new();
    private List<DateRent> DateRentList = new();
    private List<EditToBuildingDto> selectedBuildings = new();


    private string SelectedCaseTypeName =>
        CaseTypeList.FirstOrDefault(x => x.Id == legalcaseDto.CaseTypeId)?.Name;

    protected override async Task OnInitializedAsync()
    {
        legalcaseDto = new CreateToEditLegalCaseModel();
        editContext = new EditContext(legalcaseDto);
        ReasonHoldoverList = await ReasonHoldoverRepository.GetAllTReasonHoldover();
        IsUnitIllegalList = await UnitIllegalRepository.GetAllUnitIllegal();
        RegulationList = await RegulationStatusRepository.GetAllRegulationStatus();
        LandLordTypeList = await LandlordTypeRepository.GetAllLandLordType();
        TenancyTypeList = await TenancyTypeRepository.GetAllTenancyType();
        RenewalStatusList = await RenewalStatusRepository.GetAllRenewalStatus();
        DateRentList = await DateRentRepository.GetAllDateRent();
        legalcaseDto.ClientId = Guid.Parse(ClientId);
        CaseTypeList = await CaseTypeRepository.GetAllCaseType();
        var holdoverCase = CaseTypeList.FirstOrDefault(x => x.Name == "Holdover");
        if (holdoverCase != null)
        {
            legalcaseDto.CaseTypeId = holdoverCase.Id;
        }

        occupants.Add(new AdditionalOccupantDto());


    }




    List<string> stepTitles = new() {
        "Create", "Review & Submit"

    };


    private List<AdditionalOccupantDto> occupants = new()
    {
        new AdditionalOccupantDto()
    };

    private void AddTenant(AdditionalOccupantDto current)
    {
        if (!current.IsVisible)
        {
            current.IsVisible = true; // inputs dikhao
            occupants.Add(new AdditionalOccupantDto()); // fresh row add karo
        }
    }

    private void RemoveTenant(AdditionalOccupantDto current)
    {
        if (occupants.Contains(current))
        {
            occupants.Remove(current);
        }

        // agar sab rows remove ho gayi ho to ek fresh + row add karo
        if (!occupants.Any())
        {
            occupants.Add(new AdditionalOccupantDto());
        }
    }

    private void Next()
    {
        currentStep++;
    }
    private bool IsNextDisabled =>
        (currentStep == 0 && (
            TenantDetails == null ||
            string.IsNullOrWhiteSpace(TenantDetails.FirstName)
        ));

    private void OnBottomNextClicked()
    {

        var editContext = new EditContext(legalcaseDto);
        if (editContext.Validate())
        {
            Next();
        }
    }


    private async Task HandleTenantInput(ChangeEventArgs e)
    {
        searchtenantText = e?.Value?.ToString() ?? "";
        hasSearched = true;

        if (!string.IsNullOrWhiteSpace(searchtenantText) && legalcaseDto.ClientId != Guid.Empty)
        {
            filteredTenantList = await _tenantService.SearchTenantsAsync(searchtenantText, legalcaseDto.ClientId);
        }
        else
        {
            filteredTenantList.Clear();
        }
    }


private async Task HandleBuildingInput(ChangeEventArgs e)
{
    searchbuildingText = e?.Value?.ToString() ?? "";
    hasSearched = true;

    if (!string.IsNullOrWhiteSpace(searchbuildingText) && TenantDetails.Landlord != null)
    {
        filteredBuildingList = await _buildingService.SearchBuildingByCode(
            searchbuildingText,
            TenantDetails.Landlord.Id,      
            TenantDetails.Building.Id      
        );
    }
    else
    {
        filteredBuildingList.Clear();
    }
}


    private async Task SelectBuilding(Guid buildingId)
    {
        var building = await _buildingService.GetBuildingByIdAsync(buildingId);

        if (building != null && !selectedBuildings.Any(b => b.Id == building.Id))
        {
            selectedBuildings.Add(building);

            // Update OtherBuildingId with comma separated IDs
            var ids = selectedBuildings.Select(b => b.Id.ToString());
            legalcaseDto.OtherPropertiesBuildingId = string.Join(",", ids);
        }

        searchbuildingText = "";
        filteredBuildingList.Clear();
        hasSearched = false;
    }

    private void RemoveBuilding(Guid buildingId)
    {
        var buildingToRemove = selectedBuildings.FirstOrDefault(b => b.Id == buildingId);
        if (buildingToRemove != null)
        {
            selectedBuildings.Remove(buildingToRemove);
            UpdateOtherBuildingIds();
        }
    }

    private void UpdateOtherBuildingIds()
    {
        var ids = selectedBuildings.Select(b => b.Id.ToString());
        legalcaseDto.OtherPropertiesBuildingId = string.Join(",", ids);
    }


    private async Task SelectTenant(Guid id)
    {
        TenantDetails = await _tenantService.GetByIdAsync(id);

        if (TenantDetails != null)
        {
            var fullName = $"{TenantDetails.FirstName} {TenantDetails.LastName}";
            searchtenantText = fullName;
            tenantSearchModel.SelectedTenant = fullName;

            // ✅ Create and assign tenantDto properly
            tenantDto = new EditToTenantDto
                {
                    Id = TenantDetails.Id,
                    FirstName = TenantDetails.FirstName,
                    LastName = TenantDetails.LastName,
                    SSN = TenantDetails.SSN,
                    Phone = TenantDetails.Phone,
                    Email = TenantDetails.Email,
                    LanguageId = TenantDetails.LanguageId,
                    
                    HasPossession = TenantDetails.HasPossession,
                    HasRegulatedTenancy = TenantDetails.HasRegulatedTenancy,
                  
                    AdditioalTenants = TenantDetails.AdditioalTenants,
                    OtherOccupants = TenantDetails.OtherOccupants,
                
                    TenantRecord = TenantDetails.TenantRecord,
                    HasPriorCase = TenantDetails.HasPriorCase,
                    TenancyTypeId = TenantDetails.TenancyTypeId,
                    RenewalOffer = TenantDetails.RenewalOffer,
                     RentDueEachMonthOrWeekId = TenantDetails.RentDueEachMonthOrWeekId,
                    SocialServices = TenantDetails.SocialServices,
                    MonthlyRent = TenantDetails.MonthlyRent,
                    LastMonthWeekRentPaid = TenantDetails.LastMonthWeekRentPaid,
                    TenantShare = TenantDetails.TenantShare,
                    ERAPPaymentReceivedDate = TenantDetails.ERAPPaymentReceivedDate,
                    UnitOrApartmentNumber = TenantDetails.UnitOrApartmentNumber,
                    TotalRentOwed = TenantDetails.TotalRentOwed,
                    IsUnitIllegalId = TenantDetails.IsUnitIllegalId,
                    BuildingId = TenantDetails.BuildingId,
                    Building = TenantDetails.Building,
                    Landlord = TenantDetails.Landlord,



                };
        }



        isTenantSelected = true;
        searchtenantText = "";
        filteredTenantList.Clear();
        hasSearched = false;
    }


    private void ResetStep()
    {
        switch (currentStep)
        {

            case 0:
                TenantDetails = null;
                isTenantSelected = false;
                searchtenantText = string.Empty;
                filteredTenantList?.Clear();
                break;

        }

        StateHasChanged();
    }

    void SaveAsDraft() => Console.WriteLine("Saving Draft...");

    void Back() => currentStep--;


    private async Task Submit()
    {
        spinnerservice.Show();
        var result = false;


        var authState = await _authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        var userIdClaim = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value;

        if (!string.IsNullOrEmpty(userIdClaim) && Guid.TryParse(userIdClaim, out Guid userGuid))
        {
            legalcaseDto.CreatedBy = userGuid;
        }
        else
        {
            // unauthenticated user
            legalcaseDto.CreatedBy = Guid.Empty;
        }

        if (legalcaseDto == null || legalcaseDto.Id == Guid.Empty)
        {
            legalcaseDto.Id = Guid.NewGuid();
            legalcaseDto.LandLordId = TenantDetails.Landlord?.Id ?? Guid.Empty;
            legalcaseDto.BuildingId = TenantDetails.Building?.Id ?? Guid.Empty;
            legalcaseDto.TenantId = TenantDetails?.Id ?? Guid.Empty;
            legalcaseDto.IsUnitIllegalId = TenantDetails?.IsUnitIllegalId ?? Guid.Empty;
            legalcaseDto.TenantRecord = TenantDetails?.TenantRecord;
            legalcaseDto.RenewalOffer = TenantDetails?.RenewalOffer;
            legalcaseDto.HasPossession = TenantDetails?.HasPossession;
            legalcaseDto.OtherOccupants = TenantDetails?.OtherOccupants;
            legalcaseDto.HasPossession = TenantDetails?.HasPossession;
            legalcaseDto.RentDueEachMonthOrWeekId = TenantDetails?.RentDueEachMonthOrWeekId;
            legalcaseDto.MonthlyRent = TenantDetails?.MonthlyRent;
            legalcaseDto.TenantShare = TenantDetails?.TenantShare;
            legalcaseDto.SocialServices = TenantDetails?.SocialServices;
            legalcaseDto.LastMonthWeekRentPaid = TenantDetails?.LastMonthWeekRentPaid;
            legalcaseDto.TotalRentOwed = TenantDetails?.TotalRentOwed;
            legalcaseDto.SocialServices = TenantDetails?.SocialServices;
            legalcaseDto.IsERAPPaymentReceived = TenantDetails?.IsERAPPaymentReceived;
            legalcaseDto.ERAPPaymentReceivedDate = TenantDetails?.ERAPPaymentReceivedDate;
            legalcaseDto.TenancyTypeId = TenantDetails?.TenancyTypeId ?? Guid.Empty;
            legalcaseDto.RegulationStatusId = TenantDetails.Building.RegulationStatusId ?? Guid.Empty;
            legalcaseDto.LandlordTypeId = TenantDetails?.Landlord.LandlordTypeId ?? Guid.Empty;
            legalcaseDto.ClientId = Guid.Parse(ClientId);
            legalcaseDto.CaseTypeId = legalcaseDto.CaseTypeId;
            legalcaseDto.Attrney = legalcaseDto.Attrney;
            legalcaseDto.OralEnd = legalcaseDto.OralEnd;
            legalcaseDto.OralStart = legalcaseDto.OralStart;
            legalcaseDto.WrittenLease = legalcaseDto.WrittenLease;
            legalcaseDto.DateTenantMoved = legalcaseDto.DateTenantMoved;
            legalcaseDto.RenewalStatusId = legalcaseDto.RenewalStatusId;
             legalcaseDto.AttrneyContactInfo = legalcaseDto.AttrneyContactInfo;
               legalcaseDto.Firm = legalcaseDto.Firm;
               
            legalcaseDto.ReasonHoldoverId = legalcaseDto.ReasonHoldoverId;
            legalcaseDto.ExplainDescription = legalcaseDto.ExplainDescription;
            legalcaseDto.ReasonDescription = legalcaseDto.ReasonDescription;
            legalcaseDto.AdditionalOccupants = occupants
   .Where(x => x.IsVisible && !string.IsNullOrWhiteSpace(x.Name))
   .ToList();

            result = await _legalCaseService.AddLegalCasesAsync(legalcaseDto);
            _dataService.CaseName = null;
        }


        if (result)
        {
            nav.NavigateTo("/cases?success=true");
        }

    }

    private CancellationTokenSource _cts;
    private async Task OnTenantCodeChanged(ChangeEventArgs e)
    {
        _cts?.Cancel(); // cancel previous call
        _cts = new CancellationTokenSource();
        var token = _cts.Token;

        var input = e.Value?.ToString() ?? string.Empty;
        tenantDto.TenantCode = input;

        if (input.Length >= 3)
        {
            await Task.Delay(1000, token); // debounce
            matchedTenants = await _tenantService.SearchTenantbyCode(input);
            showSuggestions = matchedTenants.Any();
        }
        else
        {
            showSuggestions = false;
        }
    }



    private async Task OnBuildingChanged(ChangeEventArgs e)
    {
        _cts?.Cancel(); // cancel previous call
        _cts = new CancellationTokenSource();
        var token = _cts.Token;

        var input = e.Value?.ToString() ?? string.Empty;
        buildingDto.ApartmentCode = input;

        if (input.Length >= 3)
        {
            await Task.Delay(1000, token); // debounce
                                           // var apartnent = await _apartmentService.SearchBuildingByCode(input);
                                           // matchedBuilding = apartnent.Where(e => e.Id == Guid.Parse(ClientId)).ToList();
            showSuggestions = matchedBuilding.Any();
        }
        else
        {
            showSuggestions = false;
        }
    }

}

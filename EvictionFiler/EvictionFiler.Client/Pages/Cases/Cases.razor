@page "/createcase/{ClientId}"
@using EvictionFiler.Application.DTOs
@using EvictionFiler.Application.DTOs.ApartmentDto
@using EvictionFiler.Application.DTOs.ClientDto
@using EvictionFiler.Application.DTOs.LandLordDto
@using EvictionFiler.Application.DTOs.TenantDto
@using EvictionFiler.Client.Services
@inject LandLordService _landlordService
@inject ApartmentService _apartmentService
@inject LegalCasesService _legalCaseService
@inject TenantService _tenantService
@inject ClientService _clientService
@inject NavigationManager nav
@inject NavigationDataService _dataService
@rendermode InteractiveAuto
<style>
    .stepper-row::-webkit-scrollbar {
    height: 3px; /* thinner scrollbar */
    }

    .stepper-row::-webkit-scrollbar-thumb {
    background-color: #888;
    border-radius: 10px;
    }

    .stepper-row::-webkit-scrollbar-track {
    background: transparent;
    }

    /* For Firefox */
    .stepper-row {
    scrollbar-width: thin;
    scrollbar-color: #888 transparent;
    }

    .stepper-container {
    /*   background-color: #F7F6F3; */
    padding: 10px 20px;
    border-radius: 6px;
    /*   box-shadow: 0 1px 3px rgba(0,0,0,0.1); */
    overflow-x: auto;
    white-space: nowrap;
    }

    .stepper-row {
    display: flex;
    align-items: center;
    gap: 5px;
    min-width: max-content;
    overflow-x: auto; /* move it here */
    white-space: nowrap;
    }


    .stepper-step {
    display: flex;
    align-items: center;
    font-size: 14px;
    font-weight: 500;
    gap: 6px;
    }

    .stepper-step .circle {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 13px;
    flex-shrink: 0;
    }

    .circle.done {
    background-color: #5cb85c;
    color: white;
    }

    .circle.active {
    background-color: #1F365D;
    color: white;
    }

    .circle.upcoming {
    background-color: #ccc;
    color: white;
    }

    .text.done,
    .text.active {
    color: #007bff;
    font-weight: 600;
    }

    .text.upcoming {
    color: #aaa;
    }

    .arrow {
    color: #ccc;
    margin: 0 8px;
    }

    .nav-buttons {
    display: flex;
    gap: 6px;
    }

    .circle.done {
    background-color: #D4A844;
    color: white;
    }

    .text.done,
    .text.active {
    color: #1F365D;
    font-weight: 600;
    }
</style>

<!-- Step Tracker + Navigation Buttons -->
<div class="stepper-container d-flex justify-content-between align-items-center flex-wrap v-100" style="scrollbar-width: thin;">
    <!-- Stepper Tracker -->
    <div class="stepper-row d-flex align-items-center">

        @for (int i = 0; i < stepTitles.Count; i++)
        {
            var isDone = i < currentStep;
            var isActive = i == currentStep;

            var circleClass = isDone ? "circle done"
            : isActive ? "circle active"
            : "circle upcoming";

            var textClass = isDone ? "text done"
            : isActive ? "text active"
            : "text upcoming";

            <div class="stepper-step">
                <div class="@circleClass">
                    @(isDone ? "✓" : (i + 1).ToString())
                </div>
                <span class="@textClass">@stepTitles[i]</span>

                @if (i < stepTitles.Count - 1)
                {
                    <span class="arrow">→</span>
                }
            </div>
        }
    </div>

</div>

<!-- Form Content -->
<div class="container pt-4">
    @if (currentStep == 0)
    {
        <div class="mx-auto p-4 border rounded shadow-sm bg-white" style="max-width: 800px;">
            <h5 class="text-center text-navy fw-bold">Basic Information</h5>
            <hr class="border-gold mb-4" />

            <!-- Client Role + Representative Name -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label fw-semibold text-navy">Client Role</label>
                    <select class="form-select" @bind="legalcaseDto.ClientRole">
                        <option value="">-- Select Client Role --</option>
                        <option value="Landlord/Owner">Landlord/Owner</option>
                        <option value="Tenant/Occupant">Tenant/Occupant</option>
                        <option value="Property Manager">Property Manager</option>
                        <option value="Legal Representative">Legal Representative</option>
                    </select>
                </div>

                @if (legalcaseDto.ClientRole == "Legal Representative")
                {
                    <div class="col-md-6">
                        <label class="form-label fw-semibold text-navy">Representative Name</label>
                        <input type="text" class="form-control" @bind="legalcaseDto.LegalRepresentative" placeholder="Enter Representative Name" />
                    </div>
                }
            </div>

            <!-- Case Type + Other Case Type -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label fw-semibold text-navy">Case Type</label>
                    <select class="form-select" @bind="otherCaseType">
                        <option value="">-- Select Case Type --</option>
                        <option value="Nonpayment">Nonpayment</option>
                        <option value="Holdover">Holdover</option>
                        <option value="Licensee">Licensee</option>
                        <option value="Lockout">Lockout</option>
                        <option value="HP Action">HP Action</option>
                        <option value="For Good Cause (6-A)">For Good Cause (6-A)</option>
                        <option value="Succession">Succession</option>
                        <option value="Other">Other</option>
                    </select>
                </div>

                @if (otherCaseType == "Other")
                {
                    <div class="col-md-6">
                        <label class="form-label fw-semibold text-navy">Other Case Type</label>
                        <input type="text" class="form-control" @bind="legalcaseDto.CaseType" placeholder="Enter case type" />
                    </div>
                }
            </div>
        </div>
    }

</div>

@if (currentStep == 1)
{
    <div class="mx-auto p-4 border rounded shadow-sm bg-white" style="max-width: 800px;">
        <h5 class="text-center text-navy fw-bold">Tenant Information</h5>
        <hr class="border-gold mb-4" />

        <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label">Tenant Code</label>
                <input type="text" class="form-control"
                @bind="tenantDto.TenantCode"
                @oninput="OnTenantCodeChanged"
                placeholder="Enter Tenant Code" />

                @if (showSuggestions)
                {

                    <ul class="list-group position-absolute " style="z-index: 1000; max-height: 200px; width:30%; overflow-y: auto;">
                        @foreach (var tenant in matchedTenants)
                        {
                            <li class="list-group-item list-group-item-action"
                            @onclick="@(() => SelectTenant(tenant))">
                                @tenant.TenantCode - @tenant.Name
                            </li>
                        }
                    </ul>

                }
            </div>
            @* <div class="col-md-2">
                <button class="btn btn-outline-warning" @onclick="SearchTenant">LookUp</button>
            </div> *@
        </div>
        <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label">Full Name</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                    <input type="text" class="form-control" @bind="tenantDto.Name" placeholder="Enter full name" />
                </div>
            </div>

            <div class="col-md-6">
                <label class="form-label">SSN</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-shield-lock"></i></span>
                    <input type="text" class="form-control" @bind="tenantDto.SSN" placeholder="Enter SSN" />
                </div>
            </div>

            <div class="col-md-6">
                <label class="form-label">Phone</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                    <input type="tel" class="form-control" @bind="tenantDto.Phone" placeholder="Enter phone number" />
                </div>
            </div>

            <div class="col-md-6">
                <label class="form-label">Email</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i>@@</i>

                    </span>
                    <input type="email" class="form-control" @bind="tenantDto.Email" placeholder="Enter email" />
                </div>
            </div>

            <div class="col-md-6">
                <label class="form-label">Language</label>
                <input type="text" class="form-control" @bind="tenantDto.Language" placeholder="Enter language" />
            </div>

            <div class="col-md-6">
                <label class="form-label">Address</label>
                <input type="text" class="form-control" @bind="tenantDto.Address" placeholder="Enter address" />
            </div>

            <div class="col-md-4">
                <label class="form-label">Apt #</label>
                <input type="text" class="form-control" @bind="tenantDto.Apt" placeholder="Enter Apt #" />
            </div>

            <div class="col-md-4">
                <label class="form-label">Borough</label>
                <input type="text" class="form-control" @bind="tenantDto.Borough" placeholder="Enter borough" />
            </div>

            <div class="col-md-4">
                <label class="form-label">Rent ($)</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i>$</i>

                    </span>
                    <input type="text" class="form-control" @bind="tenantDto.Rent" placeholder="Enter rent amount" />
                </div>
            </div>

            <div class="col-md-6">
                <label class="form-label">Lease Status</label>
                <input type="text" class="form-control" @bind="tenantDto.LeaseStatus" placeholder="Enter lease status" />
            </div>
        </div>
    </div>
}

@if (currentStep == 2)
{
    <div class="mx-auto p-4 border rounded shadow-sm bg-white" style="max-width: 800px;">
        <h5 class="text-center text-navy fw-bold">Landlord Information</h5>
        <hr class="border-gold mb-4" />

        <div class="row g-3">

            <div class="col-md-6">
                <label class="form-label">LandLord Code</label>
                <input type="text" class="form-control"
                @bind="landLordDto.LandLordCode"
                @oninput="OnLandLordCodeChanged"
                placeholder="Enter Landlord Code" />

                @if (showSuggestions)
                {

                    <ul class="list-group position-absolute " style="z-index: 1000; max-height: 200px; width:30%; overflow-y: auto;">
                        @foreach (var landlord in matchedLandLords)
                        {
                            <li class="list-group-item list-group-item-action"
                            @onclick="@(() => SelectLandLord(landlord))">
                                @landlord.LandLordCode - @landlord.Name
                            </li>
                        }
                    </ul>

                }
            </div>

            @* <div class="col-md-2">
                <button class="btn btn-outline-warning" @onclick="SearchLandLord">LookUp</button>
            </div> *@
        </div>
        <div class="row g-3">
            <!-- Name/Entity -->
            <div class="col-md-6">
                <label class="form-label">Name/Entity</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-building"></i></span>
                    <input type="text" class="form-control" @bind="landLordDto.Name" placeholder="Enter name/entity" />
                </div>
            </div>

            <!-- EIN/SSN (last 4) -->
            <div class="col-md-6">
                <label class="form-label">EIN/SSN (last 4)</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-shield-lock"></i></span>
                    <input type="text" class="form-control" @bind="landLordDto.EINorSSN" placeholder="Enter EIN/SSN" />
                </div>
            </div>

            <!-- Phone -->
            <div class="col-md-6">
                <label class="form-label">Phone</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                    <input type="text" class="form-control" @bind="landLordDto.Phone" placeholder="Enter phone number" />
                </div>
            </div>

            <!-- Email -->
            <div class="col-md-6">
                <label class="form-label">Email</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                    <input type="email" class="form-control" @bind="landLordDto.Email" placeholder="Enter email" />
                </div>
            </div>

            <!-- Mailing Address -->
            <div class="col-md-6">
                <label class="form-label">Mailing Address</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                    <input type="text" class="form-control" @bind="landLordDto.MaillingAddress" placeholder="Enter mailing address" />
                </div>
            </div>

            <!-- Attorney (if any) -->
            <div class="col-md-6">
                <label class="form-label">Attorney (if any)</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-person-bounding-box"></i></span>
                    <input type="text" class="form-control" @bind="landLordDto.Attorney" placeholder="Enter attorney name" />
                </div>
            </div>

            <!-- Firm -->
            <div class="col-md-6">
                <label class="form-label">Firm</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-briefcase"></i></span>
                    <input type="text" class="form-control" @bind="landLordDto.Firm" placeholder="Enter firm name" />
                </div>
            </div>

            <!-- Is Corporate Owner -->
            <div class="col-md-6">
                <label class="form-label d-block">Is Corporate Owner</label>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="corpOwner" @bind="checkbox">
                    <label class="form-check-label">Yes</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="corpOwner" @bind="checkbox">
                    <label class="form-check-label">No</label>
                </div>
            </div>

            <!-- Registered Agent -->
            <div class="col-md-6">
                <label class="form-label">Registered Agent</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-person-vcard"></i></span>
                    <input type="text" class="form-control" @bind="landLordDto.RegisteredAgent" placeholder="Enter agent name" />
                </div>
            </div>
        </div>
    </div>
}



@if (currentStep == 3)
{
    <div class="mx-auto p-4 border rounded shadow-sm bg-white" style="max-width: 800px;">
        <h5 class="text-center text-navy fw-bold">Property Manager / Building Manager</h5>
        <hr class="border-gold mb-4" />

        @* <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label">Client Code</label>
                <input type="text" class="form-control"
                @bind="clientDto.ClientCode"
                @oninput="OnClientCodeChanged"
                placeholder="Enter Landlord Code" />

                @if (showSuggestions)
                {

                    <ul class="list-group position-absolute " style="z-index: 1000; max-height: 200px; width:30%; overflow-y: auto;">
                        @foreach (var client in matchedClients)
                        {
                            <li class="list-group-item list-group-item-action"
                            @onclick="@(() => SelectClient(client))">
                                @client.ClientCode - @client.Name
                            </li>
                        }
                    </ul>

                }
            </div> *@
        @* <div class="col-md-2">
                <button class="btn btn-outline-warning" @onclick="SearchTenant()">LookUp</button>
            </div> 
        </div>*@
        <div class="row g-3">
            <!-- Company -->
            <div class="col-md-6">
                <label class="form-label">Company</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-building"></i></span>
                    <input type="text" class="form-control" @bind="legalcaseDto.Company" placeholder="Enter company name" />
                </div>
            </div>

            <!-- Contact -->
            <div class="col-md-6">
                <label class="form-label">Contact</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                    <input type="text" class="form-control" @bind="legalcaseDto.Contact" placeholder="Enter contact name" />
                </div>
            </div>

            <!-- Phone/Email -->
            <div class="col-md-6">
                <label class="form-label">Phone / Email</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                    <input type="text" class="form-control" @bind="legalcaseDto.PhoneorEmail" placeholder="Enter phone or email" />
                </div>
            </div>

            <!-- MDR # -->
            <div class="col-md-6">
                <label class="form-label">MDR #</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-hash"></i></span>
                    <input type="text" class="form-control" @bind="legalcaseDto.MDRNo" placeholder="Enter MDR number" />
                </div>
            </div>

            <!-- Residential Units -->
            <div class="col-md-6">
                <label class="form-label">Residential Units</label>
                <input type="text" class="form-control" @bind="legalcaseDto.ResidentalUnits" placeholder="Enter number" />
            </div>

            <!-- Commercial Units -->
            <div class="col-md-6">
                <label class="form-label">Commercial Units</label>
                <input type="text" class="form-control" @bind="legalcaseDto.CommercialUnits" placeholder="Enter number" />
            </div>

            <!-- DHCR Registered -->
            <div class="col-md-6">
                <label class="form-label d-block">All Units registered with DHCR?</label>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="dhcr" @bind="dhcrRegistered" />
                    <label class="form-check-label">Yes</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="dhcr" @bind="dhcrRegistered" />
                    <label class="form-check-label">No</label>
                </div>
            </div>

            <!-- HPD Violations -->
            <div class="col-md-6">
                <label class="form-label d-block">HPD Violations?</label>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="hpd" @bind="hpdViolations" />
                    <label class="form-check-label">Yes</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="hpd" @bind="hpdViolations" />
                    <label class="form-check-label">No</label>
                </div>
            </div>
        </div>
    </div>
}
@if (currentStep == 4)
{
    <div class="mx-auto p-4 border rounded shadow-sm bg-white" style="max-width: 800px;">
        <h5 class="text-center text-navy fw-bold">Building / Property Details</h5>
        <hr class="border-gold mb-4" />

        <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label">Building Code</label>
                <input type="text" class="form-control"
                @bind="apartmentDto.ApartmentCode"
                @oninput="OnBuildingChanged"
                placeholder="Enter Building Code" />

                @if (showSuggestions)
                {

                    <ul class="list-group position-absolute " style="z-index: 1000; max-height: 200px; width:30%; overflow-y: auto;">
                        @foreach (var landlord in matchedBuilding)
                        {
                            <li class="list-group-item list-group-item-action"
                            @onclick="@(() => SelectBuilding(landlord))">
                                @landlord.ApartmentCode
                            </li>
                        }
                    </ul>

                }
            </div>
            @* <div class="col-md-2">
                <button class="btn btn-outline-warning" @onclick="SearchTenant()">LookUp</button>
            </div> *@
        </div>
        <div class="row g-3">
            <!-- Address -->
            <div class="col-md-6">
                <label class="form-label">Address</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                    <input type="text" class="form-control" @bind="legalcaseDto.Address" placeholder="Enter property address" />
                </div>
            </div>

            <!-- Apt # -->
            <div class="col-md-6">
                <label class="form-label">Apt #</label>
                <input type="text" class="form-control" @bind="legalcaseDto.AptNo" placeholder="Enter Apt #" />
            </div>

            <!-- Borough -->
            <div class="col-md-6">
                <label class="form-label">Borough</label>
                <input type="text" class="form-control" @bind="legalcaseDto.Borough" placeholder="Enter borough" />
            </div>

            <!-- ZIP -->
            <div class="col-md-6">
                <label class="form-label">ZIP</label>
                <input type="text" class="form-control" @bind="legalcaseDto.ZIP" placeholder="Enter ZIP code" />
            </div>

            <!-- Class -->
            <div class="col-md-6">
                <label class="form-label">Class</label>
                <input type="text" class="form-control" @bind="legalcaseDto.Class" placeholder="Enter class" />
            </div>

            <!-- Year Built -->
            <div class="col-md-6">
                <label class="form-label">Year Built</label>
                <input type="text" class="form-control" @bind="legalcaseDto.YearBuilt" placeholder="Enter year" />
            </div>

            <!-- Heat/Hot Water -->
            <div class="col-md-6">
                <label class="form-label d-block">Heat / Hot Water</label>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="heatWater" @bind="heatWater" />
                    <label class="form-check-label">Yes</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="heatWater" @bind="heatWater" />
                    <label class="form-check-label">No</label>
                </div>
            </div>

            <!-- HPD Violations -->
            <div class="col-md-6">
                <label class="form-label d-block">HPD Violations?</label>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="hpd" @bind="hpdViolations" />
                    <label class="form-check-label">Yes</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="hpd" @bind="hpdViolations" />
                    <label class="form-check-label">No</label>
                </div>
            </div>
        </div>
    </div>
}


<!-- Button Group -->
<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center">
        <button class="btn bg-navy text-white" @onclick="Back" disabled="@(currentStep == 0)">← Back</button>

        <div class="d-flex gap-2">
            @if (currentStep > 0 && currentStep < lastStep)
            {
                <button class="btn btn-outline-warning" @onclick="SaveAsDraft">Save as Draft</button>
            }
            @if (currentStep < lastStep)
            {
                <button class="btn bg-gold text-white" @onclick="Next">Next →</button>
            }
            @if (currentStep == lastStep)
            {
                <button class="btn btn-success" @onclick="Submit"> Submit</button>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string ClientId { get; set; }

    int currentStep = 0;
    int lastStep = 4;

    List<string> stepTitles = new() {
        "Case & Role", "Tenant Info", "Landlord Info",
        "Manager Info", "Property Info",
        // "Eviction 6-A", "NYC Properties",
        // "Court Status", "Documents", "Declarations"
    };
    string first_name;
    string last_name;
    string gender = "male";
    string address;
    string phone;
    string code;
    string date;
    string month;
    string year;

    bool checkbox;
    bool checkbox_other;

    // Bank Info
    string bank;
    string branch;
    string email;
    string account_name;
    string account_number;
    string date_2;
    string month_2;
    string year_2;
    string selectedClientRole;
    string selectedCaseType;
    string otherCaseType;

    private string attorney;
    private string firm;
    private string registeredAgent;
    private string residentialUnits;
    private string commercialUnits;
    private string dhcrRegistered;
    private string hpdViolations;
    private string yearBuilt;
    private string heatWater;
    private string BuildingCode;

    private CreateTenantDto tenantDto = new CreateTenantDto();
    private CreateLandLordDto landLordDto = new CreateLandLordDto();
    private AddApartment apartmentDto = new AddApartment();
    private CreateEditLegalCaseModel legalcaseDto = new CreateEditLegalCaseModel();
    private CreateClientDto clientDto = new CreateClientDto();

    private List<CreateTenantDto> matchedTenants = new List<CreateTenantDto>();
    private List<CreateLandLordDto> matchedLandLords = new List<CreateLandLordDto>();
    private List<CreateClientDto> matchedClients = new List<CreateClientDto>();
    private List<AddApartment> matchedBuilding = new List<AddApartment>();
    private bool showSuggestions = false;




    void SaveAsDraft() => Console.WriteLine("Saving Draft...");
    void Next() => currentStep++;
    void Back() => currentStep--;



    protected override async Task OnInitializedAsync()
    {
        // AllClients = await _clientService.GetAllClientsAsync() ?? new();
        // await clientModal.Show(AllClients); // Open the popup on first load
    }

    // private void HandleClientSelected(Guid clientId)
    // {
    //     selectedClientId = clientId;

    //     // You can now use selectedClientId in form logic (e.g., load data, bind to DTO, etc.)
    //     Console.WriteLine($"Client selected: {clientId}");
    // }


    private async Task Submit()
    {
        var result = false;

        if (tenantDto == null || tenantDto.Id == Guid.Empty)
        {
            tenantDto.Id = Guid.NewGuid();
            await _tenantService.AddTenantAsync(tenantDto);
        }

        if (landLordDto == null || landLordDto.Id == Guid.Empty)
        {
            landLordDto.Id = Guid.NewGuid();
            //await _landlordService.AddLandLordAsync(landLordDto);
        }

        if (apartmentDto == null || apartmentDto.Id == Guid.Empty)
        {
            apartmentDto.Id = Guid.NewGuid();
            await _apartmentService.AddApartmentAsync(apartmentDto);
        }

        if (legalcaseDto == null || legalcaseDto.Id == Guid.Empty)
        {
            legalcaseDto.Id = Guid.NewGuid();
            legalcaseDto.LandLordId = landLordDto.Id;
            legalcaseDto.ApartmentId = apartmentDto.Id;
            legalcaseDto.TenantId = tenantDto.Id;
            legalcaseDto.ClientId = Guid.Parse(ClientId);
            legalcaseDto.CaseName = _dataService.CaseName;

            if (legalcaseDto.CaseType == null)
                legalcaseDto.CaseType = otherCaseType;

            result = await _legalCaseService.AddLegalCasesAsync(legalcaseDto);

            _dataService.CaseName = null;
        }

        if (result)
        {
            nav.NavigateTo("/cases");
        }
    }




    private CancellationTokenSource _cts;
    private async Task OnTenantCodeChanged(ChangeEventArgs e)
    {
        _cts?.Cancel(); // cancel previous call
        _cts = new CancellationTokenSource();
        var token = _cts.Token;

        var input = e.Value?.ToString() ?? string.Empty;
        tenantDto.TenantCode = input;

        if (input.Length >= 3)
        {
            await Task.Delay(1000, token); // debounce
            matchedTenants = await _tenantService.SearchTenantbyCode(input);
            showSuggestions = matchedTenants.Any();
        }
        else
        {
            showSuggestions = false;
        }
    }
    private void SelectTenant(CreateTenantDto selectedTenant)
    {
        tenantDto = selectedTenant;
        showSuggestions = false;
    }

    private async Task OnLandLordCodeChanged(ChangeEventArgs e)
    {
        _cts?.Cancel(); // cancel previous call
        _cts = new CancellationTokenSource();
        var token = _cts.Token;

        var input = e.Value?.ToString() ?? string.Empty;
        landLordDto.LandLordCode = input;

        if (input.Length >= 3)
        {
            await Task.Delay(1000, token); // debounce
            var landlord = await _landlordService.SearchLandlordByCode(input);
            matchedLandLords = landlord.Where(e => e.Id == Guid.Parse(ClientId)).ToList();
            showSuggestions = matchedLandLords.Any();
        }
        else
        {
            showSuggestions = false;
        }
    }
    private void SelectLandLord(CreateLandLordDto selectedTenant)
    {
        landLordDto = selectedTenant;
        showSuggestions = false;
    }

    private async Task OnClientCodeChanged(ChangeEventArgs e)
    {
        _cts?.Cancel(); // cancel previous call
        _cts = new CancellationTokenSource();
        var token = _cts.Token;

        var input = e.Value?.ToString() ?? string.Empty;
        clientDto.ClientCode = input;

        if (input.Length >= 3)
        {
            await Task.Delay(1000, token); // debounce
            matchedClients = await _clientService.SearchClientByCode(input);
            showSuggestions = matchedClients.Any();
        }
        else
        {
            showSuggestions = false;
        }
    }
    private void SelectClient(CreateClientDto selectedClient)
    {
        // legalcaseDto.Company = selectedClient.Name;

        showSuggestions = false;
    }

    private async Task OnBuildingChanged(ChangeEventArgs e)
    {
        _cts?.Cancel(); // cancel previous call
        _cts = new CancellationTokenSource();
        var token = _cts.Token;

        var input = e.Value?.ToString() ?? string.Empty;
        apartmentDto.ApartmentCode = input;

        if (input.Length >= 3)
        {
            await Task.Delay(1000, token); // debounce
            var apartnent = await _apartmentService.SearchBuildingByCode(input);
            matchedBuilding = apartnent.Where(e => e.Id == Guid.Parse(ClientId)).ToList();
            showSuggestions = matchedBuilding.Any();
        }
        else
        {
            showSuggestions = false;
        }
    }
    private void SelectBuilding(AddApartment selectedapartment)
    {
        legalcaseDto.Address = selectedapartment.Address_1 + ", " + selectedapartment.Address_2;
        legalcaseDto.ZIP = selectedapartment.Zipcode;
        legalcaseDto.Class = selectedapartment.PremiseType;
        apartmentDto.Id = selectedapartment.Id;
        showSuggestions = false;
    }
}

<div class="modal-backdrop fade @(IsVisible ? "show" : "")" style="display:@(IsVisible ? "block" : "none");"></div>

<div class="modal @(IsVisible ? "show d-block" : "")" tabindex="-1" style="display:@(IsVisible ? "block" : "none");">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow-sm rounded-3 border-0" style="background-color:#f8f9fa;">
            <div class="modal-header" style="background-color:#1F365D; color:white;">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close btn-close-white" @onclick="Cancel"></button>
            </div>
            <div class="modal-body">
                <p>@Message</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary btn-sm" style="background-color:#adb5bd; color:white;" @onclick="Cancel">Cancel</button>
                <button class="btn btn-primary btn-sm" style="background-color:#1F365D; color:white;" @onclick="Confirm">Delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; } = "Confirm Action";
    [Parameter] public string Message { get; set; } = "Are you sure?";
    [Parameter] public EventCallback OnConfirm { get; set; }

    private bool IsVisible { get; set; } = false;

    public void Show(string message)
    {
        Message = message;
        IsVisible = true;
        StateHasChanged();
    }

    private void Cancel()
    {
        IsVisible = false;
        StateHasChanged();
    }

    private async Task Confirm()
    {
        IsVisible = false;
        if (OnConfirm.HasDelegate)
            await OnConfirm.InvokeAsync(null);
    }
}

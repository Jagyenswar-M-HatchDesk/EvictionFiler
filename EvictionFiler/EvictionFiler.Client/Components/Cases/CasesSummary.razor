@using EvictionFiler.Application.DTOs
@using EvictionFiler.Application.DTOs.ClientDto
@using EvictionFiler.Domain.Entities.Master
@using EvictionFiler.Domian.Enums

<div class="p-3 border rounded-4 shadow bg-white mb-3">
    <h6 class="fw-bold text-muted">Live Summary</h6>

    <div class="d-flex flex-column mt-3 text-secondary small">

        @if (CurrentStep == Step.CaseAndclient)
        {
            <div class="d-flex justify-content-between">
                <span>Case Type</span>
                <span>@(CaseTypeList.FirstOrDefault(x => x.Id == LegalCase.CaseTypeId)?.Name ?? "-")</span>

            </div>
            <div class="d-flex justify-content-between">
                <span>Client</span>
                <span>
                    @{
                        var client = ClientList.FirstOrDefault(x => x.Id == LegalCase.ClientId);
                    }
                    @(client != null ? $"{client.FirstName} {client.LastName}" : "-")
                </span>

            </div>

        }

        @*         @if (CurrentStep == Step.Client)
{

                <div class="d-flex justify-content-between">
                    <span>Client Name</span><span>@(string.IsNullOrWhiteSpace(LegalCase.ClientName) ? "-" : LegalCase.ClientName)</span>
                </div>
                <div class="d-flex justify-content-between">
                    <span>Phone</span><span>@(string.IsNullOrWhiteSpace(LegalCase.ClientPhone) ? "-" : LegalCase.ClientPhone)</span>
                </div>
                <div class="d-flex justify-content-between">
                    <span>Email</span><span>@(string.IsNullOrWhiteSpace(LegalCase.ClientEmail) ? "-" : LegalCase.ClientEmail)</span>
                </div>


}
 *@

        @if (CurrentStep == Step.Landlord)
        {
            <div class="d-flex justify-content-between">
                <span>Landlord / Owner Name</span><span>@(string.IsNullOrWhiteSpace(LegalCase.landlordName) ? "-" : LegalCase.landlordName)</span>
            </div>
            <div class="d-flex justify-content-between">
                <span>Contact Person</span><span>@(string.IsNullOrWhiteSpace(LegalCase.ContactPersonName) ? "-" : LegalCase.ContactPersonName)</span>
            </div>
            <div class="d-flex justify-content-between">
                <span>Address</span><span>@(string.IsNullOrWhiteSpace(LegalCase.LandlordAddress) ? "-" : LegalCase.LandlordAddress)</span>
            </div>
            <div class="d-flex justify-content-between">
                <span>Attorney Of Record </span><span>@(string.IsNullOrWhiteSpace(LegalCase.AttorneyOfRecord) ? "-" : LegalCase.AttorneyOfRecord)</span>
            </div>
            <div class="d-flex justify-content-between">
                <span>Law firm</span><span>@(string.IsNullOrWhiteSpace(LegalCase.LawFirm) ? "-" : LegalCase.LawFirm)</span>
            </div>

        }

        @if (CurrentStep == Step.Building)
        {
            <div class="d-flex justify-content-between">
                <span>MDR</span>
                <span>@(string.IsNullOrWhiteSpace(LegalCase.Mdr) ? "-" : LegalCase.Mdr)</span>

            </div>
            <div class="d-flex justify-content-between">
                <span>Units</span>
                <span>@(string.IsNullOrWhiteSpace(LegalCase.Units) ? "-" : LegalCase.Units)</span>

            </div>
            <div class="d-flex  justify-content-between gap-2">
                <span>BuildingAddress</span>
                <span>@(string.IsNullOrWhiteSpace(LegalCase.BuildingAddress) ? "-" : LegalCase.BuildingAddress)</span>

            </div>
            <div class="d-flex justify-content-between">
                <span>Regulation</span>
                <span>@(RegulationList.FirstOrDefault(x => x.Id == LegalCase.RegulationStatusId)?.Name ?? "-")</span>
            </div>
        }

        @if (CurrentStep == Step.Tenant)
        {
            <div class="d-flex justify-content-between">
                <span>TenantName</span>
                <span>@(string.IsNullOrWhiteSpace(LegalCase.TenantName) ? "-" : LegalCase.TenantName)</span>

            </div>
            <div class="d-flex justify-content-between">
                <span>UnitNumber</span>
                <span>@(string.IsNullOrWhiteSpace(LegalCase.ApartmentNumber) ? "-" : LegalCase.ApartmentNumber)</span>

            </div>
            <div class="d-flex justify-content-between">
                <span>Tenant Record</span>
                <span>@(LegalCase.TenantRecord.HasValue ? (LegalCase.TenantRecord.Value ? "Yes" : "No") : "-")</span>

            </div>
            <div class="d-flex justify-content-between">
                <span>HasPossession</span>
                <span>@(LegalCase.HasPossession.HasValue ? (LegalCase.HasPossession.Value ? "Yes" : "No") : "-")</span>


            </div>
            @* <div class="d-flex justify-content-between">
                <span>Other Occupants</span>
                <span>@(LegalCase.OtherOccupants.HasValue ? (LegalCase.OtherOccupants.Value ? "Yes" : "No") : "-")</span>

            </div> *@
            <div class="d-flex justify-content-between">
                <span>IsUnitIlligal</span>
                <span>@(IsUnitIllegalList.FirstOrDefault(x => x.Id == LegalCase.IsUnitIllegalId)?.Name ?? "-")</span>
            </div>
        }

        @if (CurrentStep == Step.Rent)
        {
            <div class="d-flex justify-content-between">
                <span>Date Rent is Due</span>
                <span>@DateRentList.FirstOrDefault(x => x.Id == LegalCase.RentDueEachMonthOrWeekId)?.Name</span>
            </div>
            
            <div class="d-flex justify-content-between">
                <span>Monthly Rent</span>
                <span>@(LegalCase.MonthlyRent.HasValue ? LegalCase.MonthlyRent.Value.ToString("F2") : "-")</span>


            </div>
            <div class="d-flex justify-content-between">
                <span>Tenant Share</span>
                <span>@(LegalCase.TenantShare.HasValue ? LegalCase.TenantShare.Value.ToString("F2") : "-")</span>


            </div>
            <div class="d-flex justify-content-between">
                <span>Total Rent</span>
                <span>@(LegalCase.TotalOwed.HasValue ? LegalCase.TotalOwed.Value.ToString("F2") : "-")</span>
            </div>
            <div class="d-flex justify-content-between">
                <span>Last Month/Week Rent Paid</span>
                <span>@(string.IsNullOrWhiteSpace(LegalCase.LastRentPaid) ? "-" : LegalCase.LastRentPaid)</span>
            </div>
            <div class="d-flex justify-content-between">
                <span>Social Services</span>
                <span>@(string.IsNullOrWhiteSpace(LegalCase.SocialService) ? "-" : LegalCase.SocialService)</span>

            </div>
            
        }

        @if (CurrentStep == Step.Terms)
        {
            <div class="d-flex justify-content-between">
                <span>Written Lease</span>
                <span>@(LegalCase.WrittenLease.HasValue ? (LegalCase.WrittenLease.Value ? "Yes" : "No") : "-")</span>

            </div>
            <div class="d-flex justify-content-between">
                <span>Oral Aggrement</span>
                <span>@(LegalCase.OralAgreeMent.HasValue ? (LegalCase.OralAgreeMent.Value ? "Yes" : "No") : "-")</span>


            </div>
            <div class="d-flex justify-content-between">
                <span>Case Program</span>
                <span>@CaseProgramList.FirstOrDefault(x => x.Id == LegalCase.CaseProgramId)?.Name</span>


            </div>
            <div class="d-flex justify-content-between">
                <span>Good Cause Applies?</span>
                <span>@(LegalCase.GoodCauseApplies.HasValue ? (LegalCase.GoodCauseApplies.Value ? "Yes" : "No") : "-")</span>

            </div>
            <div class="d-flex justify-content-between">
                <span>Date Tenant Moved</span>
                <span>@(LegalCase.DateTenantMoved.HasValue ? LegalCase.DateTenantMoved.Value.ToString("MM/dd/yyyy") : "-")</span>


            </div>
           
        }

        @if (CurrentStep == Step.Case)
        {

            
            <div class="d-flex justify-content-between">
                <span>Tenancy Type</span>
                <span>@TenancyTypeList.FirstOrDefault(x => x.Id == LegalCase.TenancyTypeId)?.Name</span>


            </div>
            <div class="d-flex justify-content-between">
                <span>Date Notice Served</span>
                <span>@(LegalCase.DateNoticeServed.HasValue ? LegalCase.DateNoticeServed.Value.ToString("MM/dd/yyyy") : "-")</span>


            </div>
            <div class="d-flex justify-content-between">
                <span>Notice Length</span>
                <span>@(!LegalCase.CalculatedNoticeLength.HasValue ? "-" : LegalCase.CalculatedNoticeLength)</span>

            </div>
            <div class="d-flex justify-content-between">
                <span>Expiration Date</span>
                <span>@(LegalCase.ExpirationDate.HasValue ? LegalCase.ExpirationDate.Value.ToString("MM/dd/yyyy") : "-")</span>


            </div>
            <div class="d-flex justify-content-between">
                <span>Predicate Notice</span>
                <span>@(string.IsNullOrWhiteSpace(LegalCase.PredicateNotice) ? "-" : LegalCase.PredicateNotice)</span>

            </div>
        }

    </div>
</div>

@code {

    [Parameter] public IntakeModel LegalCase { get; set; }
    [Parameter] public List<LandlordType> LandLordTypeList { get; set; } = new();
    [Parameter] public List<RegulationStatus> RegulationList { get; set; } = new();
    [Parameter] public List<IsUnitIllegal> IsUnitIllegalList { get; set; } = new();
    [Parameter] public List<DateRent> DateRentList { get; set; } = new();
    [Parameter] public List<CaseProgram> CaseProgramList { get; set; } = new();
    [Parameter] public List<TenancyType> TenancyTypeList { get; set; } = new();
    [Parameter] public List<CaseType> CaseTypeList { get; set; } = new();
    [Parameter] public List<EditToClientDto> ClientList { get; set; } = new();
    [Parameter] public Step CurrentStep { get; set; }
}

// <auto-generated />
using System;
using EvictionFiler.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EvictionFiler.Infrastructure.Migrations.Tenant
{
    [DbContext(typeof(TenantDbContext))]
    [Migration("20250819121356_initial ")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EvictionFiler.Domain.Entities.AdditioanlTenants", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("AdditioanlTenants");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Address2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ApartmentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuildingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingUnits")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LandlordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MDRNumber")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PetitionerInterest")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("PremiseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RegulationStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("LandlordId");

                    b.HasIndex("PremiseTypeId");

                    b.HasIndex("RegulationStatusId");

                    b.HasIndex("StateId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Address2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CellPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.LandLord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Address2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfRefreeDeed")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EINorSSN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LandLordCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LandlordTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TypeOfOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("LandlordTypeId");

                    b.HasIndex("StateId");

                    b.HasIndex("TypeOfOwnerId");

                    b.ToTable("LandLords");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.LegalCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attrney")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AttrneyContactInfo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("BuildingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaseName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CaseSubTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CaseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Casecode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfRefreeDeed")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateTenantMoved")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("ERAPPaymentReceivedDate")
                        .HasColumnType("date");

                    b.Property<string>("ExplainDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExplainTenancyReceiveDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("HasPossession")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsERAPPaymentReceived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IsUnitIllegalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LandLordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LandlordTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastMonthWeekRentPaid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LegalRepresentative")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("MonthlyRent")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("OralEnd")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("OralStart")
                        .HasColumnType("date");

                    b.Property<bool?>("OtherOccupants")
                        .HasColumnType("bit");

                    b.Property<string>("OtherPropertiesBuildingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReasonHoldoverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RegulationStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("RenewalOffer")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RenewalStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RentDueEachMonthOrWeekId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SocialServices")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("TenancyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("TenantRecord")
                        .HasColumnType("bit");

                    b.Property<double?>("TenantShare")
                        .HasColumnType("float");

                    b.Property<double?>("TotalRentOwed")
                        .HasColumnType("float");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("WrittenLease")
                        .HasColumnType("bit");

                    b.Property<bool?>("tenantReceive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("CaseSubTypeId");

                    b.HasIndex("CaseTypeId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ClientRoleId");

                    b.HasIndex("IsUnitIllegalId");

                    b.HasIndex("LandLordId");

                    b.HasIndex("LandlordTypeId");

                    b.HasIndex("ReasonHoldoverId");

                    b.HasIndex("RegulationStatusId");

                    b.HasIndex("RenewalStatusId");

                    b.HasIndex("RentDueEachMonthOrWeekId");

                    b.HasIndex("TenancyTypeId");

                    b.HasIndex("TenantId");

                    b.ToTable("LegalCases");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.CaseSubType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CaseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CaseTypeId");

                    b.ToTable("CaseSubType");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.CaseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CaseType");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.ClientRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ClientRole");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.DateRent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DateRent");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.IsUnitIllegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IsUnitIllegal");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.LandlordType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LandlordType");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.PremiseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PremiseType");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.ReasonHoldover", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReasonHoldover");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.RegulationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RegulationStatus");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.RenewalStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RenewalStatus");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.TenancyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TenancyType");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.TypeOfOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TypeOfOwner");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Additionaltenants")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Address2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("BuildinId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("ERAPPaymentReceivedDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("HasPossession")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasPriorCase")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRegulatedTenancy")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsERAPPaymentReceived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IsUnitIllegalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("MonthlyRent")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("MoveInDate")
                        .HasColumnType("date");

                    b.Property<bool?>("OtherOccupants")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("RenewalOffer")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RentDueEachMonthOrWeekId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SSN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SocialServices")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenancyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenantCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TenantRecord")
                        .HasColumnType("bit");

                    b.Property<double?>("TenantShare")
                        .HasColumnType("float");

                    b.Property<string>("UnitOrApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildinId");

                    b.HasIndex("IsUnitIllegalId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("RentDueEachMonthOrWeekId");

                    b.HasIndex("StateId");

                    b.HasIndex("TenancyTypeId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.AdditioanlTenants", b =>
                {
                    b.HasOne("EvictionFiler.Domain.Entities.Tenant", "Tenants")
                        .WithMany("AddTenants")
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenants");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Building", b =>
                {
                    b.HasOne("EvictionFiler.Domain.Entities.LandLord", "Landlord")
                        .WithMany("Buildings")
                        .HasForeignKey("LandlordId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.PremiseType", "PremiseType")
                        .WithMany()
                        .HasForeignKey("PremiseTypeId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.RegulationStatus", "RegulationStatus")
                        .WithMany()
                        .HasForeignKey("RegulationStatusId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.Navigation("Landlord");

                    b.Navigation("PremiseType");

                    b.Navigation("RegulationStatus");

                    b.Navigation("State");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Client", b =>
                {
                    b.HasOne("EvictionFiler.Domain.Entities.Master.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.Navigation("State");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.LandLord", b =>
                {
                    b.HasOne("EvictionFiler.Domain.Entities.Client", "Client")
                        .WithMany("LandLords")
                        .HasForeignKey("ClientId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.LandlordType", "LandlordType")
                        .WithMany()
                        .HasForeignKey("LandlordTypeId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.TypeOfOwner", "TypeOfOwner")
                        .WithMany()
                        .HasForeignKey("TypeOfOwnerId");

                    b.Navigation("Client");

                    b.Navigation("LandlordType");

                    b.Navigation("State");

                    b.Navigation("TypeOfOwner");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.LegalCase", b =>
                {
                    b.HasOne("EvictionFiler.Domain.Entities.Building", "Buildings")
                        .WithMany()
                        .HasForeignKey("BuildingId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.CaseSubType", "CaseSubType")
                        .WithMany()
                        .HasForeignKey("CaseSubTypeId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.CaseType", "CaseType")
                        .WithMany()
                        .HasForeignKey("CaseTypeId");

                    b.HasOne("EvictionFiler.Domain.Entities.Client", "Clients")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.ClientRole", "ClientRole")
                        .WithMany()
                        .HasForeignKey("ClientRoleId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.IsUnitIllegal", "IsUnitIllegal")
                        .WithMany()
                        .HasForeignKey("IsUnitIllegalId");

                    b.HasOne("EvictionFiler.Domain.Entities.LandLord", "LandLords")
                        .WithMany()
                        .HasForeignKey("LandLordId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.LandlordType", "LandlordType")
                        .WithMany()
                        .HasForeignKey("LandlordTypeId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.ReasonHoldover", "ReasonHoldover")
                        .WithMany()
                        .HasForeignKey("ReasonHoldoverId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.RegulationStatus", "RegulationStatus")
                        .WithMany()
                        .HasForeignKey("RegulationStatusId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.RenewalStatus", "RenewalStatus")
                        .WithMany()
                        .HasForeignKey("RenewalStatusId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.DateRent", "RentDueEachMonthOrWeek")
                        .WithMany()
                        .HasForeignKey("RentDueEachMonthOrWeekId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.TenancyType", "TenancyType")
                        .WithMany()
                        .HasForeignKey("TenancyTypeId");

                    b.HasOne("EvictionFiler.Domain.Entities.Tenant", "Tenants")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Buildings");

                    b.Navigation("CaseSubType");

                    b.Navigation("CaseType");

                    b.Navigation("ClientRole");

                    b.Navigation("Clients");

                    b.Navigation("IsUnitIllegal");

                    b.Navigation("LandLords");

                    b.Navigation("LandlordType");

                    b.Navigation("ReasonHoldover");

                    b.Navigation("RegulationStatus");

                    b.Navigation("RenewalStatus");

                    b.Navigation("RentDueEachMonthOrWeek");

                    b.Navigation("TenancyType");

                    b.Navigation("Tenants");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Master.CaseSubType", b =>
                {
                    b.HasOne("EvictionFiler.Domain.Entities.Master.CaseType", "CaseTypes")
                        .WithMany()
                        .HasForeignKey("CaseTypeId");

                    b.Navigation("CaseTypes");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Tenant", b =>
                {
                    b.HasOne("EvictionFiler.Domain.Entities.Building", "Building")
                        .WithMany("Tenants")
                        .HasForeignKey("BuildinId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.IsUnitIllegal", "IsUnitIllegal")
                        .WithMany()
                        .HasForeignKey("IsUnitIllegalId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.DateRent", "RentDueEachMonthOrWeek")
                        .WithMany()
                        .HasForeignKey("RentDueEachMonthOrWeekId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("EvictionFiler.Domain.Entities.Master.TenancyType", "TenancyType")
                        .WithMany()
                        .HasForeignKey("TenancyTypeId");

                    b.Navigation("Building");

                    b.Navigation("IsUnitIllegal");

                    b.Navigation("Language");

                    b.Navigation("RentDueEachMonthOrWeek");

                    b.Navigation("State");

                    b.Navigation("TenancyType");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Building", b =>
                {
                    b.Navigation("Tenants");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Client", b =>
                {
                    b.Navigation("LandLords");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.LandLord", b =>
                {
                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("EvictionFiler.Domain.Entities.Tenant", b =>
                {
                    b.Navigation("AddTenants");
                });
#pragma warning restore 612, 618
        }
    }
}
